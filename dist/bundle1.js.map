{"version":3,"file":"bundle1.js","mappings":"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,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,QAAY,UAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,YACxC,CAAI,WAAY,WAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,UAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,UAAY,WAAY,WACpC,UAAY,WAAY,SAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,WAAY,UAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,YACxC,CAAI,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,SACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,SAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,QAAY,UACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,YACxC,CAAI,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,SACpC,WAAY,SAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,SAAY,SACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,UACpC,WAAY,WAAY,SAAY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,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,UAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,WAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,WACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,UAAY,WACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,WAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,WACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,YACnEA,EAAe,UAAY,YAAaA,EAAe,UAAY,WACnEA,EAAe,UAAY,WAAaA,EAAe,UAAY,YACnEA,EAAe,WAAY,WAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,YAAaA,EAAe,WAAY,YACnEA,EAAe,WAAY,W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,QAAU,EACV,QAAU,SACV,QAAU,SACV,QAAU,MACV,QAAU,MACV,QAAU,IACV,QAAU,EACV,QAAU,IACV,SAAU,SACV,SAAU,MACV,SAAU,MACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAW,SACX,SAAW,MACX,SAAW,MACX,SAAW,SACX,SAAW,IACX,SAAW,SACX,SAAW,SACX,SAAW,EACX,SAAW,SACX,SAAW,SACX,SAAW,EACX,SAAW,MACX,SAAW,SACX,SAAW,IACX,SAAW,MACX,SAAW,SACX,SAAW,SACX,SAAW,IACX,SAAW,SACX,SAAW,EACX,SAAW,MACX,SAAW,SACX,SAAW,IACX,SAAW,SACX,SAAW,MACX,SAAW,SACX,SAAW,MACX,SAAW,SACX,SAAW,SACX,SAAW,SACX,SAAW,EACX,SAAW,OAEf,CACI,EAAK,WACL,MAAS,WACT,OAAS,QACT,OAAS,WACT,OAAS,EACT,OAAS,QACT,OAAS,WACT,OAAS,QACT,OAAS,WACT,OAAS,QACT,OAAS,GACT,OAAS,WACT,OAAS,WACT,OAAS,KACT,OAAS,KACT,OAAS,WACT,MAAQ,WACR,MAAS,GACT,OAAS,WACT,OAAS,WACT,OAAS,QACT,OAAS,WACT,OAAS,EACT,OAAS,WACT,OAAS,KACT,OAAS,WACT,OAAS,QACT,OAAS,KACT,OAAS,WACT,OAAS,QACT,OAAS,QACT,QAAS,WACT,QAAU,QACV,QAAU,QACV,QAAU,WACV,QAAU,EACV,QAAU,KACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,WACV,QAAU,QACV,QAAU,WACV,QAAU,QACV,QAAU,GACV,QAAU,KACV,QAAU,WACV,QAAU,WACV,QAAU,EACV,QAAU,QACV,QAAU,QACV,QAAU,WACV,QAAU,WACV,QAAU,GACV,QAAU,WACV,QAAU,KACV,QAAU,WACV,QAAU,WACV,QAAU,KACV,QAAU,WACV,QAAU,QACV,QAAU,SAEd,CACI,EAAK,IACL,KAAQ,SACR,KAAQ,OACR,MAAQ,UACR,MAAQ,UACR,MAAQ,SACR,MAAQ,UACR,MAAQ,OACR,MAAQ,SACR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","sources":["webpack://tokenization/webpack/runtime/load script","webpack://tokenization/./node_modules/@ethereumjs/rlp/dist/index.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/account.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/address.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/asyncEventEmitter.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/bytes.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/constants.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/encoding.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/helpers.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/index.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/internal.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/lock.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/provider.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/signature.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/types.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/units.js","webpack://tokenization/./node_modules/@ethereumjs/util/dist/withdrawal.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/abi.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/errors.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/index.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/iterator.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/packer.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/parsers/address.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/parsers/array.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/parsers/bool.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/parsers/bytes.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/parsers/fixed-bytes.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/parsers/function.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/parsers/index.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/parsers/number.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/parsers/parser.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/parsers/string.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/parsers/tuple.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/types/abi.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/types/index.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/utils/buffer.js","webpack://tokenization/./node_modules/@metamask/abi-utils/dist/utils/index.js","webpack://tokenization/./node_modules/@metamask/eth-sig-util/dist/encryption.js","webpack://tokenization/./node_modules/@metamask/eth-sig-util/dist/index.js","webpack://tokenization/./node_modules/@metamask/eth-sig-util/dist/personal-sign.js","webpack://tokenization/./node_modules/@metamask/eth-sig-util/dist/sign-typed-data.js","webpack://tokenization/./node_modules/@metamask/eth-sig-util/dist/utils.js","webpack://tokenization/./node_modules/@metamask/eth-sig-util/node_modules/tweetnacl/nacl-fast.js","webpack://tokenization/./node_modules/@metamask/utils/node_modules/@scure/base/lib/index.js","webpack://tokenization/./node_modules/@noble/hashes/_assert.js","webpack://tokenization/./node_modules/@noble/hashes/_u64.js","webpack://tokenization/./node_modules/@noble/hashes/crypto.js","webpack://tokenization/./node_modules/@noble/hashes/sha3.js","webpack://tokenization/./node_modules/@noble/hashes/utils.js","webpack://tokenization/./node_modules/@scure/base/lib/index.js","webpack://tokenization/./node_modules/assert/assert.js","webpack://tokenization/./node_modules/assert/node_modules/inherits/inherits_browser.js","webpack://tokenization/./node_modules/assert/node_modules/util/support/isBufferBrowser.js","webpack://tokenization/./node_modules/assert/node_modules/util/util.js","webpack://tokenization/./node_modules/base64-js/index.js","webpack://tokenization/./node_modules/browserify-zlib/lib/binding.js","webpack://tokenization/./node_modules/browserify-zlib/lib/index.js","webpack://tokenization/./node_modules/buffer/index.js","webpack://tokenization/./node_modules/builtin-status-codes/browser.js","webpack://tokenization/./node_modules/call-bind-apply-helpers/actualApply.js","webpack://tokenization/./node_modules/call-bind-apply-helpers/applyBind.js","webpack://tokenization/./node_modules/call-bind-apply-helpers/functionApply.js","webpack://tokenization/./node_modules/call-bind-apply-helpers/functionCall.js","webpack://tokenization/./node_modules/call-bind-apply-helpers/index.js","webpack://tokenization/./node_modules/call-bind-apply-helpers/reflectApply.js","webpack://tokenization/./node_modules/call-bind/callBound.js","webpack://tokenization/./node_modules/call-bind/index.js","webpack://tokenization/./node_modules/call-bound/index.js","webpack://tokenization/./node_modules/call-bound/node_modules/get-intrinsic/index.js","webpack://tokenization/./node_modules/crypto-js/aes.js","webpack://tokenization/./node_modules/crypto-js/blowfish.js","webpack://tokenization/./node_modules/crypto-js/cipher-core.js","webpack://tokenization/./node_modules/crypto-js/core.js","webpack://tokenization/./node_modules/crypto-js/enc-base64.js","webpack://tokenization/./node_modules/crypto-js/enc-base64url.js","webpack://tokenization/./node_modules/crypto-js/enc-utf16.js","webpack://tokenization/./node_modules/crypto-js/evpkdf.js","webpack://tokenization/./node_modules/crypto-js/format-hex.js","webpack://tokenization/./node_modules/crypto-js/hmac.js","webpack://tokenization/./node_modules/crypto-js/index.js","webpack://tokenization/./node_modules/crypto-js/lib-typedarrays.js","webpack://tokenization/./node_modules/crypto-js/md5.js","webpack://tokenization/./node_modules/crypto-js/mode-cfb.js","webpack://tokenization/./node_modules/crypto-js/mode-ctr-gladman.js","webpack://tokenization/./node_modules/crypto-js/mode-ctr.js","webpack://tokenization/./node_modules/crypto-js/mode-ecb.js","webpack://tokenization/./node_modules/crypto-js/mode-ofb.js","webpack://tokenization/./node_modules/crypto-js/pad-ansix923.js","webpack://tokenization/./node_modules/crypto-js/pad-iso10126.js","webpack://tokenization/./node_modules/crypto-js/pad-iso97971.js","webpack://tokenization/./node_modules/crypto-js/pad-nopadding.js","webpack://tokenization/./node_modules/crypto-js/pad-zeropadding.js","webpack://tokenization/./node_modules/crypto-js/pbkdf2.js","webpack://tokenization/./node_modules/crypto-js/rabbit-legacy.js","webpack://tokenization/./node_modules/crypto-js/rabbit.js","webpack://tokenization/./node_modules/crypto-js/rc4.js","webpack://tokenization/./node_modules/crypto-js/ripemd160.js","webpack://tokenization/./node_modules/crypto-js/sha1.js","webpack://tokenization/./node_modules/crypto-js/sha224.js","webpack://tokenization/./node_modules/crypto-js/sha256.js","webpack://tokenization/./node_modules/crypto-js/sha3.js","webpack://tokenization/./node_modules/crypto-js/sha384.js","webpack://tokenization/./node_modules/crypto-js/sha512.js","webpack://tokenization/./node_modules/crypto-js/tripledes.js","webpack://tokenization/./node_modules/crypto-js/x64-core.js","webpack://tokenization/./node_modules/debug/src/browser.js","webpack://tokenization/./node_modules/debug/src/common.js","webpack://tokenization/./node_modules/define-data-property/index.js","webpack://tokenization/./node_modules/dunder-proto/get.js","webpack://tokenization/./node_modules/es-define-property/index.js","webpack://tokenization/./node_modules/es-errors/eval.js","webpack://tokenization/./node_modules/es-errors/index.js","webpack://tokenization/./node_modules/es-errors/range.js","webpack://tokenization/./node_modules/es-errors/ref.js","webpack://tokenization/./node_modules/es-errors/syntax.js","webpack://tokenization/./node_modules/es-errors/type.js","webpack://tokenization/./node_modules/es-errors/uri.js","webpack://tokenization/./node_modules/es-object-atoms/index.js","webpack://tokenization/./node_modules/ethereum-cryptography/keccak.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/curves/_shortw_utils.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/curves/abstract/curve.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/curves/abstract/hash-to-curve.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/curves/abstract/modular.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/curves/abstract/utils.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/curves/abstract/weierstrass.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/curves/secp256k1.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/hashes/_assert.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/hashes/_md.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/hashes/_u64.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/hashes/crypto.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/hashes/hmac.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/hashes/sha256.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/hashes/sha3.js","webpack://tokenization/./node_modules/ethereum-cryptography/node_modules/@noble/hashes/utils.js","webpack://tokenization/./node_modules/ethereum-cryptography/secp256k1.js","webpack://tokenization/./node_modules/ethereum-cryptography/utils.js","webpack://tokenization/./node_modules/events/events.js","webpack://tokenization/./node_modules/for-each/index.js","webpack://tokenization/./node_modules/function-bind/implementation.js","webpack://tokenization/./node_modules/function-bind/index.js","webpack://tokenization/./node_modules/get-intrinsic/index.js","webpack://tokenization/./node_modules/gopd/gOPD.js","webpack://tokenization/./node_modules/gopd/index.js","webpack://tokenization/./node_modules/has-property-descriptors/index.js","webpack://tokenization/./node_modules/has-symbols/index.js","webpack://tokenization/./node_modules/has-symbols/shams.js","webpack://tokenization/./node_modules/has-tostringtag/shams.js","webpack://tokenization/./node_modules/hasown/index.js","webpack://tokenization/./node_modules/https-browserify/index.js","webpack://tokenization/./node_modules/ieee754/index.js","webpack://tokenization/./node_modules/inherits/inherits_browser.js","webpack://tokenization/./node_modules/is-arguments/index.js","webpack://tokenization/./node_modules/is-callable/index.js","webpack://tokenization/./node_modules/is-generator-function/index.js","webpack://tokenization/./node_modules/is-typed-array/index.js","webpack://tokenization/./node_modules/math-intrinsics/abs.js","webpack://tokenization/./node_modules/math-intrinsics/floor.js","webpack://tokenization/./node_modules/math-intrinsics/max.js","webpack://tokenization/./node_modules/math-intrinsics/min.js","webpack://tokenization/./node_modules/math-intrinsics/pow.js","webpack://tokenization/./node_modules/micro-ftch/index.js","webpack://tokenization/./node_modules/ms/index.js","webpack://tokenization/./node_modules/object-inspect/index.js","webpack://tokenization/./node_modules/object-keys/implementation.js","webpack://tokenization/./node_modules/object-keys/index.js","webpack://tokenization/./node_modules/object-keys/isArguments.js","webpack://tokenization/./node_modules/object.assign/implementation.js","webpack://tokenization/./node_modules/object.assign/polyfill.js","webpack://tokenization/./node_modules/pako/lib/utils/common.js","webpack://tokenization/./node_modules/pako/lib/zlib/adler32.js","webpack://tokenization/./node_modules/pako/lib/zlib/constants.js","webpack://tokenization/./node_modules/pako/lib/zlib/crc32.js","webpack://tokenization/./node_modules/pako/lib/zlib/deflate.js","webpack://tokenization/./node_modules/pako/lib/zlib/inffast.js","webpack://tokenization/./node_modules/pako/lib/zlib/inflate.js","webpack://tokenization/./node_modules/pako/lib/zlib/inftrees.js","webpack://tokenization/./node_modules/pako/lib/zlib/messages.js","webpack://tokenization/./node_modules/pako/lib/zlib/trees.js","webpack://tokenization/./node_modules/pako/lib/zlib/zstream.js","webpack://tokenization/./node_modules/pony-cause/index.js","webpack://tokenization/./node_modules/pony-cause/lib/error-with-cause.js","webpack://tokenization/./node_modules/pony-cause/lib/helpers.js","webpack://tokenization/./node_modules/possible-typed-array-names/index.js","webpack://tokenization/./node_modules/process/browser.js","webpack://tokenization/./node_modules/readable-stream/errors-browser.js","webpack://tokenization/./node_modules/readable-stream/lib/_stream_duplex.js","webpack://tokenization/./node_modules/readable-stream/lib/_stream_passthrough.js","webpack://tokenization/./node_modules/readable-stream/lib/_stream_readable.js","webpack://tokenization/./node_modules/readable-stream/lib/_stream_transform.js","webpack://tokenization/./node_modules/readable-stream/lib/_stream_writable.js","webpack://tokenization/./node_modules/readable-stream/lib/internal/streams/async_iterator.js","webpack://tokenization/./node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack://tokenization/./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://tokenization/./node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack://tokenization/./node_modules/readable-stream/lib/internal/streams/from-browser.js","webpack://tokenization/./node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack://tokenization/./node_modules/readable-stream/lib/internal/streams/state.js","webpack://tokenization/./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack://tokenization/./node_modules/readable-stream/readable-browser.js","webpack://tokenization/./node_modules/safe-buffer/index.js","webpack://tokenization/./node_modules/semver/classes/comparator.js","webpack://tokenization/./node_modules/semver/classes/range.js","webpack://tokenization/./node_modules/semver/classes/semver.js","webpack://tokenization/./node_modules/semver/functions/clean.js","webpack://tokenization/./node_modules/semver/functions/cmp.js","webpack://tokenization/./node_modules/semver/functions/coerce.js","webpack://tokenization/./node_modules/semver/functions/compare-build.js","webpack://tokenization/./node_modules/semver/functions/compare-loose.js","webpack://tokenization/./node_modules/semver/functions/compare.js","webpack://tokenization/./node_modules/semver/functions/diff.js","webpack://tokenization/./node_modules/semver/functions/eq.js","webpack://tokenization/./node_modules/semver/functions/gt.js","webpack://tokenization/./node_modules/semver/functions/gte.js","webpack://tokenization/./node_modules/semver/functions/inc.js","webpack://tokenization/./node_modules/semver/functions/lt.js","webpack://tokenization/./node_modules/semver/functions/lte.js","webpack://tokenization/./node_modules/semver/functions/major.js","webpack://tokenization/./node_modules/semver/functions/minor.js","webpack://tokenization/./node_modules/semver/functions/neq.js","webpack://tokenization/./node_modules/semver/functions/parse.js","webpack://tokenization/./node_modules/semver/functions/patch.js","webpack://tokenization/./node_modules/semver/functions/prerelease.js","webpack://tokenization/./node_modules/semver/functions/rcompare.js","webpack://tokenization/./node_modules/semver/functions/rsort.js","webpack://tokenization/./node_modules/semver/functions/satisfies.js","webpack://tokenization/./node_modules/semver/functions/sort.js","webpack://tokenization/./node_modules/semver/functions/valid.js","webpack://tokenization/./node_modules/semver/index.js","webpack://tokenization/./node_modules/semver/internal/constants.js","webpack://tokenization/./node_modules/semver/internal/debug.js","webpack://tokenization/./node_modules/semver/internal/identifiers.js","webpack://tokenization/./node_modules/semver/internal/lrucache.js","webpack://tokenization/./node_modules/semver/internal/parse-options.js","webpack://tokenization/./node_modules/semver/internal/re.js","webpack://tokenization/./node_modules/semver/ranges/gtr.js","webpack://tokenization/./node_modules/semver/ranges/intersects.js","webpack://tokenization/./node_modules/semver/ranges/ltr.js","webpack://tokenization/./node_modules/semver/ranges/max-satisfying.js","webpack://tokenization/./node_modules/semver/ranges/min-satisfying.js","webpack://tokenization/./node_modules/semver/ranges/min-version.js","webpack://tokenization/./node_modules/semver/ranges/outside.js","webpack://tokenization/./node_modules/semver/ranges/simplify.js","webpack://tokenization/./node_modules/semver/ranges/subset.js","webpack://tokenization/./node_modules/semver/ranges/to-comparators.js","webpack://tokenization/./node_modules/semver/ranges/valid.js","webpack://tokenization/./node_modules/set-function-length/index.js","webpack://tokenization/./node_modules/side-channel/index.js","webpack://tokenization/./node_modules/stream-browserify/index.js","webpack://tokenization/./node_modules/stream-http/index.js","webpack://tokenization/./node_modules/stream-http/lib/capability.js","webpack://tokenization/./node_modules/stream-http/lib/request.js","webpack://tokenization/./node_modules/stream-http/lib/response.js","webpack://tokenization/./node_modules/string_decoder/lib/string_decoder.js","webpack://tokenization/./node_modules/url/node_modules/punycode/punycode.js","webpack://tokenization/./node_modules/url/node_modules/qs/lib/formats.js","webpack://tokenization/./node_modules/url/node_modules/qs/lib/index.js","webpack://tokenization/./node_modules/url/node_modules/qs/lib/parse.js","webpack://tokenization/./node_modules/url/node_modules/qs/lib/stringify.js","webpack://tokenization/./node_modules/url/node_modules/qs/lib/utils.js","webpack://tokenization/./node_modules/url/url.js","webpack://tokenization/./node_modules/util-deprecate/browser.js","webpack://tokenization/./node_modules/util/support/isBufferBrowser.js","webpack://tokenization/./node_modules/util/support/types.js","webpack://tokenization/./node_modules/util/util.js","webpack://tokenization/./node_modules/which-typed-array/index.js","webpack://tokenization/./node_modules/xtend/immutable.js","webpack://tokenization/./node_modules/@metamask/superstruct/dist/error.cjs","webpack://tokenization/./node_modules/@metamask/superstruct/dist/index.cjs","webpack://tokenization/./node_modules/@metamask/superstruct/dist/struct.cjs","webpack://tokenization/./node_modules/@metamask/superstruct/dist/structs/coercions.cjs","webpack://tokenization/./node_modules/@metamask/superstruct/dist/structs/refinements.cjs","webpack://tokenization/./node_modules/@metamask/superstruct/dist/structs/types.cjs","webpack://tokenization/./node_modules/@metamask/superstruct/dist/structs/utilities.cjs","webpack://tokenization/./node_modules/@metamask/superstruct/dist/utils.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/assert.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/base64.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/bytes.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/caip-types.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/checksum.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/coercers.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/collections.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/encryption-types.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/errors.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/hex.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/index.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/json.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/keyring.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/logging.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/misc.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/number.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/opaque.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/promise.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/time.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/transaction-types.cjs","webpack://tokenization/./node_modules/@metamask/utils/dist/versions.cjs","webpack://tokenization/./node_modules/available-typed-arrays/index.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/uint8-array.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/storage/upload/helpers.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/type-guards.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/storage/upload.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/json.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/caching/lru.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/detect-platform.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/version.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/process.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/fetch.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/jwt/is-jwt.js","webpack://tokenization/webpack/bootstrap","webpack://tokenization/webpack/runtime/compat get default export","webpack://tokenization/webpack/runtime/define property getters","webpack://tokenization/webpack/runtime/ensure chunk","webpack://tokenization/webpack/runtime/get javascript chunk filename","webpack://tokenization/webpack/runtime/global","webpack://tokenization/webpack/runtime/hasOwnProperty shorthand","webpack://tokenization/webpack/runtime/make namespace object","webpack://tokenization/webpack/runtime/node module decorator","webpack://tokenization/webpack/runtime/publicPath","webpack://tokenization/webpack/runtime/jsonp chunk loading","webpack://tokenization/./node_modules/ethers/lib.esm/_version.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/properties.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/errors.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/data.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/maths.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/coders/abstract-coder.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/hashes/esm/_assert.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/hashes/esm/_u64.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/hashes/esm/crypto.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/hashes/esm/utils.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/hashes/esm/sha3.js","webpack://tokenization/./node_modules/ethers/lib.esm/crypto/keccak.js","webpack://tokenization/./node_modules/ethers/lib.esm/address/address.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/typed.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/coders/address.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/coders/anonymous.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/coders/array.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/coders/boolean.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/coders/bytes.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/coders/fixed-bytes.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/coders/null.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/coders/number.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/utf8.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/coders/string.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/coders/tuple.js","webpack://tokenization/./node_modules/ethers/lib.esm/hash/id.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/fragments.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/abi-coder.js","webpack://tokenization/./node_modules/ethers/lib.esm/address/checks.js","webpack://tokenization/./node_modules/ethers/lib.esm/hash/typed-data.js","webpack://tokenization/./node_modules/ethers/lib.esm/transaction/accesslist.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/geturl-browser.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/fetch.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/base64-browser.js","webpack://tokenization/./node_modules/ethers/lib.esm/constants/addresses.js","webpack://tokenization/./node_modules/ethers/lib.esm/abi/interface.js","webpack://tokenization/./node_modules/ethers/lib.esm/providers/provider.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/events.js","webpack://tokenization/./node_modules/ethers/lib.esm/contract/wrappers.js","webpack://tokenization/./node_modules/ethers/lib.esm/contract/contract.js","webpack://tokenization/./node_modules/ethers/node_modules/@adraffy/ens-normalize/dist/index.mjs","webpack://tokenization/./node_modules/ethers/lib.esm/hash/namehash.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/hashes/esm/hmac.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/hashes/esm/pbkdf2.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/hashes/esm/_sha2.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/hashes/esm/sha256.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/hashes/esm/sha512.js","webpack://tokenization/./node_modules/ethers/lib.esm/crypto/crypto-browser.js","webpack://tokenization/./node_modules/ethers/lib.esm/crypto/sha2.js","webpack://tokenization/./node_modules/ethers/lib.esm/constants/hashes.js","webpack://tokenization/./node_modules/ethers/lib.esm/crypto/signature.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/curves/esm/abstract/utils.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/curves/esm/abstract/modular.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/curves/esm/abstract/curve.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/curves/esm/_shortw_utils.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/curves/esm/secp256k1.js","webpack://tokenization/./node_modules/ethers/lib.esm/crypto/signing-key.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/rlp-decode.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/rlp-encode.js","webpack://tokenization/./node_modules/ethers/lib.esm/transaction/address.js","webpack://tokenization/./node_modules/ethers/lib.esm/transaction/transaction.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/base58.js","webpack://tokenization/./node_modules/ethers/lib.esm/providers/ens-resolver.js","webpack://tokenization/./node_modules/ethers/lib.esm/providers/format.js","webpack://tokenization/./node_modules/ethers/lib.esm/address/contract-address.js","webpack://tokenization/./node_modules/ethers/lib.esm/providers/plugins-network.js","webpack://tokenization/./node_modules/ethers/lib.esm/providers/network.js","webpack://tokenization/./node_modules/ethers/lib.esm/providers/subscriber-polling.js","webpack://tokenization/./node_modules/ethers/lib.esm/providers/abstract-provider.js","webpack://tokenization/./node_modules/ethers/lib.esm/providers/abstract-signer.js","webpack://tokenization/./node_modules/ethers/lib.esm/providers/subscriber-filterid.js","webpack://tokenization/./node_modules/ethers/lib.esm/providers/provider-jsonrpc.js","webpack://tokenization/./node_modules/ethers/lib.esm/wallet/base-wallet.js","webpack://tokenization/./node_modules/ethers/lib.esm/hash/message.js","webpack://tokenization/./node_modules/ethers/lib.esm/constants/strings.js","webpack://tokenization/./node_modules/ethers/lib.esm/crypto/hmac.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/hashes/esm/ripemd160.js","webpack://tokenization/./node_modules/ethers/lib.esm/crypto/ripemd160.js","webpack://tokenization/./node_modules/ethers/lib.esm/crypto/random.js","webpack://tokenization/./node_modules/ethers/lib.esm/wordlists/decode-owl.js","webpack://tokenization/./node_modules/ethers/lib.esm/wordlists/wordlist.js","webpack://tokenization/./node_modules/ethers/lib.esm/wordlists/wordlist-owl.js","webpack://tokenization/./node_modules/ethers/lib.esm/wordlists/lang-en.js","webpack://tokenization/./node_modules/ethers/lib.esm/crypto/pbkdf2.js","webpack://tokenization/./node_modules/ethers/lib.esm/wallet/mnemonic.js","webpack://tokenization/./node_modules/aes-js/lib.esm/aes.js","webpack://tokenization/./node_modules/aes-js/lib.esm/mode.js","webpack://tokenization/./node_modules/aes-js/lib.esm/mode-cbc.js","webpack://tokenization/./node_modules/aes-js/lib.esm/mode-cfb.js","webpack://tokenization/./node_modules/aes-js/lib.esm/mode-ctr.js","webpack://tokenization/./node_modules/aes-js/lib.esm/mode-ofb.js","webpack://tokenization/./node_modules/ethers/node_modules/@noble/hashes/esm/scrypt.js","webpack://tokenization/./node_modules/ethers/lib.esm/crypto/scrypt.js","webpack://tokenization/./node_modules/ethers/lib.esm/utils/uuid.js","webpack://tokenization/./node_modules/ethers/lib.esm/wallet/utils.js","webpack://tokenization/./node_modules/ethers/lib.esm/wallet/json-keystore.js","webpack://tokenization/./node_modules/ethers/lib.esm/wallet/hdwallet.js","webpack://tokenization/./node_modules/ethers/lib.esm/wallet/json-crowdsale.js","webpack://tokenization/./node_modules/aes-js/lib.esm/padding.js","webpack://tokenization/./node_modules/ethers/lib.esm/wallet/wallet.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/storage/download.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/ipfs.js","webpack://tokenization/./node_modules/ox/_esm/core/Errors.js","webpack://tokenization/./node_modules/ox/_esm/core/internal/hex.js","webpack://tokenization/./node_modules/ox/_esm/core/Hex.js","webpack://tokenization/./node_modules/ox/_esm/core/Json.js","webpack://tokenization/./node_modules/ox/_esm/core/internal/bytes.js","webpack://tokenization/./node_modules/ox/_esm/core/Bytes.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/encoding/to-bytes.js","webpack://tokenization/./node_modules/@noble/hashes/esm/_assert.js","webpack://tokenization/./node_modules/@noble/hashes/esm/utils.js","webpack://tokenization/./node_modules/@noble/hashes/esm/_md.js","webpack://tokenization/./node_modules/@noble/hashes/esm/sha256.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/hashing/sha256.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/encoding/helpers/is-hex.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/utils/client-id.js","webpack://tokenization/./test1.js","webpack://tokenization/./node_modules/thirdweb/dist/esm/client/client.js"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"tokenization:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RLP = exports.utils = exports.decode = exports.encode = void 0;\n/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        const output = [];\n        let outputLength = 0;\n        for (let i = 0; i < input.length; i++) {\n            const encoded = encode(input[i]);\n            output.push(encoded);\n            outputLength += encoded.length;\n        }\n        return concatBytes(encodeLength(outputLength, 192), ...output);\n    }\n    const inputBuf = toBytes(input);\n    if (inputBuf.length === 1 && inputBuf[0] < 128) {\n        return inputBuf;\n    }\n    return concatBytes(encodeLength(inputBuf.length, 128), inputBuf);\n}\nexports.encode = encode;\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input, start, end) {\n    if (end > input.length) {\n        throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds');\n    }\n    return input.slice(start, end);\n}\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v) {\n    if (v[0] === 0) {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseHexByte(bytesToHex(v));\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Uint8Array.from([len + offset]);\n    }\n    const hexLength = numberToHex(len);\n    const lLength = hexLength.length / 2;\n    const firstByte = numberToHex(offset + 55 + lLength);\n    return Uint8Array.from(hexToBytes(firstByte + hexLength));\n}\nfunction decode(input, stream = false) {\n    if (typeof input === 'undefined' || input === null || input.length === 0) {\n        return Uint8Array.from([]);\n    }\n    const inputBytes = toBytes(input);\n    const decoded = _decode(inputBytes);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid RLP: remainder must be zero');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    let length, llength, data, innerRemainder, d;\n    const decoded = [];\n    const firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Uint8Array.from([]);\n        }\n        else {\n            data = safeSlice(input, 1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed');\n        }\n        return {\n            data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = safeSlice(input, llength, length + llength);\n        return {\n            data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between 0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = safeSlice(input, 1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length < 56) {\n            throw new Error('invalid RLP: encoded list too short');\n        }\n        const totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid RLP: total length is larger than the data');\n        }\n        innerRemainder = safeSlice(input, llength, totalLength);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    // Pre-caching chars with `cachedHexes` speeds this up 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += cachedHexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction parseHexByte(hexByte) {\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error('Invalid byte sequence');\n    return byte;\n}\n// Caching slows it down 2-3x\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = parseHexByte(hex.slice(j, j + 2));\n    }\n    return array;\n}\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction utf8ToBytes(utf) {\n    return new TextEncoder().encode(utf);\n}\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    const hex = integer.toString(16);\n    return hex.length % 2 ? `0${hex}` : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? `0${a}` : a;\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.length >= 2 && str[0] === '0' && str[1] === 'x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform anything into a Uint8Array */\nfunction toBytes(v) {\n    if (v instanceof Uint8Array) {\n        return v;\n    }\n    if (typeof v === 'string') {\n        if (isHexPrefixed(v)) {\n            return hexToBytes(padToEven(stripHexPrefix(v)));\n        }\n        return utf8ToBytes(v);\n    }\n    if (typeof v === 'number' || typeof v === 'bigint') {\n        if (!v) {\n            return Uint8Array.from([]);\n        }\n        return hexToBytes(numberToHex(v));\n    }\n    if (v === null || v === undefined) {\n        return Uint8Array.from([]);\n    }\n    throw new Error('toBytes: received unsupported type ' + typeof v);\n}\nexports.utils = {\n    bytesToHex,\n    concatBytes,\n    hexToBytes,\n    utf8ToBytes,\n};\nexports.RLP = { encode, decode };\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.accountBodyToRLP = exports.accountBodyToSlim = exports.accountBodyFromSlim = exports.isZeroAddress = exports.zeroAddress = exports.importPublic = exports.privateToAddress = exports.privateToPublic = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isValidAddress = exports.Account = void 0;\nconst rlp_1 = require(\"@ethereumjs/rlp\");\nconst keccak_1 = require(\"ethereum-cryptography/keccak\");\nconst secp256k1_1 = require(\"ethereum-cryptography/secp256k1\");\nconst utils_1 = require(\"ethereum-cryptography/utils\");\nconst bytes_1 = require(\"./bytes\");\nconst constants_1 = require(\"./constants\");\nconst helpers_1 = require(\"./helpers\");\nconst internal_1 = require(\"./internal\");\nconst _0n = BigInt(0);\nclass Account {\n    /**\n     * This constructor assigns and validates the values.\n     * Use the static factory methods to assist in creating an Account from varying data types.\n     */\n    constructor(nonce = _0n, balance = _0n, storageRoot = constants_1.KECCAK256_RLP, codeHash = constants_1.KECCAK256_NULL) {\n        this.nonce = nonce;\n        this.balance = balance;\n        this.storageRoot = storageRoot;\n        this.codeHash = codeHash;\n        this._validate();\n    }\n    static fromAccountData(accountData) {\n        const { nonce, balance, storageRoot, codeHash } = accountData;\n        return new Account(nonce !== undefined ? (0, bytes_1.bufferToBigInt)((0, bytes_1.toBuffer)(nonce)) : undefined, balance !== undefined ? (0, bytes_1.bufferToBigInt)((0, bytes_1.toBuffer)(balance)) : undefined, storageRoot !== undefined ? (0, bytes_1.toBuffer)(storageRoot) : undefined, codeHash !== undefined ? (0, bytes_1.toBuffer)(codeHash) : undefined);\n    }\n    static fromRlpSerializedAccount(serialized) {\n        const values = (0, bytes_1.arrToBufArr)(rlp_1.RLP.decode(Uint8Array.from(serialized)));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized account input. Must be array');\n        }\n        return this.fromValuesArray(values);\n    }\n    static fromValuesArray(values) {\n        const [nonce, balance, storageRoot, codeHash] = values;\n        return new Account((0, bytes_1.bufferToBigInt)(nonce), (0, bytes_1.bufferToBigInt)(balance), storageRoot, codeHash);\n    }\n    _validate() {\n        if (this.nonce < _0n) {\n            throw new Error('nonce must be greater than zero');\n        }\n        if (this.balance < _0n) {\n            throw new Error('balance must be greater than zero');\n        }\n        if (this.storageRoot.length !== 32) {\n            throw new Error('storageRoot must have a length of 32');\n        }\n        if (this.codeHash.length !== 32) {\n            throw new Error('codeHash must have a length of 32');\n        }\n    }\n    /**\n     * Returns a Buffer Array of the raw Buffers for the account, in order.\n     */\n    raw() {\n        return [\n            (0, bytes_1.bigIntToUnpaddedBuffer)(this.nonce),\n            (0, bytes_1.bigIntToUnpaddedBuffer)(this.balance),\n            this.storageRoot,\n            this.codeHash,\n        ];\n    }\n    /**\n     * Returns the RLP serialization of the account as a `Buffer`.\n     */\n    serialize() {\n        return Buffer.from(rlp_1.RLP.encode((0, bytes_1.bufArrToArr)(this.raw())));\n    }\n    /**\n     * Returns a `Boolean` determining if the account is a contract.\n     */\n    isContract() {\n        return !this.codeHash.equals(constants_1.KECCAK256_NULL);\n    }\n    /**\n     * Returns a `Boolean` determining if the account is empty complying to the definition of\n     * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n     * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n     */\n    isEmpty() {\n        return this.balance === _0n && this.nonce === _0n && this.codeHash.equals(constants_1.KECCAK256_NULL);\n    }\n}\nexports.Account = Account;\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nconst isValidAddress = function (hexAddress) {\n    try {\n        (0, helpers_1.assertIsString)(hexAddress);\n    }\n    catch (e) {\n        return false;\n    }\n    return /^0x[0-9a-fA-F]{40}$/.test(hexAddress);\n};\nexports.isValidAddress = isValidAddress;\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nconst toChecksumAddress = function (hexAddress, eip1191ChainId) {\n    (0, helpers_1.assertIsHexString)(hexAddress);\n    const address = (0, internal_1.stripHexPrefix)(hexAddress).toLowerCase();\n    let prefix = '';\n    if (eip1191ChainId !== undefined) {\n        const chainId = (0, bytes_1.bufferToBigInt)((0, bytes_1.toBuffer)(eip1191ChainId));\n        prefix = chainId.toString() + '0x';\n    }\n    const buf = Buffer.from(prefix + address, 'utf8');\n    const hash = (0, utils_1.bytesToHex)((0, keccak_1.keccak256)(buf));\n    let ret = '0x';\n    for (let i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\nexports.toChecksumAddress = toChecksumAddress;\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nconst isValidChecksumAddress = function (hexAddress, eip1191ChainId) {\n    return (0, exports.isValidAddress)(hexAddress) && (0, exports.toChecksumAddress)(hexAddress, eip1191ChainId) === hexAddress;\n};\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nconst generateAddress = function (from, nonce) {\n    (0, helpers_1.assertIsBuffer)(from);\n    (0, helpers_1.assertIsBuffer)(nonce);\n    if ((0, bytes_1.bufferToBigInt)(nonce) === BigInt(0)) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return Buffer.from((0, keccak_1.keccak256)(rlp_1.RLP.encode((0, bytes_1.bufArrToArr)([from, null])))).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return Buffer.from((0, keccak_1.keccak256)(rlp_1.RLP.encode((0, bytes_1.bufArrToArr)([from, nonce])))).slice(-20);\n};\nexports.generateAddress = generateAddress;\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nconst generateAddress2 = function (from, salt, initCode) {\n    (0, helpers_1.assertIsBuffer)(from);\n    (0, helpers_1.assertIsBuffer)(salt);\n    (0, helpers_1.assertIsBuffer)(initCode);\n    if (from.length !== 20) {\n        throw new Error('Expected from to be of length 20');\n    }\n    if (salt.length !== 32) {\n        throw new Error('Expected salt to be of length 32');\n    }\n    const address = (0, keccak_1.keccak256)(Buffer.concat([Buffer.from('ff', 'hex'), from, salt, (0, keccak_1.keccak256)(initCode)]));\n    return (0, bytes_1.toBuffer)(address).slice(-20);\n};\nexports.generateAddress2 = generateAddress2;\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nconst isValidPrivate = function (privateKey) {\n    return secp256k1_1.secp256k1.utils.isValidPrivateKey(privateKey);\n};\nexports.isValidPrivate = isValidPrivate;\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nconst isValidPublic = function (publicKey, sanitize = false) {\n    (0, helpers_1.assertIsBuffer)(publicKey);\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        // Automatically checks whether point is on curve\n        try {\n            secp256k1_1.secp256k1.ProjectivePoint.fromHex(Buffer.concat([Buffer.from([4]), publicKey]));\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    if (!sanitize) {\n        return false;\n    }\n    try {\n        secp256k1_1.secp256k1.ProjectivePoint.fromHex(publicKey);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n};\nexports.isValidPublic = isValidPublic;\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nconst pubToAddress = function (pubKey, sanitize = false) {\n    (0, helpers_1.assertIsBuffer)(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = Buffer.from(secp256k1_1.secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1));\n    }\n    if (pubKey.length !== 64) {\n        throw new Error('Expected pubKey to be of length 64');\n    }\n    // Only take the lower 160bits of the hash\n    return Buffer.from((0, keccak_1.keccak256)(pubKey)).slice(-20);\n};\nexports.pubToAddress = pubToAddress;\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nconst privateToPublic = function (privateKey) {\n    (0, helpers_1.assertIsBuffer)(privateKey);\n    // skip the type flag and use the X, Y points\n    return Buffer.from(secp256k1_1.secp256k1.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(false).slice(1));\n};\nexports.privateToPublic = privateToPublic;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nconst privateToAddress = function (privateKey) {\n    return (0, exports.publicToAddress)((0, exports.privateToPublic)(privateKey));\n};\nexports.privateToAddress = privateToAddress;\n/**\n * Converts a public key to the Ethereum format.\n */\nconst importPublic = function (publicKey) {\n    (0, helpers_1.assertIsBuffer)(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = Buffer.from(secp256k1_1.secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes(false).slice(1));\n    }\n    return publicKey;\n};\nexports.importPublic = importPublic;\n/**\n * Returns the zero address.\n */\nconst zeroAddress = function () {\n    const addressLength = 20;\n    const addr = (0, bytes_1.zeros)(addressLength);\n    return (0, bytes_1.bufferToHex)(addr);\n};\nexports.zeroAddress = zeroAddress;\n/**\n * Checks if a given address is the zero address.\n */\nconst isZeroAddress = function (hexAddress) {\n    try {\n        (0, helpers_1.assertIsString)(hexAddress);\n    }\n    catch (e) {\n        return false;\n    }\n    const zeroAddr = (0, exports.zeroAddress)();\n    return zeroAddr === hexAddress;\n};\nexports.isZeroAddress = isZeroAddress;\nfunction accountBodyFromSlim(body) {\n    const [nonce, balance, storageRoot, codeHash] = body;\n    return [\n        nonce,\n        balance,\n        (0, bytes_1.arrToBufArr)(storageRoot).length === 0 ? constants_1.KECCAK256_RLP : storageRoot,\n        (0, bytes_1.arrToBufArr)(codeHash).length === 0 ? constants_1.KECCAK256_NULL : codeHash,\n    ];\n}\nexports.accountBodyFromSlim = accountBodyFromSlim;\nconst emptyUint8Arr = new Uint8Array(0);\nfunction accountBodyToSlim(body) {\n    const [nonce, balance, storageRoot, codeHash] = body;\n    return [\n        nonce,\n        balance,\n        (0, bytes_1.arrToBufArr)(storageRoot).equals(constants_1.KECCAK256_RLP) ? emptyUint8Arr : storageRoot,\n        (0, bytes_1.arrToBufArr)(codeHash).equals(constants_1.KECCAK256_NULL) ? emptyUint8Arr : codeHash,\n    ];\n}\nexports.accountBodyToSlim = accountBodyToSlim;\n/**\n * Converts a slim account (per snap protocol spec) to the RLP encoded version of the account\n * @param body Array of 4 Buffer-like items to represent the account\n * @returns RLP encoded version of the account\n */\nfunction accountBodyToRLP(body, couldBeSlim = true) {\n    const accountBody = couldBeSlim ? accountBodyFromSlim(body) : body;\n    return (0, bytes_1.arrToBufArr)(rlp_1.RLP.encode(accountBody));\n}\nexports.accountBodyToRLP = accountBodyToRLP;\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nconst account_1 = require(\"./account\");\nconst bytes_1 = require(\"./bytes\");\n/**\n * Handling and generating Ethereum addresses\n */\nclass Address {\n    constructor(buf) {\n        if (buf.length !== 20) {\n            throw new Error('Invalid address length');\n        }\n        this.buf = buf;\n    }\n    /**\n     * Returns the zero address.\n     */\n    static zero() {\n        return new Address((0, bytes_1.zeros)(20));\n    }\n    /**\n     * Returns an Address object from a hex-encoded string.\n     * @param str - Hex-encoded address\n     */\n    static fromString(str) {\n        if (!(0, account_1.isValidAddress)(str)) {\n            throw new Error('Invalid address');\n        }\n        return new Address((0, bytes_1.toBuffer)(str));\n    }\n    /**\n     * Returns an address for a given public key.\n     * @param pubKey The two points of an uncompressed key\n     */\n    static fromPublicKey(pubKey) {\n        if (!Buffer.isBuffer(pubKey)) {\n            throw new Error('Public key should be Buffer');\n        }\n        const buf = (0, account_1.pubToAddress)(pubKey);\n        return new Address(buf);\n    }\n    /**\n     * Returns an address for a given private key.\n     * @param privateKey A private key must be 256 bits wide\n     */\n    static fromPrivateKey(privateKey) {\n        if (!Buffer.isBuffer(privateKey)) {\n            throw new Error('Private key should be Buffer');\n        }\n        const buf = (0, account_1.privateToAddress)(privateKey);\n        return new Address(buf);\n    }\n    /**\n     * Generates an address for a newly created contract.\n     * @param from The address which is creating this new address\n     * @param nonce The nonce of the from account\n     */\n    static generate(from, nonce) {\n        if (typeof nonce !== 'bigint') {\n            throw new Error('Expected nonce to be a bigint');\n        }\n        return new Address((0, account_1.generateAddress)(from.buf, (0, bytes_1.bigIntToBuffer)(nonce)));\n    }\n    /**\n     * Generates an address for a contract created using CREATE2.\n     * @param from The address which is creating this new address\n     * @param salt A salt\n     * @param initCode The init code of the contract being created\n     */\n    static generate2(from, salt, initCode) {\n        if (!Buffer.isBuffer(salt)) {\n            throw new Error('Expected salt to be a Buffer');\n        }\n        if (!Buffer.isBuffer(initCode)) {\n            throw new Error('Expected initCode to be a Buffer');\n        }\n        return new Address((0, account_1.generateAddress2)(from.buf, salt, initCode));\n    }\n    /**\n     * Is address equal to another.\n     */\n    equals(address) {\n        return this.buf.equals(address.buf);\n    }\n    /**\n     * Is address zero.\n     */\n    isZero() {\n        return this.equals(Address.zero());\n    }\n    /**\n     * True if address is in the address range defined\n     * by EIP-1352\n     */\n    isPrecompileOrSystemAddress() {\n        const address = (0, bytes_1.bufferToBigInt)(this.buf);\n        const rangeMin = BigInt(0);\n        const rangeMax = BigInt('0xffff');\n        return address >= rangeMin && address <= rangeMax;\n    }\n    /**\n     * Returns hex encoding of address.\n     */\n    toString() {\n        return '0x' + this.buf.toString('hex');\n    }\n    /**\n     * Returns Buffer representation of address.\n     */\n    toBuffer() {\n        return Buffer.from(this.buf);\n    }\n}\nexports.Address = Address;\n//# sourceMappingURL=address.js.map","\"use strict\";\n/**\n * Ported to Typescript from original implementation below:\n * https://github.com/ahultgren/async-eventemitter -- MIT licensed\n *\n * Type Definitions based on work by: patarapolw <https://github.com/patarapolw> -- MIT licensed\n * that was contributed to Definitely Typed below:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/async-eventemitter\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncEventEmitter = void 0;\nconst events_1 = require(\"events\");\nasync function runInSeries(context, tasks, data) {\n    let error;\n    for await (const task of tasks) {\n        try {\n            if (task.length < 2) {\n                //sync\n                task.call(context, data);\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    task.call(context, data, (error) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            resolve();\n                        }\n                    });\n                });\n            }\n        }\n        catch (e) {\n            error = e;\n        }\n    }\n    if (error) {\n        throw error;\n    }\n}\nclass AsyncEventEmitter extends events_1.EventEmitter {\n    emit(event, ...args) {\n        let [data, callback] = args;\n        const self = this;\n        let listeners = self._events[event] ?? [];\n        // Optional data argument\n        if (callback === undefined && typeof data === 'function') {\n            callback = data;\n            data = undefined;\n        }\n        // Special treatment of internal newListener and removeListener events\n        if (event === 'newListener' || event === 'removeListener') {\n            data = {\n                event: data,\n                fn: callback,\n            };\n            callback = undefined;\n        }\n        // A single listener is just a function not an array...\n        listeners = Array.isArray(listeners) ? listeners : [listeners];\n        runInSeries(self, listeners.slice(), data).then(callback).catch(callback);\n        return self.listenerCount(event) > 0;\n    }\n    once(event, listener) {\n        const self = this;\n        let g;\n        if (typeof listener !== 'function') {\n            throw new TypeError('listener must be a function');\n        }\n        // Hack to support set arity\n        if (listener.length >= 2) {\n            g = function (e, next) {\n                self.removeListener(event, g);\n                void listener(e, next);\n            };\n        }\n        else {\n            g = function (e) {\n                self.removeListener(event, g);\n                void listener(e, g);\n            };\n        }\n        self.on(event, g);\n        return self;\n    }\n    first(event, listener) {\n        let listeners = this._events[event] ?? [];\n        // Contract\n        if (typeof listener !== 'function') {\n            throw new TypeError('listener must be a function');\n        }\n        // Listeners are not always an array\n        if (!Array.isArray(listeners)) {\n            ;\n            this._events[event] = listeners = [listeners];\n        }\n        listeners.unshift(listener);\n        return this;\n    }\n    before(event, target, listener) {\n        return this.beforeOrAfter(event, target, listener);\n    }\n    after(event, target, listener) {\n        return this.beforeOrAfter(event, target, listener, 'after');\n    }\n    beforeOrAfter(event, target, listener, beforeOrAfter) {\n        let listeners = this._events[event] ?? [];\n        let i;\n        let index;\n        const add = beforeOrAfter === 'after' ? 1 : 0;\n        // Contract\n        if (typeof listener !== 'function') {\n            throw new TypeError('listener must be a function');\n        }\n        if (typeof target !== 'function') {\n            throw new TypeError('target must be a function');\n        }\n        // Listeners are not always an array\n        if (!Array.isArray(listeners)) {\n            ;\n            this._events[event] = listeners = [listeners];\n        }\n        index = listeners.length;\n        for (i = listeners.length; i--;) {\n            if (listeners[i] === target) {\n                index = i + add;\n                break;\n            }\n        }\n        listeners.splice(index, 0, listener);\n        return this;\n    }\n    on(event, listener) {\n        return super.on(event, listener);\n    }\n    addListener(event, listener) {\n        return super.addListener(event, listener);\n    }\n    prependListener(event, listener) {\n        return super.prependListener(event, listener);\n    }\n    prependOnceListener(event, listener) {\n        return super.prependOnceListener(event, listener);\n    }\n    removeAllListeners(event) {\n        return super.removeAllListeners(event);\n    }\n    removeListener(event, listener) {\n        return super.removeListener(event, listener);\n    }\n    eventNames() {\n        return super.eventNames();\n    }\n    listeners(event) {\n        return super.listeners(event);\n    }\n    listenerCount(event) {\n        return super.listenerCount(event);\n    }\n    getMaxListeners() {\n        return super.getMaxListeners();\n    }\n    setMaxListeners(maxListeners) {\n        return super.setMaxListeners(maxListeners);\n    }\n}\nexports.AsyncEventEmitter = AsyncEventEmitter;\n//# sourceMappingURL=asyncEventEmitter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.intToUnpaddedBuffer = exports.bigIntToUnpaddedBuffer = exports.bigIntToHex = exports.bufArrToArr = exports.arrToBufArr = exports.validateNoLeadingZeroes = exports.baToJSON = exports.toUtf8 = exports.short = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToInt = exports.bigIntToBuffer = exports.bufferToBigInt = exports.bufferToHex = exports.toBuffer = exports.unpadHexString = exports.unpadArray = exports.unpadBuffer = exports.setLengthRight = exports.setLengthLeft = exports.zeros = exports.intToBuffer = exports.intToHex = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst internal_1 = require(\"./internal\");\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nconst intToHex = function (i) {\n    if (!Number.isSafeInteger(i) || i < 0) {\n        throw new Error(`Received an invalid integer type: ${i}`);\n    }\n    return `0x${i.toString(16)}`;\n};\nexports.intToHex = intToHex;\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nconst intToBuffer = function (i) {\n    const hex = (0, exports.intToHex)(i);\n    return Buffer.from((0, internal_1.padToEven)(hex.slice(2)), 'hex');\n};\nexports.intToBuffer = intToBuffer;\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nconst zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\nexports.zeros = zeros;\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg, length, right) {\n    const buf = (0, exports.zeros)(length);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nconst setLengthLeft = function (msg, length) {\n    (0, helpers_1.assertIsBuffer)(msg);\n    return setLength(msg, length, false);\n};\nexports.setLengthLeft = setLengthLeft;\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nconst setLengthRight = function (msg, length) {\n    (0, helpers_1.assertIsBuffer)(msg);\n    return setLength(msg, length, true);\n};\nexports.setLengthRight = setLengthRight;\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a) {\n    let first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nconst unpadBuffer = function (a) {\n    (0, helpers_1.assertIsBuffer)(a);\n    return stripZeros(a);\n};\nexports.unpadBuffer = unpadBuffer;\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nconst unpadArray = function (a) {\n    (0, helpers_1.assertIsArray)(a);\n    return stripZeros(a);\n};\nexports.unpadArray = unpadArray;\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nconst unpadHexString = function (a) {\n    (0, helpers_1.assertIsHexString)(a);\n    a = (0, internal_1.stripHexPrefix)(a);\n    return ('0x' + stripZeros(a));\n};\nexports.unpadHexString = unpadHexString;\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nconst toBuffer = function (v) {\n    if (v === null || v === undefined) {\n        return Buffer.allocUnsafe(0);\n    }\n    if (Buffer.isBuffer(v)) {\n        return Buffer.from(v);\n    }\n    if (Array.isArray(v) || v instanceof Uint8Array) {\n        return Buffer.from(v);\n    }\n    if (typeof v === 'string') {\n        if (!(0, internal_1.isHexString)(v)) {\n            throw new Error(`Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`);\n        }\n        return Buffer.from((0, internal_1.padToEven)((0, internal_1.stripHexPrefix)(v)), 'hex');\n    }\n    if (typeof v === 'number') {\n        return (0, exports.intToBuffer)(v);\n    }\n    if (typeof v === 'bigint') {\n        if (v < BigInt(0)) {\n            throw new Error(`Cannot convert negative bigint to buffer. Given: ${v}`);\n        }\n        let n = v.toString(16);\n        if (n.length % 2)\n            n = '0' + n;\n        return Buffer.from(n, 'hex');\n    }\n    if (v.toArray) {\n        // converts a BN to a Buffer\n        return Buffer.from(v.toArray());\n    }\n    if (v.toBuffer) {\n        return Buffer.from(v.toBuffer());\n    }\n    throw new Error('invalid type');\n};\nexports.toBuffer = toBuffer;\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nconst bufferToHex = function (buf) {\n    buf = (0, exports.toBuffer)(buf);\n    return '0x' + buf.toString('hex');\n};\nexports.bufferToHex = bufferToHex;\n/**\n * Converts a {@link Buffer} to a {@link bigint}\n */\nfunction bufferToBigInt(buf) {\n    const hex = (0, exports.bufferToHex)(buf);\n    if (hex === '0x') {\n        return BigInt(0);\n    }\n    return BigInt(hex);\n}\nexports.bufferToBigInt = bufferToBigInt;\n/**\n * Converts a {@link bigint} to a {@link Buffer}\n */\nfunction bigIntToBuffer(num) {\n    return (0, exports.toBuffer)('0x' + num.toString(16));\n}\nexports.bigIntToBuffer = bigIntToBuffer;\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nconst bufferToInt = function (buf) {\n    const res = Number(bufferToBigInt(buf));\n    if (!Number.isSafeInteger(res))\n        throw new Error('Number exceeds 53 bits');\n    return res;\n};\nexports.bufferToInt = bufferToInt;\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BigInt`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nconst fromSigned = function (num) {\n    return BigInt.asIntN(256, bufferToBigInt(num));\n};\nexports.fromSigned = fromSigned;\n/**\n * Converts a `BigInt` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nconst toUnsigned = function (num) {\n    return bigIntToBuffer(BigInt.asUintN(256, num));\n};\nexports.toUnsigned = toUnsigned;\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nconst addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return (0, internal_1.isHexPrefixed)(str) ? str : '0x' + str;\n};\nexports.addHexPrefix = addHexPrefix;\n/**\n * Shortens a string  or buffer's hex string representation to maxLength (default 50).\n *\n * Examples:\n *\n * Input:  '657468657265756d000000000000000000000000000000000000000000000000'\n * Output: '657468657265756d0000000000000000000000000000000000…'\n */\nfunction short(buffer, maxLength = 50) {\n    const bufferStr = Buffer.isBuffer(buffer) ? buffer.toString('hex') : buffer;\n    if (bufferStr.length <= maxLength) {\n        return bufferStr;\n    }\n    return bufferStr.slice(0, maxLength) + '…';\n}\nexports.short = short;\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nconst toUtf8 = function (hex) {\n    const zerosRegexp = /^(00)+|(00)+$/g;\n    hex = (0, internal_1.stripHexPrefix)(hex);\n    if (hex.length % 2 !== 0) {\n        throw new Error('Invalid non-even hex string input for toUtf8() provided');\n    }\n    const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex');\n    return bufferVal.toString('utf8');\n};\nexports.toUtf8 = toUtf8;\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nconst baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return `0x${ba.toString('hex')}`;\n    }\n    else if (ba instanceof Array) {\n        const array = [];\n        for (let i = 0; i < ba.length; i++) {\n            array.push((0, exports.baToJSON)(ba[i]));\n        }\n        return array;\n    }\n};\nexports.baToJSON = baToJSON;\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nconst validateNoLeadingZeroes = function (values) {\n    for (const [k, v] of Object.entries(values)) {\n        if (v !== undefined && v.length > 0 && v[0] === 0) {\n            throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`);\n        }\n    }\n};\nexports.validateNoLeadingZeroes = validateNoLeadingZeroes;\nfunction arrToBufArr(arr) {\n    if (!Array.isArray(arr)) {\n        return Buffer.from(arr);\n    }\n    return arr.map((a) => arrToBufArr(a));\n}\nexports.arrToBufArr = arrToBufArr;\nfunction bufArrToArr(arr) {\n    if (!Array.isArray(arr)) {\n        return Uint8Array.from(arr ?? []);\n    }\n    return arr.map((a) => bufArrToArr(a));\n}\nexports.bufArrToArr = bufArrToArr;\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */\nconst bigIntToHex = (num) => {\n    return '0x' + num.toString(16);\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert value from bigint to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nfunction bigIntToUnpaddedBuffer(value) {\n    return (0, exports.unpadBuffer)(bigIntToBuffer(value));\n}\nexports.bigIntToUnpaddedBuffer = bigIntToUnpaddedBuffer;\nfunction intToUnpaddedBuffer(value) {\n    return (0, exports.unpadBuffer)((0, exports.intToBuffer)(value));\n}\nexports.intToUnpaddedBuffer = intToUnpaddedBuffer;\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_WITHDRAWALS_PER_PAYLOAD = exports.RLP_EMPTY_STRING = exports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.SECP256K1_ORDER_DIV_2 = exports.SECP256K1_ORDER = exports.MAX_INTEGER_BIGINT = exports.MAX_INTEGER = exports.MAX_UINT64 = void 0;\nconst buffer_1 = require(\"buffer\");\nconst secp256k1_1 = require(\"ethereum-cryptography/secp256k1\");\n/**\n * 2^64-1\n */\nexports.MAX_UINT64 = BigInt('0xffffffffffffffff');\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexports.MAX_INTEGER = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n * 2^256-1 equals to 340282366920938463463374607431768211455\n * We use literal value instead of calculated value for compatibility issue.\n */\nexports.MAX_INTEGER_BIGINT = BigInt('115792089237316195423570985008687907853269984665640564039457584007913129639935');\nexports.SECP256K1_ORDER = secp256k1_1.secp256k1.CURVE.n;\nexports.SECP256K1_ORDER_DIV_2 = secp256k1_1.secp256k1.CURVE.n / BigInt(2);\n/**\n * 2^256\n */\nexports.TWO_POW256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = buffer_1.Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = buffer_1.Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = buffer_1.Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n/**\n *  RLP encoded empty string\n */\nexports.RLP_EMPTY_STRING = buffer_1.Buffer.from([0x80]);\nexports.MAX_WITHDRAWALS_PER_PAYLOAD = 16;\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compactBytesToNibbles = exports.bytesToNibbles = exports.nibblesToCompactBytes = exports.nibblesToBytes = exports.hasTerminator = void 0;\n// Reference: https://ethereum.org/en/developers/docs/data-structures-and-encoding/patricia-merkle-trie/\n/**\n *\n * @param s byte sequence\n * @returns boolean indicating if input hex nibble sequence has terminator indicating leaf-node\n *          terminator is represented with 16 because a nibble ranges from 0 - 15(f)\n */\nconst hasTerminator = (nibbles) => {\n    return nibbles.length > 0 && nibbles[nibbles.length - 1] === 16;\n};\nexports.hasTerminator = hasTerminator;\nconst nibblesToBytes = (nibbles, bytes) => {\n    for (let bi = 0, ni = 0; ni < nibbles.length; bi += 1, ni += 2) {\n        bytes[bi] = (nibbles[ni] << 4) | nibbles[ni + 1];\n    }\n};\nexports.nibblesToBytes = nibblesToBytes;\nconst nibblesToCompactBytes = (nibbles) => {\n    let terminator = 0;\n    if ((0, exports.hasTerminator)(nibbles)) {\n        terminator = 1;\n        // Remove the terminator from the sequence\n        nibbles = nibbles.subarray(0, nibbles.length - 1);\n    }\n    const buf = new Uint8Array(nibbles.length / 2 + 1);\n    // Shift the terminator info into the first nibble of buf[0]\n    buf[0] = terminator << 5;\n    // If odd length, then add that flag into the first nibble and put the odd nibble to\n    // second part of buf[0] which otherwise will be left padded with a 0\n    if ((nibbles.length & 1) === 1) {\n        buf[0] |= 1 << 4;\n        buf[0] |= nibbles[0];\n        nibbles = nibbles.subarray(1);\n    }\n    // create bytes out of the rest even nibbles\n    (0, exports.nibblesToBytes)(nibbles, buf.subarray(1));\n    return buf;\n};\nexports.nibblesToCompactBytes = nibblesToCompactBytes;\nconst bytesToNibbles = (str) => {\n    const l = str.length * 2 + 1;\n    const nibbles = new Uint8Array(l);\n    for (let i = 0; i < str.length; i++) {\n        const b = str[i];\n        nibbles[i * 2] = b / 16;\n        nibbles[i * 2 + 1] = b % 16;\n    }\n    // This will get removed from calling function if the first nibble\n    // indicates that terminator is not present\n    nibbles[l - 1] = 16;\n    return nibbles;\n};\nexports.bytesToNibbles = bytesToNibbles;\nconst compactBytesToNibbles = (compact) => {\n    if (compact.length === 0) {\n        return compact;\n    }\n    let base = (0, exports.bytesToNibbles)(compact);\n    // delete terminator flag if terminator flag was not in first nibble\n    if (base[0] < 2) {\n        base = base.subarray(0, base.length - 1);\n    }\n    // chop the terminator nibble and the even padding (if there is one)\n    // i.e.  chop 2 left nibbles when even else 1 when odd\n    const chop = 2 - (base[0] & 1);\n    return base.subarray(chop);\n};\nexports.compactBytesToNibbles = compactBytesToNibbles;\n/**\n * A test helper to generates compact path for a subset of key bytes\n *\n * TODO: Commenting the code for now as this seems to be helper function\n * (from geth codebase )\n *\n */\n//\n//\n// export const getPathTo = (tillBytes: number, key: Buffer) => {\n//   const hexNibbles = bytesToNibbles(key).subarray(0, tillBytes)\n//   // Remove the terminator if its there, although it would be there only if tillBytes >= key.length\n//   // This seems to be a test helper to generate paths so correctness of this isn't necessary\n//   hexNibbles[hexNibbles.length - 1] = 0\n//   const compactBytes = nibblesToCompactBytes(hexNibbles)\n//   return [Buffer.from(compactBytes)]\n// }\n//# sourceMappingURL=encoding.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\nconst internal_1 = require(\"./internal\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nconst assertIsHexString = function (input) {\n    if (!(0, internal_1.isHexString)(input)) {\n        const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`;\n        throw new Error(msg);\n    }\n};\nexports.assertIsHexString = assertIsHexString;\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nconst assertIsBuffer = function (input) {\n    if (!Buffer.isBuffer(input)) {\n        const msg = `This method only supports Buffer but input was: ${input}`;\n        throw new Error(msg);\n    }\n};\nexports.assertIsBuffer = assertIsBuffer;\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nconst assertIsArray = function (input) {\n    if (!Array.isArray(input)) {\n        const msg = `This method only supports number arrays but input was: ${input}`;\n        throw new Error(msg);\n    }\n};\nexports.assertIsArray = assertIsArray;\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nconst assertIsString = function (input) {\n    if (typeof input !== 'string') {\n        const msg = `This method only supports strings but input was: ${input}`;\n        throw new Error(msg);\n    }\n};\nexports.assertIsString = assertIsString;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toAscii = exports.stripHexPrefix = exports.padToEven = exports.isHexString = exports.isHexPrefixed = exports.getKeys = exports.getBinarySize = exports.fromUtf8 = exports.fromAscii = exports.arrayContainsArray = void 0;\n/**\n * Constants\n */\n__exportStar(require(\"./constants\"), exports);\n/**\n * Units helpers\n */\n__exportStar(require(\"./units\"), exports);\n/**\n * Account class and helper functions\n */\n__exportStar(require(\"./account\"), exports);\n/**\n * Address type\n */\n__exportStar(require(\"./address\"), exports);\n/**\n * Withdrawal type\n */\n__exportStar(require(\"./withdrawal\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(require(\"./signature\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(require(\"./bytes\"), exports);\n/**\n * Helpful TypeScript types\n */\n__exportStar(require(\"./types\"), exports);\n/**\n * Helper function for working with compact encoding\n */\n__exportStar(require(\"./encoding\"), exports);\n/**\n * Export ethjs-util methods\n */\n__exportStar(require(\"./asyncEventEmitter\"), exports);\nvar internal_1 = require(\"./internal\");\nObject.defineProperty(exports, \"arrayContainsArray\", { enumerable: true, get: function () { return internal_1.arrayContainsArray; } });\nObject.defineProperty(exports, \"fromAscii\", { enumerable: true, get: function () { return internal_1.fromAscii; } });\nObject.defineProperty(exports, \"fromUtf8\", { enumerable: true, get: function () { return internal_1.fromUtf8; } });\nObject.defineProperty(exports, \"getBinarySize\", { enumerable: true, get: function () { return internal_1.getBinarySize; } });\nObject.defineProperty(exports, \"getKeys\", { enumerable: true, get: function () { return internal_1.getKeys; } });\nObject.defineProperty(exports, \"isHexPrefixed\", { enumerable: true, get: function () { return internal_1.isHexPrefixed; } });\nObject.defineProperty(exports, \"isHexString\", { enumerable: true, get: function () { return internal_1.isHexString; } });\nObject.defineProperty(exports, \"padToEven\", { enumerable: true, get: function () { return internal_1.padToEven; } });\nObject.defineProperty(exports, \"stripHexPrefix\", { enumerable: true, get: function () { return internal_1.stripHexPrefix; } });\nObject.defineProperty(exports, \"toAscii\", { enumerable: true, get: function () { return internal_1.toAscii; } });\n__exportStar(require(\"./lock\"), exports);\n__exportStar(require(\"./provider\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isHexString = exports.getKeys = exports.fromAscii = exports.fromUtf8 = exports.toAscii = exports.arrayContainsArray = exports.getBinarySize = exports.padToEven = exports.stripHexPrefix = exports.isHexPrefixed = void 0;\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nfunction isHexPrefixed(str) {\n    if (typeof str !== 'string') {\n        throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`);\n    }\n    return str[0] === '0' && str[1] === 'x';\n}\nexports.isHexPrefixed = isHexPrefixed;\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nconst stripHexPrefix = (str) => {\n    if (typeof str !== 'string')\n        throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`);\n    return isHexPrefixed(str) ? str.slice(2) : str;\n};\nexports.stripHexPrefix = stripHexPrefix;\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nfunction padToEven(value) {\n    let a = value;\n    if (typeof a !== 'string') {\n        throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`);\n    }\n    if (a.length % 2)\n        a = `0${a}`;\n    return a;\n}\nexports.padToEven = padToEven;\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nfunction getBinarySize(str) {\n    if (typeof str !== 'string') {\n        throw new Error(`[getBinarySize] method requires input type 'string', received ${typeof str}`);\n    }\n    return Buffer.byteLength(str, 'utf8');\n}\nexports.getBinarySize = getBinarySize;\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nfunction arrayContainsArray(superset, subset, some) {\n    if (Array.isArray(superset) !== true) {\n        throw new Error(`[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`);\n    }\n    if (Array.isArray(subset) !== true) {\n        throw new Error(`[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`);\n    }\n    return subset[some === true ? 'some' : 'every']((value) => superset.indexOf(value) >= 0);\n}\nexports.arrayContainsArray = arrayContainsArray;\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nfunction toAscii(hex) {\n    let str = '';\n    let i = 0;\n    const l = hex.length;\n    if (hex.substring(0, 2) === '0x')\n        i = 2;\n    for (; i < l; i += 2) {\n        const code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n}\nexports.toAscii = toAscii;\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n    const str = Buffer.from(stringValue, 'utf8');\n    return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`;\n}\nexports.fromUtf8 = fromUtf8;\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nfunction fromAscii(stringValue) {\n    let hex = '';\n    for (let i = 0; i < stringValue.length; i++) {\n        const code = stringValue.charCodeAt(i);\n        const n = code.toString(16);\n        hex += n.length < 2 ? `0${n}` : n;\n    }\n    return `0x${hex}`;\n}\nexports.fromAscii = fromAscii;\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n    if (!Array.isArray(params)) {\n        throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`);\n    }\n    if (typeof key !== 'string') {\n        throw new Error(`[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`);\n    }\n    const result = [];\n    for (let i = 0; i < params.length; i++) {\n        let value = params[i][key];\n        if (allowEmpty === true && !value) {\n            value = '';\n        }\n        else if (typeof value !== 'string') {\n            throw new Error(`invalid abi - expected type 'string', received ${typeof value}`);\n        }\n        result.push(value);\n    }\n    return result;\n}\nexports.getKeys = getKeys;\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nfunction isHexString(value, length) {\n    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/))\n        return false;\n    if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length)\n        return false;\n    return true;\n}\nexports.isHexString = isHexString;\n//# sourceMappingURL=internal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Lock = void 0;\n// Based on https://github.com/jsoendermann/semaphore-async-await/blob/master/src/Semaphore.ts\nclass Lock {\n    constructor() {\n        this.permits = 1;\n        this.promiseResolverQueue = [];\n    }\n    /**\n     * Returns a promise used to wait for a permit to become available. This method should be awaited on.\n     * @returns  A promise that gets resolved when execution is allowed to proceed.\n     */\n    async acquire() {\n        if (this.permits > 0) {\n            this.permits -= 1;\n            return Promise.resolve(true);\n        }\n        // If there is no permit available, we return a promise that resolves once the semaphore gets\n        // signaled enough times that permits is equal to one.\n        return new Promise((resolver) => this.promiseResolverQueue.push(resolver));\n    }\n    /**\n     * Increases the number of permits by one. If there are other functions waiting, one of them will\n     * continue to execute in a future iteration of the event loop.\n     */\n    release() {\n        this.permits += 1;\n        if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n            // eslint-disable-next-line no-console\n            console.warn('Lock.permits should never be > 0 when there is someone waiting.');\n        }\n        else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n            // If there is someone else waiting, immediately consume the permit that was released\n            // at the beginning of this function and let the waiting function resume.\n            this.permits -= 1;\n            const nextResolver = this.promiseResolverQueue.shift();\n            if (nextResolver) {\n                nextResolver(true);\n            }\n        }\n    }\n}\nexports.Lock = Lock;\n//# sourceMappingURL=lock.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProvider = exports.fetchFromProvider = void 0;\nconst micro_ftch_1 = require(\"micro-ftch\");\nconst fetchFromProvider = async (url, params) => {\n    const res = await (0, micro_ftch_1.default)(url, {\n        headers: {\n            'content-type': 'application/json',\n        },\n        type: 'json',\n        data: {\n            method: params.method,\n            params: params.params,\n            jsonrpc: '2.0',\n            id: 1,\n        },\n    });\n    return res.result;\n};\nexports.fetchFromProvider = fetchFromProvider;\nconst getProvider = (provider) => {\n    if (typeof provider === 'string') {\n        return provider;\n    }\n    else if (provider?.connection?.url !== undefined) {\n        return provider.connection.url;\n    }\n    else {\n        throw new Error('Must provide valid provider URL or Web3Provider');\n    }\n};\nexports.getProvider = getProvider;\n//# sourceMappingURL=provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toCompactSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nconst keccak_1 = require(\"ethereum-cryptography/keccak\");\nconst secp256k1_1 = require(\"ethereum-cryptography/secp256k1\");\nconst bytes_1 = require(\"./bytes\");\nconst constants_1 = require(\"./constants\");\nconst helpers_1 = require(\"./helpers\");\n/**\n * Returns the ECDSA signature of a message hash.\n *\n * If `chainId` is provided assume an EIP-155-style signature and calculate the `v` value\n * accordingly, otherwise return a \"static\" `v` just derived from the `recovery` bit\n */\nfunction ecsign(msgHash, privateKey, chainId) {\n    const sig = secp256k1_1.secp256k1.sign(msgHash, privateKey);\n    const buf = sig.toCompactRawBytes();\n    const r = Buffer.from(buf.slice(0, 32));\n    const s = Buffer.from(buf.slice(32, 64));\n    const v = chainId === undefined\n        ? BigInt(sig.recovery + 27)\n        : BigInt(sig.recovery + 35) + BigInt(chainId) * BigInt(2);\n    return { r, s, v };\n}\nexports.ecsign = ecsign;\nfunction calculateSigRecovery(v, chainId) {\n    if (v === BigInt(0) || v === BigInt(1))\n        return v;\n    if (chainId === undefined) {\n        return v - BigInt(27);\n    }\n    return v - (chainId * BigInt(2) + BigInt(35));\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === BigInt(0) || recovery === BigInt(1);\n}\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nconst ecrecover = function (msgHash, v, r, s, chainId) {\n    const signature = Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32)], 64);\n    const recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    const sig = secp256k1_1.secp256k1.Signature.fromCompact(signature).addRecoveryBit(Number(recovery));\n    const senderPubKey = sig.recoverPublicKey(msgHash);\n    return Buffer.from(senderPubKey.toRawBytes(false).slice(1));\n};\nexports.ecrecover = ecrecover;\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nconst toRpcSig = function (v, r, s, chainId) {\n    const recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32), (0, bytes_1.toBuffer)(v)]));\n};\nexports.toRpcSig = toRpcSig;\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nconst toCompactSig = function (v, r, s, chainId) {\n    const recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    let ss = s;\n    if ((v > BigInt(28) && v % BigInt(2) === BigInt(1)) || v === BigInt(1) || v === BigInt(28)) {\n        ss = Buffer.from(s);\n        ss[0] |= 0x80;\n    }\n    return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(ss, 32)]));\n};\nexports.toCompactSig = toCompactSig;\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n *\n * NOTE: For an extracted `v` value < 27 (see Geth bug https://github.com/ethereum/go-ethereum/issues/2053)\n * `v + 27` is returned for the `v` value\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nconst fromRpcSig = function (sig) {\n    const buf = (0, bytes_1.toBuffer)(sig);\n    let r;\n    let s;\n    let v;\n    if (buf.length >= 65) {\n        r = buf.slice(0, 32);\n        s = buf.slice(32, 64);\n        v = (0, bytes_1.bufferToBigInt)(buf.slice(64));\n    }\n    else if (buf.length === 64) {\n        // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n        r = buf.slice(0, 32);\n        s = buf.slice(32, 64);\n        v = BigInt((0, bytes_1.bufferToInt)(buf.slice(32, 33)) >> 7);\n        s[0] &= 0x7f;\n    }\n    else {\n        throw new Error('Invalid signature length');\n    }\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v = v + BigInt(27);\n    }\n    return {\n        v,\n        r,\n        s,\n    };\n};\nexports.fromRpcSig = fromRpcSig;\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nconst isValidSignature = function (v, r, s, homesteadOrLater = true, chainId) {\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    const rBigInt = (0, bytes_1.bufferToBigInt)(r);\n    const sBigInt = (0, bytes_1.bufferToBigInt)(s);\n    if (rBigInt === BigInt(0) ||\n        rBigInt >= constants_1.SECP256K1_ORDER ||\n        sBigInt === BigInt(0) ||\n        sBigInt >= constants_1.SECP256K1_ORDER) {\n        return false;\n    }\n    if (homesteadOrLater && sBigInt >= constants_1.SECP256K1_ORDER_DIV_2) {\n        return false;\n    }\n    return true;\n};\nexports.isValidSignature = isValidSignature;\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nconst hashPersonalMessage = function (message) {\n    (0, helpers_1.assertIsBuffer)(message);\n    const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8');\n    return Buffer.from((0, keccak_1.keccak256)(Buffer.concat([prefix, message])));\n};\nexports.hashPersonalMessage = hashPersonalMessage;\n//# sourceMappingURL=signature.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toType = exports.TypeOutput = void 0;\nconst bytes_1 = require(\"./bytes\");\nconst internal_1 = require(\"./internal\");\n/**\n * Type output options\n */\nvar TypeOutput;\n(function (TypeOutput) {\n    TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n    TypeOutput[TypeOutput[\"BigInt\"] = 1] = \"BigInt\";\n    TypeOutput[TypeOutput[\"Buffer\"] = 2] = \"Buffer\";\n    TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput = exports.TypeOutput || (exports.TypeOutput = {}));\nfunction toType(input, outputType) {\n    if (input === null) {\n        return null;\n    }\n    if (input === undefined) {\n        return undefined;\n    }\n    if (typeof input === 'string' && !(0, internal_1.isHexString)(input)) {\n        throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`);\n    }\n    else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n        throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n    }\n    const output = (0, bytes_1.toBuffer)(input);\n    switch (outputType) {\n        case TypeOutput.Buffer:\n            return output;\n        case TypeOutput.BigInt:\n            return (0, bytes_1.bufferToBigInt)(output);\n        case TypeOutput.Number: {\n            const bigInt = (0, bytes_1.bufferToBigInt)(output);\n            if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n                throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n            }\n            return Number(bigInt);\n        }\n        case TypeOutput.PrefixedHexString:\n            return (0, bytes_1.bufferToHex)(output);\n        default:\n            throw new Error('unknown outputType');\n    }\n}\nexports.toType = toType;\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GWEI_TO_WEI = void 0;\n/** Easy conversion from Gwei to wei */\nexports.GWEI_TO_WEI = BigInt(1000000000);\n//# sourceMappingURL=units.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Withdrawal = void 0;\nconst address_1 = require(\"./address\");\nconst bytes_1 = require(\"./bytes\");\nconst types_1 = require(\"./types\");\n/**\n * Representation of EIP-4895 withdrawal data\n */\nclass Withdrawal {\n    /**\n     * This constructor assigns and validates the values.\n     * Use the static factory methods to assist in creating a Withdrawal object from varying data types.\n     * Its amount is in Gwei to match CL representation and for eventual ssz withdrawalsRoot\n     */\n    constructor(index, validatorIndex, address, \n    /**\n     * withdrawal amount in Gwei to match the CL repesentation and eventually ssz withdrawalsRoot\n     */\n    amount) {\n        this.index = index;\n        this.validatorIndex = validatorIndex;\n        this.address = address;\n        this.amount = amount;\n    }\n    static fromWithdrawalData(withdrawalData) {\n        const { index: indexData, validatorIndex: validatorIndexData, address: addressData, amount: amountData, } = withdrawalData;\n        const index = (0, types_1.toType)(indexData, types_1.TypeOutput.BigInt);\n        const validatorIndex = (0, types_1.toType)(validatorIndexData, types_1.TypeOutput.BigInt);\n        const address = new address_1.Address((0, types_1.toType)(addressData, types_1.TypeOutput.Buffer));\n        const amount = (0, types_1.toType)(amountData, types_1.TypeOutput.BigInt);\n        return new Withdrawal(index, validatorIndex, address, amount);\n    }\n    static fromValuesArray(withdrawalArray) {\n        if (withdrawalArray.length !== 4) {\n            throw Error(`Invalid withdrawalArray length expected=4 actual=${withdrawalArray.length}`);\n        }\n        const [index, validatorIndex, address, amount] = withdrawalArray;\n        return Withdrawal.fromWithdrawalData({ index, validatorIndex, address, amount });\n    }\n    /**\n     * Convert a withdrawal to a buffer array\n     * @param withdrawal the withdrawal to convert\n     * @returns buffer array of the withdrawal\n     */\n    static toBufferArray(withdrawal) {\n        const { index, validatorIndex, address, amount } = withdrawal;\n        const indexBuffer = (0, types_1.toType)(index, types_1.TypeOutput.BigInt) === BigInt(0)\n            ? Buffer.alloc(0)\n            : (0, types_1.toType)(index, types_1.TypeOutput.Buffer);\n        const validatorIndexBuffer = (0, types_1.toType)(validatorIndex, types_1.TypeOutput.BigInt) === BigInt(0)\n            ? Buffer.alloc(0)\n            : (0, types_1.toType)(validatorIndex, types_1.TypeOutput.Buffer);\n        let addressBuffer;\n        if (address instanceof address_1.Address) {\n            addressBuffer = address.buf;\n        }\n        else {\n            addressBuffer = (0, types_1.toType)(address, types_1.TypeOutput.Buffer);\n        }\n        const amountBuffer = (0, types_1.toType)(amount, types_1.TypeOutput.BigInt) === BigInt(0)\n            ? Buffer.alloc(0)\n            : (0, types_1.toType)(amount, types_1.TypeOutput.Buffer);\n        return [indexBuffer, validatorIndexBuffer, addressBuffer, amountBuffer];\n    }\n    raw() {\n        return Withdrawal.toBufferArray(this);\n    }\n    toValue() {\n        return {\n            index: this.index,\n            validatorIndex: this.validatorIndex,\n            address: this.address.buf,\n            amount: this.amount,\n        };\n    }\n    toJSON() {\n        return {\n            index: (0, bytes_1.bigIntToHex)(this.index),\n            validatorIndex: (0, bytes_1.bigIntToHex)(this.validatorIndex),\n            address: '0x' + this.address.buf.toString('hex'),\n            amount: (0, bytes_1.bigIntToHex)(this.amount),\n        };\n    }\n}\nexports.Withdrawal = Withdrawal;\n//# sourceMappingURL=withdrawal.js.map","\"use strict\";\n// ESLint gets confused by the nested list and tables in the docs, so we disable\n// the rule for this file.\n/* eslint-disable jsdoc/check-indentation, jsdoc/match-description */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeSingle = exports.decode = exports.encodePacked = exports.encodeSingle = exports.encode = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"./errors\");\nconst packer_1 = require(\"./packer\");\n/**\n * Encode the data with the provided types. The types must be valid Solidity\n * ABI types.\n *\n * This will attempt to parse the values into the correct types. For example,\n * if you pass in a hex string for a `uint256`, it will be parsed into a\n * `bigint`. Regular strings are interpreted as UTF-8 strings. If you want to\n * pass in a hex string, you must pass it in as a `Uint8Array`, or use the\n * \"0x\"-prefix.\n *\n * It will also attempt to infer the types of the values. For example, if you\n * pass in a string for a `uint256`, it will result in a TypeScript compile-time\n * error. This does not work for all types, however. For example, if you use\n * nested arrays or tuples, the type will be inferred as `unknown`.\n *\n * The following types are supported:\n *\n * - `address`: A 20-byte Ethereum address.\n *   - As a 40-character-long hexadecimal string, starting with \"0x\".\n *   - As a 20-byte-long byte array, i.e., `Uint8Array`.\n * - `bool`: A boolean value.\n *   - As a boolean literal, i.e., `true` or `false`.\n *   - As the strings \"true\" or \"false\".\n * - `bytes(n)`: A dynamic byte array.\n *   - As a hexadecimal string, starting with \"0x\".\n *   - As a byte array, i.e., `Uint8Array`.\n *   - As a regular string, which will be interpreted as UTF-8.\n * - `function`: A Solidity function.\n *   - As a 48-character-long hexadecimal string, starting with \"0x\".\n *   - As a 24-byte-long byte array, i.e., `Uint8Array`.\n *   - As a {@link SolidityFunction} object.\n * - `int(n)`: A signed integer.\n *   - As a number.\n *   - As a `bigint`.\n *   - As a hexadecimal string, starting with \"0x\".\n * - `string`: A dynamic UTF-8 string.\n *   - As a regular string.\n *   - As a hexadecimal string, starting with \"0x\".\n *   - As a byte array, i.e., `Uint8Array`.\n * - `tuple`: A tuple of values.\n *   - As an array of values.\n * - `uint(n)`: An unsigned integer.\n *   - As a number.\n *   - As a `bigint`.\n *   - As a hexadecimal string, starting with \"0x\".\n *\n * @example\n * ```typescript\n * import { encode, decode } from '@metamask/abi-utils';\n *\n * const types = ['uint256', 'string'];\n * const encoded = encode(types, [42, 'Hello, world!']);\n * const decoded = decode(types, encoded);\n *\n * console.log(decoded); // [42n, 'Hello, world!']\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html\n * @param types - The types to encode.\n * @param values - The values to encode. This array must have the same length as\n * the types array.\n * @param packed - Whether to use the non-standard packed mode. Defaults to\n * `false`.\n * @param tight - Whether to pack the values tightly. When enabled, the values\n * will be packed without any padding. This matches the behaviour of\n * `ethereumjs-abi`. Defaults to `false`.\n * @returns The ABI encoded bytes.\n */\nconst encode = (types, values, packed, tight) => {\n    try {\n        return (0, packer_1.pack)({ types, values, packed, tight });\n    }\n    catch (error) {\n        if (error instanceof errors_1.ParserError) {\n            throw new errors_1.ParserError(`Unable to encode value: ${error.message}`, error);\n        }\n        throw new errors_1.ParserError(`An unexpected error occurred: ${(0, errors_1.getErrorMessage)(error)}`, error);\n    }\n};\nexports.encode = encode;\n/**\n * Encode the data with the provided type. The type must be a valid Solidity\n * ABI type.\n *\n * See {@link encode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodeSingle, decodeSingle } from '@metamask/abi-utils';\n *\n * const encoded = encodeSingle('uint256', 42);\n * const decoded = decodeSingle('uint256', encoded);\n *\n * console.log(decoded); // 42n\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param type - The type to encode.\n * @param value - The value to encode.\n * @returns The ABI encoded bytes.\n */\nconst encodeSingle = (type, value) => {\n    return (0, exports.encode)([type], [value]);\n};\nexports.encodeSingle = encodeSingle;\n/**\n * Encode the data with the provided types. The types must be valid Solidity\n * ABI types. This is similar to {@link encode}, but the values are encoded in\n * the non-standard packed mode. This differs from the standard encoding in the\n * following ways:\n *\n * - Most values are packed tightly, without alignment padding.\n *   - The exception is array values, which are padded to 32 bytes.\n * - Values are still padded to their full size, i.e., `uint16` values are still\n *  padded to 2 bytes, regardless of the length of the value.\n * - The encoding of dynamic types (`bytes`, `string`) is different. The length\n * of the dynamic type is not included in the encoding, and the dynamic type is\n * not padded to a multiple of 32 bytes.\n * - All values are encoded in-place, without any offsets.\n *\n * The encoding of this is ambiguous as soon as there is more than one dynamic\n * type. That means that these values cannot be decoded with {@link decode} or\n * Solidity's `abi.decode` function.\n *\n * See {@link encode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodePacked } from '@metamask/abi-utils';\n *\n * const encoded = encodePacked(['uint8'], [42]);\n *\n * console.log(encoded); // `Uint8Array [ 42 ]`\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#non-standard-packed-mode\n * @param types - The types to encode.\n * @param values - The values to encode.\n * @param tight - Whether to pack the values tightly. When enabled, `bytesN`\n * values in arrays will be packed without any padding. This matches the\n * behaviour of `ethereumjs-abi`. Defaults to `false`.\n * @returns The ABI encoded bytes.\n */\nconst encodePacked = (types, values, tight) => {\n    return (0, exports.encode)(types, values, true, tight);\n};\nexports.encodePacked = encodePacked;\n/**\n * Decode an ABI encoded buffer with the specified types. The types must be\n * valid Solidity ABI types.\n *\n * This will attempt to infer the output types from the input types. For\n * example, if you use `uint256` as an input type, the output type will be\n * `bigint`. This does not work for all types, however. For example, if you use\n * nested array types or tuple types, the output type will be `unknown`.\n *\n * The resulting types of the values will be as follows:\n *\n * | Contract ABI Type | Resulting JavaScript Type |\n * | ----------------- | ------------------------- |\n * | `address`         | `string`                  |\n * | `bool`            | `boolean`                 |\n * | `bytes(n)`        | `Uint8Array`              |\n * | `function`        | {@link SolidityFunction}  |\n * | `int(n)`          | `bigint`                  |\n * | `string`          | `string`                  |\n * | `tuple`           | `Array`                   |\n * | `array`           | `Array`                   |\n * | `uint(n)`         | `bigint`                  |\n *\n * @example\n * ```typescript\n * import { encode, decode } from '@metamask/abi-utils';\n *\n * const types = ['uint256', 'string'];\n * const encoded = encode(types, [42, 'Hello, world!']);\n * const decoded = decode(types, encoded);\n *\n * console.log(decoded); // [42n, 'Hello, world!']\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param types - The types to decode the bytes with.\n * @param value - The bytes-like value to decode.\n * @returns The decoded values as array.\n */\nconst decode = (types, value) => {\n    const bytes = (0, utils_1.createBytes)(value);\n    try {\n        return (0, packer_1.unpack)(types, bytes);\n    }\n    catch (error) {\n        if (error instanceof errors_1.ParserError) {\n            throw new errors_1.ParserError(`Unable to decode value: ${error.message}`, error);\n        }\n        throw new errors_1.ParserError(`An unexpected error occurred: ${(0, errors_1.getErrorMessage)(error)}`, error);\n    }\n};\nexports.decode = decode;\n/**\n * Decode the data with the provided type. The type must be a valid Solidity\n * ABI type.\n *\n * See {@link decode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodeSingle, decodeSingle } from '@metamask/abi-utils';\n *\n * const encoded = encodeSingle('uint256', 42);\n * const decoded = decodeSingle('uint256', encoded);\n *\n * console.log(decoded); // 42n\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param type - The type to decode.\n * @param value - The bytes-like value to decode.\n * @returns The decoded value.\n */\nconst decodeSingle = (type, value) => {\n    const result = (0, exports.decode)([type], value);\n    (0, utils_1.assert)(result.length === 1, new errors_1.ParserError('Decoded value array has unexpected length.'));\n    return result[0];\n};\nexports.decodeSingle = decodeSingle;\n//# sourceMappingURL=abi.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParserError = exports.getErrorStack = exports.getErrorMessage = void 0;\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * Attempt to get an error message from a value.\n *\n * - If the value is an error, the error's message is returned.\n * - If the value is an object with a `message` property, the value of that\n * property is returned.\n * - If the value is a string, the value is returned.\n * - Otherwise, \"Unknown error.\" is returned.\n *\n * @param error - The value to get an error message from.\n * @returns The error message.\n * @internal\n */\nconst getErrorMessage = (error) => {\n    if (typeof error === 'string') {\n        return error;\n    }\n    if (error instanceof Error) {\n        return error.message;\n    }\n    if ((0, utils_1.isObject)(error) &&\n        (0, utils_1.hasProperty)(error, 'message') &&\n        typeof error.message === 'string') {\n        return error.message;\n    }\n    return 'Unknown error.';\n};\nexports.getErrorMessage = getErrorMessage;\n/**\n * Get the error stack from a value. If the value is an error, the error's stack\n * is returned. Otherwise, it returns `undefined`.\n *\n * @param error - The value to get an error stack from.\n * @returns The error stack, or `undefined` if the value is not an error.\n * @internal\n */\nconst getErrorStack = (error) => {\n    if (error instanceof Error) {\n        return error.stack;\n    }\n    return undefined;\n};\nexports.getErrorStack = getErrorStack;\n/**\n * An error that is thrown when the ABI encoder or decoder encounters an\n * issue.\n */\nclass ParserError extends Error {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'ParserError';\n        const originalStack = (0, exports.getErrorStack)(originalError);\n        if (originalStack) {\n            this.stack = originalStack;\n        }\n    }\n}\nexports.ParserError = ParserError;\n//# sourceMappingURL=errors.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./abi\"), exports);\n__exportStar(require(\"./errors\"), exports);\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.iterate = void 0;\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * Iterate over a buffer with the specified size. This will yield a part of the\n * buffer starting at an increment of the specified size, until the end of the\n * buffer is reached.\n *\n * Calling the `skip` function will make it skip the specified number of bytes.\n *\n * @param buffer - The buffer to iterate over.\n * @param size - The number of bytes to iterate with.\n * @returns An iterator that yields the parts of the byte array.\n * @yields The parts of the byte array.\n */\nconst iterate = function* (buffer, size = 32) {\n    for (let pointer = 0; pointer < buffer.length; pointer += size) {\n        const skip = (length) => {\n            (0, utils_1.assert)(length >= 0, 'Cannot skip a negative number of bytes.');\n            (0, utils_1.assert)(length % size === 0, 'Length must be a multiple of the size.');\n            pointer += length;\n        };\n        const value = buffer.subarray(pointer);\n        yield { skip, value };\n    }\n    return {\n        skip: () => undefined,\n        value: new Uint8Array(),\n    };\n};\nexports.iterate = iterate;\n//# sourceMappingURL=iterator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unpack = exports.pack = exports.isDynamicParser = exports.getParser = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"./errors\");\nconst iterator_1 = require(\"./iterator\");\nconst parsers_1 = require(\"./parsers\");\nconst utils_2 = require(\"./utils\");\n/**\n * Get the parser for the specified type.\n *\n * @param type - The type to get a parser for.\n * @returns The parser.\n * @throws If there is no parser for the specified type.\n */\nconst getParser = (type) => {\n    const parsers = {\n        address: parsers_1.address,\n        array: parsers_1.array,\n        bool: parsers_1.bool,\n        bytes: parsers_1.bytes,\n        fixedBytes: parsers_1.fixedBytes,\n        function: parsers_1.fn,\n        number: parsers_1.number,\n        string: parsers_1.string,\n        tuple: parsers_1.tuple,\n    };\n    const staticParser = parsers[type];\n    if (staticParser) {\n        return staticParser;\n    }\n    const parser = Object.values(parsers).find((value) => value.isType(type));\n    if (parser) {\n        return parser;\n    }\n    throw new errors_1.ParserError(`The type \"${type}\" is not supported.`);\n};\nexports.getParser = getParser;\n/**\n * Check if the specified parser is dynamic, for the provided types. This is\n * primarily used for parsing tuples, where a tuple can be dynamic based on the\n * types. For other parsers, it will simply use the set `isDynamic` value.\n *\n * @param parser - The parser to check.\n * @param type - The type to check the parser with.\n * @returns Whether the parser is dynamic.\n */\nconst isDynamicParser = (parser, type) => {\n    const { isDynamic } = parser;\n    if (typeof isDynamic === 'function') {\n        return isDynamic(type);\n    }\n    return isDynamic;\n};\nexports.isDynamicParser = isDynamicParser;\n/**\n * Pack the provided values in a buffer, encoded with the specified types. If a\n * buffer is specified, the resulting value will be concatenated with the\n * buffer.\n *\n * @param args - The arguments object.\n * @param args.types - The types of the values to pack.\n * @param args.values - The values to pack.\n * @param args.packed - Whether to use the non-standard packed mode. Defaults to\n * `false`.\n * @param args.arrayPacked - Whether to use the non-standard packed mode for\n * arrays. Defaults to `false`.\n * @param args.byteArray - The byte array to encode the values into. Defaults to\n * an empty array.\n * @param args.tight - Whether to use tight packing mode. Only applicable when\n * `packed` is true. When true, the packed mode will not add any padding bytes.\n * This matches the packing behaviour of `ethereumjs-abi`, but is not standard.\n * @returns The resulting encoded buffer.\n */\nconst pack = ({ types, values, packed = false, tight = false, arrayPacked = false, byteArray = new Uint8Array(), }) => {\n    (0, utils_1.assert)(types.length === values.length, new errors_1.ParserError(`The number of types (${types.length}) does not match the number of values (${values.length}).`));\n    const { staticBuffer, dynamicBuffer, pointers } = types.reduce(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    ({ staticBuffer, dynamicBuffer, pointers }, type, index) => {\n        const parser = (0, exports.getParser)(type);\n        const value = values[index];\n        // If packed mode is enabled, we can skip the dynamic check, as all\n        // values are encoded in the static buffer.\n        if (packed || arrayPacked || !(0, exports.isDynamicParser)(parser, type)) {\n            return {\n                staticBuffer: parser.encode({\n                    buffer: staticBuffer,\n                    value,\n                    type,\n                    packed,\n                    tight,\n                }),\n                dynamicBuffer,\n                pointers,\n            };\n        }\n        const newStaticBuffer = (0, utils_1.concatBytes)([staticBuffer, new Uint8Array(32)]);\n        const newDynamicBuffer = parser.encode({\n            buffer: dynamicBuffer,\n            value,\n            type,\n            packed,\n            tight,\n        });\n        return {\n            staticBuffer: newStaticBuffer,\n            dynamicBuffer: newDynamicBuffer,\n            pointers: [\n                ...pointers,\n                { position: staticBuffer.length, pointer: dynamicBuffer.length },\n            ],\n        };\n    }, {\n        staticBuffer: new Uint8Array(),\n        dynamicBuffer: new Uint8Array(),\n        pointers: [],\n    });\n    // If packed mode is enabled, there shouldn't be any dynamic values.\n    (0, utils_1.assert)((!packed && !arrayPacked) || dynamicBuffer.length === 0, new errors_1.ParserError('Invalid pack state.'));\n    const dynamicStart = staticBuffer.length;\n    const updatedBuffer = pointers.reduce((target, { pointer, position }) => {\n        const offset = (0, utils_2.padStart)((0, utils_1.numberToBytes)(dynamicStart + pointer));\n        return (0, utils_2.set)(target, offset, position);\n    }, staticBuffer);\n    return (0, utils_1.concatBytes)([byteArray, updatedBuffer, dynamicBuffer]);\n};\nexports.pack = pack;\nconst unpack = (types, buffer) => {\n    const iterator = (0, iterator_1.iterate)(buffer);\n    return types.map((type) => {\n        const { value: { value, skip }, done, } = iterator.next();\n        (0, utils_1.assert)(!done, new errors_1.ParserError(`The encoded value is invalid for the provided types. Reached end of buffer while attempting to parse \"${type}\".`));\n        const parser = (0, exports.getParser)(type);\n        const isDynamic = (0, exports.isDynamicParser)(parser, type);\n        if (isDynamic) {\n            const pointer = (0, utils_1.bytesToNumber)(value.subarray(0, 32));\n            const target = buffer.subarray(pointer);\n            return parser.decode({ type, value: target, skip });\n        }\n        return parser.decode({ type, value, skip });\n    });\n};\nexports.unpack = unpack;\n//# sourceMappingURL=packer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.address = exports.getAddress = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst utils_2 = require(\"../utils\");\n/**\n * Normalize an address value. This accepts the address as:\n *\n * - A hex string starting with the `0x` prefix.\n * - A byte array (`Uint8Array` or `Buffer`).\n *\n * It checks that the address is 20 bytes long.\n *\n * @param value - The value to normalize.\n * @returns The normalized address as `Uint8Array`.\n */\nconst getAddress = (value) => {\n    const bytesValue = (0, utils_1.createBytes)(value);\n    (0, utils_1.assert)(bytesValue.length <= 20, new errors_1.ParserError(`Invalid address value. Expected address to be 20 bytes long, but received ${bytesValue.length} bytes.`));\n    return (0, utils_2.padStart)(bytesValue, 20);\n};\nexports.getAddress = getAddress;\nexports.address = {\n    isDynamic: false,\n    /**\n     * Get if the given value is a valid address type. Since `address` is a simple\n     * type, this is just a check that the value is \"address\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a valid address type.\n     */\n    isType: (type) => type === 'address',\n    /**\n     * Get the byte length of an encoded address. Since `address` is a simple\n     * type, this always returns 32.\n     *\n     * Note that actual addresses are only 20 bytes long, but the encoding of\n     * the `address` type is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded address.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given address to a 32-byte-long byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The address to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @returns The bytes with the encoded address added to it.\n     */\n    encode({ buffer, value, packed }) {\n        const addressValue = (0, exports.getAddress)(value);\n        // If we're using packed encoding, we can just add the address bytes to the\n        // byte array, without adding any padding.\n        if (packed) {\n            return (0, utils_1.concatBytes)([buffer, addressValue]);\n        }\n        const addressBuffer = (0, utils_2.padStart)(addressValue);\n        return (0, utils_1.concatBytes)([buffer, addressBuffer]);\n    },\n    /**\n     * Decode the given byte array to an address.\n     *\n     * @param args - The decoding arguments.\n     * @param args.value - The byte array to decode.\n     * @returns The decoded address as a hexadecimal string, starting with the\n     * \"0x\"-prefix.\n     */\n    decode({ value }) {\n        return (0, utils_1.add0x)((0, utils_1.bytesToHex)(value.slice(12, 32)));\n    },\n};\n//# sourceMappingURL=address.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.array = exports.getTupleType = exports.getArrayType = exports.isArrayType = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst packer_1 = require(\"../packer\");\nconst utils_2 = require(\"../utils\");\nconst fixed_bytes_1 = require(\"./fixed-bytes\");\nconst tuple_1 = require(\"./tuple\");\nconst ARRAY_REGEX = /^(?<type>.*)\\[(?<length>\\d*?)\\]$/u;\nconst isArrayType = (type) => ARRAY_REGEX.test(type);\nexports.isArrayType = isArrayType;\n/**\n * Get the type of the array.\n *\n * @param type - The type to get the array type for.\n * @returns The array type.\n */\nconst getArrayType = (type) => {\n    const match = type.match(ARRAY_REGEX);\n    (0, utils_1.assert)(match?.groups?.type, new errors_1.ParserError(`Invalid array type. Expected an array type, but received \"${type}\".`));\n    return [\n        match.groups.type,\n        match.groups.length ? parseInt(match.groups.length, 10) : undefined,\n    ];\n};\nexports.getArrayType = getArrayType;\n/**\n * Get the type of the array as a tuple type. This is used for encoding fixed\n * length arrays, which are encoded as tuples.\n *\n * @param innerType - The type of the array.\n * @param length - The length of the array.\n * @returns The tuple type.\n */\nconst getTupleType = (innerType, length) => {\n    return `(${new Array(length).fill(innerType).join(',')})`;\n};\nexports.getTupleType = getTupleType;\nexports.array = {\n    /**\n     * Check if the array is dynamic. Arrays are dynamic if the array does not\n     * have a fixed length, or if the array type is dynamic.\n     *\n     * @param type - The type to check.\n     * @returns Whether the array is dynamic.\n     */\n    isDynamic(type) {\n        const [innerType, length] = (0, exports.getArrayType)(type);\n        return (\n        // `T[]` is dynamic for any `T`. `T[k]` is dynamic for any dynamic `T` and\n        // any `k >= 0`.\n        length === undefined || (0, packer_1.isDynamicParser)((0, packer_1.getParser)(innerType), innerType));\n    },\n    /**\n     * Check if a type is an array type.\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is an array type.\n     */\n    isType(type) {\n        return (0, exports.isArrayType)(type);\n    },\n    /**\n     * Get the byte length of an encoded array. If the array is dynamic, this\n     * returns 32, i.e., the length of the pointer to the array. If the array is\n     * static, this returns the byte length of the resulting tuple type.\n     *\n     * @param type - The type to get the byte length for.\n     * @returns The byte length of an encoded array.\n     */\n    getByteLength(type) {\n        (0, utils_1.assert)((0, exports.isArrayType)(type), new errors_1.ParserError(`Expected an array type, but received \"${type}\".`));\n        const [innerType, length] = (0, exports.getArrayType)(type);\n        if (!(0, packer_1.isDynamicParser)(this, type) && length !== undefined) {\n            return tuple_1.tuple.getByteLength((0, exports.getTupleType)(innerType, length));\n        }\n        return 32;\n    },\n    /**\n     * Encode the given array to a byte array. If the array is static, this uses\n     * the tuple encoder.\n     *\n     * @param args - The encoding arguments.\n     * @param args.type - The type of the array.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The array to encode.\n     * @param args.packed - Whether to use non-standard packed encoding.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded array added to it.\n     */\n    encode({ type, buffer, value, packed, tight }) {\n        const [arrayType, fixedLength] = (0, exports.getArrayType)(type);\n        // Packed encoding does not support nested arrays.\n        (0, utils_1.assert)(!packed || !(0, exports.isArrayType)(arrayType), new errors_1.ParserError(`Cannot pack nested arrays.`));\n        // Tightly pack `T[]` where `T` is a dynamic type. This is not supported in\n        // Solidity, but is commonly used in the Ethereum ecosystem.\n        if (packed && (0, packer_1.isDynamicParser)((0, packer_1.getParser)(arrayType), arrayType)) {\n            return (0, packer_1.pack)({\n                types: new Array(value.length).fill(arrayType),\n                values: value,\n                byteArray: buffer,\n                packed,\n                arrayPacked: true,\n                tight,\n            });\n        }\n        if (fixedLength) {\n            (0, utils_1.assert)(fixedLength === value.length, new errors_1.ParserError(`Array length does not match type length. Expected a length of ${fixedLength}, but received ${value.length}.`));\n            // `T[k]` for any `T` and `k` is encoded as `(T[0], ..., T[k - 1])`.\n            return tuple_1.tuple.encode({\n                type: (0, exports.getTupleType)(arrayType, fixedLength),\n                buffer,\n                value,\n                // In \"tight\" mode, we don't pad the values to 32 bytes if the value is\n                // of type `bytesN`. This is an edge case in `ethereumjs-abi` that we\n                // support to provide compatibility with it.\n                packed: fixed_bytes_1.fixedBytes.isType(arrayType) && tight,\n                tight,\n            });\n        }\n        // For packed encoding, we don't need to encode the length of the array,\n        // so we can just encode the values.\n        if (packed) {\n            return (0, packer_1.pack)({\n                types: new Array(value.length).fill(arrayType),\n                values: value,\n                byteArray: buffer,\n                // In \"tight\" mode, we don't pad the values to 32 bytes if the value is\n                // of type `bytesN`. This is an edge case in `ethereumjs-abi` that we\n                // support to provide compatibility with it.\n                packed: fixed_bytes_1.fixedBytes.isType(arrayType) && tight,\n                arrayPacked: true,\n                tight,\n            });\n        }\n        // `T[]` with `k` elements is encoded as `k (T[0], ..., T[k - 1])`. That\n        // means that we just need to encode the length of the array, and then the\n        // array itself. The pointer is encoded by the {@link pack} function.\n        const arrayLength = (0, utils_2.padStart)((0, utils_1.numberToBytes)(value.length));\n        return (0, packer_1.pack)({\n            types: new Array(value.length).fill(arrayType),\n            values: value,\n            byteArray: (0, utils_1.concatBytes)([buffer, arrayLength]),\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode an array from the given byte array.\n     *\n     * @param args - The decoding arguments.\n     * @param args.type - The type of the array.\n     * @param args.value - The byte array to decode.\n     * @returns The decoded array.\n     */\n    decode({ type, value, ...rest }) {\n        const [arrayType, fixedLength] = (0, exports.getArrayType)(type);\n        if (fixedLength) {\n            const result = tuple_1.tuple.decode({\n                type: (0, exports.getTupleType)(arrayType, fixedLength),\n                value,\n                ...rest,\n            });\n            (0, utils_1.assert)(result.length === fixedLength, new errors_1.ParserError(`Array length does not match type length. Expected a length of ${fixedLength}, but received ${result.length}.`));\n            return result;\n        }\n        const arrayLength = (0, utils_1.bytesToNumber)(value.subarray(0, 32));\n        return (0, packer_1.unpack)(new Array(arrayLength).fill(arrayType), value.subarray(32));\n    },\n};\n//# sourceMappingURL=array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bool = exports.getBooleanValue = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst number_1 = require(\"./number\");\nconst BooleanCoercer = (0, superstruct_1.coerce)((0, superstruct_1.boolean)(), (0, superstruct_1.union)([(0, superstruct_1.literal)('true'), (0, superstruct_1.literal)('false')]), (value) => value === 'true');\n/**\n * Normalize a boolean value. This accepts the boolean as:\n *\n * - A boolean literal.\n * - The string \"true\" or \"false\".\n *\n * @param value - The value to get a boolean for.\n * @returns The parsed boolean value. This is `BigInt(1)` for truthy values, or\n * `BigInt(0)` for falsy values.\n */\nconst getBooleanValue = (value) => {\n    try {\n        const booleanValue = (0, superstruct_1.create)(value, BooleanCoercer);\n        if (booleanValue) {\n            return BigInt(1);\n        }\n        return BigInt(0);\n    }\n    catch {\n        throw new errors_1.ParserError(`Invalid boolean value. Expected a boolean literal, or the string \"true\" or \"false\", but received \"${value}\".`);\n    }\n};\nexports.getBooleanValue = getBooleanValue;\nexports.bool = {\n    isDynamic: false,\n    /**\n     * Get if the given value is a valid boolean type. Since `bool` is a simple\n     * type, this is just a check that the value is \"bool\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a valid boolean type.\n     */\n    isType: (type) => type === 'bool',\n    /**\n     * Get the byte length of an encoded boolean. Since `bool` is a simple\n     * type, this always returns 32.\n     *\n     * Note that actual booleans are only 1 byte long, but the encoding of\n     * the `bool` type is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded boolean.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given boolean to a byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The boolean to encode.\n     * @param args.packed - Whether the value is packed.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded boolean added to it.\n     */\n    encode({ buffer, value, packed, tight }) {\n        const booleanValue = (0, exports.getBooleanValue)(value);\n        // For packed encoding, we add a single byte (`0x00` or `0x01`) to the byte\n        // array.\n        if (packed) {\n            return (0, utils_1.concatBytes)([buffer, (0, utils_1.bigIntToBytes)(booleanValue)]);\n        }\n        // Booleans are encoded as 32-byte integers, so we use the number parser\n        // to encode the boolean value.\n        return number_1.number.encode({\n            type: 'uint256',\n            buffer,\n            value: booleanValue,\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode the given byte array to a boolean.\n     *\n     * @param args - The decoding arguments.\n     * @returns The decoded boolean.\n     */\n    decode(args) {\n        // Booleans are encoded as 32-byte integers, so we use the number parser\n        // to decode the boolean value.\n        return number_1.number.decode({ ...args, type: 'uint256' }) === BigInt(1);\n    },\n};\n//# sourceMappingURL=bool.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst utils_2 = require(\"../utils\");\nexports.bytes = {\n    isDynamic: true,\n    /**\n     * Check if a type is a bytes type. Since `bytes` is a simple type, this is\n     * just a check that the type is \"bytes\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a bytes type.\n     */\n    isType: (type) => type === 'bytes',\n    /**\n     * Get the byte length of an encoded bytes value. Since `bytes` is a simple\n     * type, this always returns 32.\n     *\n     * Note that actual length of a bytes value is variable, but the encoded\n     * static value (pointer) is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded bytes value.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given bytes value to a byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The bytes value to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @returns The bytes with the encoded bytes value added to it.\n     */\n    encode({ buffer, value, packed }) {\n        const bufferValue = (0, utils_1.createBytes)(value);\n        // For packed encoding, we can just add the bytes value to the byte array,\n        // without adding any padding or alignment. There is also no need to\n        // encode the length of the bytes.\n        if (packed) {\n            return (0, utils_1.concatBytes)([buffer, bufferValue]);\n        }\n        const paddedSize = Math.ceil(bufferValue.byteLength / 32) * 32;\n        // Bytes of length `k` are encoded as `k pad_right(bytes)`.\n        return (0, utils_1.concatBytes)([\n            buffer,\n            (0, utils_2.padStart)((0, utils_1.numberToBytes)(bufferValue.byteLength)),\n            (0, utils_2.padEnd)(bufferValue, paddedSize),\n        ]);\n    },\n    /**\n     * Decode the given byte array to a bytes value.\n     *\n     * @param args - The decoding arguments.\n     * @param args.value - The byte array to decode.\n     * @returns The decoded bytes value as a `Uint8Array`.\n     */\n    decode({ value }) {\n        const bytesValue = value.subarray(0, 32);\n        const length = (0, utils_1.bytesToNumber)(bytesValue);\n        // Since we're returning a `Uint8Array`, we use `slice` to copy the bytes\n        // into a new array.\n        return value.slice(32, 32 + length);\n    },\n};\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fixedBytes = exports.getByteLength = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst utils_2 = require(\"../utils\");\nconst BYTES_REGEX = /^bytes([0-9]{1,2})$/u;\n/**\n * Get the length of the specified type. If a length is not specified, or if the\n * length is out of range (0 < n <= 32), this will throw an error.\n *\n * @param type - The type to get the length for.\n * @returns The byte length of the type.\n */\nconst getByteLength = (type) => {\n    const bytes = type.match(BYTES_REGEX)?.[1];\n    (0, utils_1.assert)(bytes, `Invalid byte length. Expected a number between 1 and 32, but received \"${type}\".`);\n    const length = Number(bytes);\n    (0, utils_1.assert)(length > 0 && length <= 32, new errors_1.ParserError(`Invalid byte length. Expected a number between 1 and 32, but received \"${type}\".`));\n    return length;\n};\nexports.getByteLength = getByteLength;\nexports.fixedBytes = {\n    isDynamic: false,\n    /**\n     * Check if a type is a fixed bytes type.\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a fixed bytes type.\n     */\n    isType(type) {\n        return BYTES_REGEX.test(type);\n    },\n    /**\n     * Get the byte length of an encoded fixed bytes type.\n     *\n     * @returns The byte length of the type.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode a fixed bytes value.\n     *\n     * @param args - The arguments to encode.\n     * @param args.type - The type of the value.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The value to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @returns The bytes with the encoded value added to it.\n     */\n    encode({ type, buffer, value, packed }) {\n        const length = (0, exports.getByteLength)(type);\n        const bufferValue = (0, utils_1.createBytes)(value);\n        (0, utils_1.assert)(bufferValue.length <= length, new errors_1.ParserError(`Expected a value of length ${length}, but received a value of length ${bufferValue.length}.`));\n        // For packed encoding, the value is padded to the length of the type, and\n        // then added to the byte array.\n        if (packed) {\n            return (0, utils_1.concatBytes)([buffer, (0, utils_2.padEnd)(bufferValue, length)]);\n        }\n        return (0, utils_1.concatBytes)([buffer, (0, utils_2.padEnd)(bufferValue)]);\n    },\n    /**\n     * Decode a fixed bytes value.\n     *\n     * @param args - The arguments to decode.\n     * @param args.type - The type of the value.\n     * @param args.value - The value to decode.\n     * @returns The decoded value as a `Uint8Array`.\n     */\n    decode({ type, value }) {\n        const length = (0, exports.getByteLength)(type);\n        // Since we're returning a `Uint8Array`, we use `slice` to copy the bytes\n        // into a new array.\n        return value.slice(0, length);\n    },\n};\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fn = exports.getFunction = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst fixed_bytes_1 = require(\"./fixed-bytes\");\n/**\n * A struct that represents a Solidity function. The value must be a hex string\n * or a byte array. The created value will always be an object with an `address`\n * and `selector` property.\n */\nconst FunctionStruct = (0, superstruct_1.coerce)((0, superstruct_1.object)({\n    address: utils_1.StrictHexStruct,\n    selector: utils_1.StrictHexStruct,\n}), (0, superstruct_1.union)([utils_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]), (value) => {\n    const bytes = (0, utils_1.createBytes)(value);\n    (0, utils_1.assert)(bytes.length === 24, new errors_1.ParserError(`Invalid Solidity function. Expected function to be 24 bytes long, but received ${bytes.length} bytes.`));\n    return {\n        address: (0, utils_1.bytesToHex)(bytes.subarray(0, 20)),\n        selector: (0, utils_1.bytesToHex)(bytes.subarray(20, 24)),\n    };\n});\n/**\n * Normalize a function. This accepts the function as:\n *\n * - A {@link SolidityFunction} object.\n * - A hexadecimal string.\n * - A byte array.\n *\n * @param input - The function-like input.\n * @returns The function as buffer.\n */\nconst getFunction = (input) => {\n    const value = (0, superstruct_1.create)(input, FunctionStruct);\n    return (0, utils_1.concatBytes)([(0, utils_1.hexToBytes)(value.address), (0, utils_1.hexToBytes)(value.selector)]);\n};\nexports.getFunction = getFunction;\nexports.fn = {\n    isDynamic: false,\n    /**\n     * Check if a type is a function type. Since `function` is a simple type, this\n     * is just a check that the type is \"function\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a function type.\n     */\n    isType: (type) => type === 'function',\n    /**\n     * Get the byte length of an encoded function. Since `function` is a simple\n     * type, this always returns 32.\n     *\n     * Note that actual functions are only 24 bytes long, but the encoding of\n     * the `function` type is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded function.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given function to a byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The function to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded function added to it.\n     */\n    encode({ buffer, value, packed, tight }) {\n        const fnValue = (0, exports.getFunction)(value);\n        // Functions are encoded as `bytes24`, so we use the fixedBytes parser to\n        // encode the function.\n        return fixed_bytes_1.fixedBytes.encode({\n            type: 'bytes24',\n            buffer,\n            value: fnValue,\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode the given byte array to a function.\n     *\n     * @param args - The decoding arguments.\n     * @param args.value - The byte array to decode.\n     * @returns The decoded function as a {@link SolidityFunction} object.\n     */\n    decode({ value }) {\n        return {\n            address: (0, utils_1.bytesToHex)(value.slice(0, 20)),\n            selector: (0, utils_1.bytesToHex)(value.slice(20, 24)),\n        };\n    },\n};\n//# sourceMappingURL=function.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./address\"), exports);\n__exportStar(require(\"./array\"), exports);\n__exportStar(require(\"./bool\"), exports);\n__exportStar(require(\"./bytes\"), exports);\n__exportStar(require(\"./fixed-bytes\"), exports);\n__exportStar(require(\"./function\"), exports);\n__exportStar(require(\"./number\"), exports);\n__exportStar(require(\"./parser\"), exports);\n__exportStar(require(\"./string\"), exports);\n__exportStar(require(\"./tuple\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.number = exports.getBigInt = exports.assertNumberLength = exports.getLength = exports.isSigned = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst utils_2 = require(\"../utils\");\nconst NUMBER_REGEX = /^u?int(?<length>[0-9]*)?$/u;\n/**\n * Check if a number type is signed.\n *\n * @param type - The type to check.\n * @returns Whether the type is signed.\n */\nconst isSigned = (type) => {\n    return !type.startsWith('u');\n};\nexports.isSigned = isSigned;\n/**\n * Get the length of the specified type. If a length is not specified, if the\n * length is out of range (8 <= n <= 256), or if the length is not a multiple of\n * 8, this will throw an error.\n *\n * @param type - The type to get the length for.\n * @returns The bit length of the type.\n */\nconst getLength = (type) => {\n    if (type === 'int' || type === 'uint') {\n        return 256;\n    }\n    const match = type.match(NUMBER_REGEX);\n    (0, utils_1.assert)(match?.groups?.length, new errors_1.ParserError(`Invalid number type. Expected a number type, but received \"${type}\".`));\n    const length = parseInt(match.groups.length, 10);\n    (0, utils_1.assert)(length >= 8 && length <= 256, new errors_1.ParserError(`Invalid number length. Expected a number between 8 and 256, but received \"${type}\".`));\n    (0, utils_1.assert)(length % 8 === 0, new errors_1.ParserError(`Invalid number length. Expected a multiple of 8, but received \"${type}\".`));\n    return length;\n};\nexports.getLength = getLength;\n/**\n * Assert that the byte length of the given value is in range for the given\n * number type.\n *\n * @param value - The value to check.\n * @param type - The type of the value.\n * @throws If the value is out of range for the type.\n */\nconst assertNumberLength = (value, type) => {\n    const length = (0, exports.getLength)(type);\n    const maxValue = BigInt(2) ** BigInt(length - ((0, exports.isSigned)(type) ? 1 : 0)) - BigInt(1);\n    if ((0, exports.isSigned)(type)) {\n        // Signed types must be in the range of `-(2^(length - 1))` to\n        // `2^(length - 1) - 1`.\n        (0, utils_1.assert)(value >= -(maxValue + BigInt(1)) && value <= maxValue, new errors_1.ParserError(`Number \"${value}\" is out of range for type \"${type}\".`));\n        return;\n    }\n    // Unsigned types must be in the range of `0` to `2^length - 1`.\n    (0, utils_1.assert)(value <= maxValue, new errors_1.ParserError(`Number \"${value}\" is out of range for type \"${type}\".`));\n};\nexports.assertNumberLength = assertNumberLength;\n/**\n * Normalize a `bigint` value. This accepts the value as:\n *\n * - A `bigint`.\n * - A `number`.\n * - A decimal string, i.e., a string that does not start with \"0x\".\n * - A hexadecimal string, i.e., a string that starts with \"0x\".\n *\n * @param value - The number-like value to parse.\n * @returns The value parsed as bigint.\n */\nconst getBigInt = (value) => {\n    try {\n        return (0, utils_1.createBigInt)(value);\n    }\n    catch {\n        throw new errors_1.ParserError(`Invalid number. Expected a valid number value, but received \"${value}\".`);\n    }\n};\nexports.getBigInt = getBigInt;\nexports.number = {\n    isDynamic: false,\n    /**\n     * Check if a type is a number type.\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a number type.\n     */\n    isType(type) {\n        return NUMBER_REGEX.test(type);\n    },\n    /**\n     * Get the byte length of an encoded number type. Since `int` and `uint` are\n     * simple types, this will always return 32.\n     *\n     * @returns The byte length of the type.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode a number value.\n     *\n     * @param args - The arguments to encode.\n     * @param args.type - The type of the value.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The value to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @returns The bytes with the encoded value added to it.\n     */\n    encode({ type, buffer, value, packed }) {\n        const bigIntValue = (0, exports.getBigInt)(value);\n        (0, exports.assertNumberLength)(bigIntValue, type);\n        if ((0, exports.isSigned)(type)) {\n            // For packed encoding, the value is padded to the length of the type, and\n            // then added to the byte array.\n            if (packed) {\n                const length = (0, exports.getLength)(type) / 8;\n                return (0, utils_1.concatBytes)([buffer, (0, utils_1.signedBigIntToBytes)(bigIntValue, length)]);\n            }\n            return (0, utils_1.concatBytes)([\n                buffer,\n                (0, utils_2.padStart)((0, utils_1.signedBigIntToBytes)(bigIntValue, 32)),\n            ]);\n        }\n        // For packed encoding, the value is padded to the length of the type, and\n        // then added to the byte array.\n        if (packed) {\n            const length = (0, exports.getLength)(type) / 8;\n            return (0, utils_1.concatBytes)([\n                buffer,\n                (0, utils_2.padStart)((0, utils_1.bigIntToBytes)(bigIntValue), length),\n            ]);\n        }\n        return (0, utils_1.concatBytes)([buffer, (0, utils_2.padStart)((0, utils_1.bigIntToBytes)(bigIntValue))]);\n    },\n    /**\n     * Decode a number value.\n     *\n     * @param args - The decoding arguments.\n     * @param args.type - The type of the value.\n     * @param args.value - The value to decode.\n     * @returns The decoded value.\n     */\n    decode({ type, value }) {\n        const buffer = value.subarray(0, 32);\n        if ((0, exports.isSigned)(type)) {\n            const numberValue = (0, utils_1.bytesToSignedBigInt)(buffer);\n            (0, exports.assertNumberLength)(numberValue, type);\n            return numberValue;\n        }\n        const numberValue = (0, utils_1.bytesToBigInt)(buffer);\n        (0, exports.assertNumberLength)(numberValue, type);\n        return numberValue;\n    },\n};\n//# sourceMappingURL=number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=parser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.string = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst bytes_1 = require(\"./bytes\");\nexports.string = {\n    isDynamic: true,\n    /**\n     * Check if a type is a string type. Since `string` is a simple type, this\n     * is just a check if the type is \"string\".\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a string type.\n     */\n    isType: (type) => type === 'string',\n    /**\n     * Get the byte length of an encoded string type. Since `string` is a simple\n     * type, this will always return 32.\n     *\n     * Note that actual strings are variable in length, but the encoded static\n     * value (pointer) is always 32 bytes long.\n     *\n     * @returns The byte length of an encoded string.\n     */\n    getByteLength() {\n        return 32;\n    },\n    /**\n     * Encode the given string value to a byte array.\n     *\n     * @param args - The encoding arguments.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The string value to encode.\n     * @param args.packed - Whether to use packed encoding.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded string value added to it.\n     */\n    encode({ buffer, value, packed, tight }) {\n        // Strings are encoded as UTF-8 bytes, so we use the bytes parser to encode\n        // the string as bytes.\n        return bytes_1.bytes.encode({\n            type: 'bytes',\n            buffer,\n            value: (0, utils_1.stringToBytes)(value),\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode the given byte array to a string value.\n     *\n     * @param args - The decoding arguments.\n     * @returns The decoded string value.\n     */\n    decode(args) {\n        // Strings are encoded as UTF-8 bytes, so we use the bytes parser to decode\n        // the bytes, and convert them to a string.\n        return (0, utils_1.bytesToString)(bytes_1.bytes.decode(args));\n    },\n};\n//# sourceMappingURL=string.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tuple = exports.getTupleElements = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst errors_1 = require(\"../errors\");\nconst packer_1 = require(\"../packer\");\nconst TUPLE_REGEX = /^\\((.+)\\)$/u;\nconst isTupleType = (type) => TUPLE_REGEX.test(type);\n/**\n * Get elements from a tuple type.\n *\n * @param type - The tuple type to get the types for.\n * @returns The elements of the tuple as string array.\n */\nconst getTupleElements = (type) => {\n    (0, utils_1.assert)(type.startsWith('(') && type.endsWith(')'), new errors_1.ParserError(`Invalid tuple type. Expected tuple type, but received \"${type}\".`));\n    const elements = [];\n    let current = '';\n    let depth = 0;\n    for (let i = 1; i < type.length - 1; i++) {\n        const char = type[i];\n        if (char === ',' && depth === 0) {\n            elements.push(current.trim());\n            current = '';\n        }\n        else {\n            current += char;\n            if (char === '(') {\n                depth += 1;\n            }\n            else if (char === ')') {\n                depth -= 1;\n            }\n        }\n    }\n    if (current.trim()) {\n        elements.push(current.trim());\n    }\n    return elements;\n};\nexports.getTupleElements = getTupleElements;\nexports.tuple = {\n    /**\n     * Check if the tuple is dynamic. Tuples are dynamic if one or more elements\n     * of the tuple are dynamic.\n     *\n     * @param type - The type to check.\n     * @returns Whether the tuple is dynamic.\n     */\n    isDynamic(type) {\n        const elements = (0, exports.getTupleElements)(type);\n        return elements.some((element) => {\n            const parser = (0, packer_1.getParser)(element);\n            return (0, packer_1.isDynamicParser)(parser, element);\n        });\n    },\n    /**\n     * Check if a type is a tuple type.\n     *\n     * @param type - The type to check.\n     * @returns Whether the type is a tuple type.\n     */\n    isType(type) {\n        return isTupleType(type);\n    },\n    /**\n     * Get the byte length of a tuple type. If the tuple is dynamic, this will\n     * always return 32. If the tuple is static, this will return the sum of the\n     * byte lengths of the tuple elements.\n     *\n     * @param type - The type to get the byte length for.\n     * @returns The byte length of the tuple type.\n     */\n    getByteLength(type) {\n        if ((0, packer_1.isDynamicParser)(this, type)) {\n            return 32;\n        }\n        const elements = (0, exports.getTupleElements)(type);\n        return elements.reduce((total, element) => {\n            return total + (0, packer_1.getParser)(element).getByteLength(element);\n        }, 0);\n    },\n    /**\n     * Encode a tuple value.\n     *\n     * @param args - The encoding arguments.\n     * @param args.type - The type of the value.\n     * @param args.buffer - The byte array to add to.\n     * @param args.value - The value to encode.\n     * @param args.packed - Whether to use non-standard packed encoding.\n     * @param args.tight - Whether to use non-standard tight encoding.\n     * @returns The bytes with the encoded value added to it.\n     */\n    encode({ type, buffer, value, packed, tight }) {\n        const elements = (0, exports.getTupleElements)(type);\n        return (0, packer_1.pack)({\n            types: elements,\n            values: value,\n            byteArray: buffer,\n            packed,\n            tight,\n        });\n    },\n    /**\n     * Decode a tuple value.\n     *\n     * @param args - The decoding arguments.\n     * @param args.type - The type of the value.\n     * @param args.value - The value to decode.\n     * @param args.skip - A function to skip a number of bytes.\n     * @returns The decoded value.\n     */\n    decode({ type, value, skip }) {\n        const elements = (0, exports.getTupleElements)(type);\n        const length = this.getByteLength(type) - 32;\n        skip(length);\n        return (0, packer_1.unpack)(elements, value);\n    },\n};\n//# sourceMappingURL=tuple.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=abi.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./abi\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.padEnd = exports.padStart = exports.set = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nconst BUFFER_WIDTH = 32;\n/**\n * Set `buffer` in `target` at the specified position.\n *\n * @param target - The buffer to set to.\n * @param buffer - The buffer to set in the target.\n * @param position - The position at which to set the target.\n * @returns The combined buffer.\n */\nconst set = (target, buffer, position) => {\n    return (0, utils_1.concatBytes)([\n        target.subarray(0, position),\n        buffer,\n        target.subarray(position + buffer.length),\n    ]);\n};\nexports.set = set;\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the start.\n *\n * @param buffer - The buffer to add padding to.\n * @param length - The number of bytes to pad the buffer to.\n * @returns The padded buffer.\n */\nconst padStart = (buffer, length = BUFFER_WIDTH) => {\n    const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(0x00);\n    return (0, utils_1.concatBytes)([padding, buffer]);\n};\nexports.padStart = padStart;\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the end.\n *\n * @param buffer - The buffer to add padding to.\n * @param length - The number of bytes to pad the buffer to.\n * @returns The padded buffer.\n */\nconst padEnd = (buffer, length = BUFFER_WIDTH) => {\n    const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(0x00);\n    return (0, utils_1.concatBytes)([buffer, padding]);\n};\nexports.padEnd = padEnd;\n//# sourceMappingURL=buffer.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./buffer\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEncryptionPublicKey = exports.decryptSafely = exports.decrypt = exports.encryptSafely = exports.encrypt = void 0;\nconst base_1 = require(\"@scure/base\");\nconst nacl = __importStar(require(\"tweetnacl\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nfunction encrypt({ publicKey, data, version, }) {\n    if ((0, utils_1.isNullish)(publicKey)) {\n        throw new Error('Missing publicKey parameter');\n    }\n    else if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(version)) {\n        throw new Error('Missing version parameter');\n    }\n    switch (version) {\n        case 'x25519-xsalsa20-poly1305': {\n            if (typeof data !== 'string') {\n                throw new Error('Message data must be given as a string');\n            }\n            // generate ephemeral keypair\n            const ephemeralKeyPair = nacl.box.keyPair();\n            // assemble encryption parameters - from string to UInt8\n            let pubKeyUInt8Array;\n            try {\n                pubKeyUInt8Array = base_1.base64.decode(publicKey);\n            }\n            catch (err) {\n                throw new Error('Bad public key');\n            }\n            const msgParamsUInt8Array = base_1.utf8.decode(data);\n            const nonce = nacl.randomBytes(nacl.box.nonceLength);\n            // encrypt\n            const encryptedMessage = nacl.box(msgParamsUInt8Array, nonce, pubKeyUInt8Array, ephemeralKeyPair.secretKey);\n            // handle encrypted data\n            const output = {\n                version: 'x25519-xsalsa20-poly1305',\n                nonce: base_1.base64.encode(nonce),\n                ephemPublicKey: base_1.base64.encode(ephemeralKeyPair.publicKey),\n                ciphertext: base_1.base64.encode(encryptedMessage),\n            };\n            // return encrypted msg data\n            return output;\n        }\n        default:\n            throw new Error('Encryption type/version not supported');\n    }\n}\nexports.encrypt = encrypt;\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nfunction encryptSafely({ publicKey, data, version, }) {\n    if ((0, utils_1.isNullish)(publicKey)) {\n        throw new Error('Missing publicKey parameter');\n    }\n    else if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(version)) {\n        throw new Error('Missing version parameter');\n    }\n    const DEFAULT_PADDING_LENGTH = 2 ** 11;\n    const NACL_EXTRA_BYTES = 16;\n    if (typeof data === 'object' && data && 'toJSON' in data) {\n        // remove toJSON attack vector\n        // TODO, check all possible children\n        throw new Error('Cannot encrypt with toJSON property.  Please remove toJSON property');\n    }\n    // add padding\n    const dataWithPadding = {\n        data,\n        padding: '',\n    };\n    // calculate padding\n    const dataLength = Buffer.byteLength(JSON.stringify(dataWithPadding), 'utf-8');\n    const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n    let padLength = 0;\n    // Only pad if necessary\n    if (modVal > 0) {\n        padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n    }\n    dataWithPadding.padding = '0'.repeat(padLength);\n    const paddedMessage = JSON.stringify(dataWithPadding);\n    return encrypt({ publicKey, data: paddedMessage, version });\n}\nexports.encryptSafely = encryptSafely;\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nfunction decrypt({ encryptedData, privateKey, }) {\n    if ((0, utils_1.isNullish)(encryptedData)) {\n        throw new Error('Missing encryptedData parameter');\n    }\n    else if ((0, utils_1.isNullish)(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    switch (encryptedData.version) {\n        case 'x25519-xsalsa20-poly1305': {\n            const receiverPrivateKeyUint8Array = Buffer.from(privateKey, 'hex');\n            const receiverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(receiverPrivateKeyUint8Array).secretKey;\n            // assemble decryption parameters\n            const nonce = base_1.base64.decode(encryptedData.nonce);\n            const ciphertext = base_1.base64.decode(encryptedData.ciphertext);\n            const ephemPublicKey = base_1.base64.decode(encryptedData.ephemPublicKey);\n            // decrypt\n            const decryptedMessage = nacl.box.open(ciphertext, nonce, ephemPublicKey, receiverEncryptionPrivateKey);\n            // return decrypted msg data\n            try {\n                if (!decryptedMessage) {\n                    throw new Error();\n                }\n                const output = base_1.utf8.encode(decryptedMessage);\n                // TODO: This is probably extraneous but was kept to minimize changes during refactor\n                if (!output) {\n                    throw new Error();\n                }\n                return output;\n            }\n            catch (err) {\n                if (err && typeof err.message === 'string' && err.message.length) {\n                    throw new Error(`Decryption failed: ${err.message}`);\n                }\n                throw new Error(`Decryption failed.`);\n            }\n        }\n        default:\n            throw new Error('Encryption type/version not supported.');\n    }\n}\nexports.decrypt = decrypt;\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nfunction decryptSafely({ encryptedData, privateKey, }) {\n    if ((0, utils_1.isNullish)(encryptedData)) {\n        throw new Error('Missing encryptedData parameter');\n    }\n    else if ((0, utils_1.isNullish)(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n    return dataWithPadding.data;\n}\nexports.decryptSafely = decryptSafely;\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nfunction getEncryptionPublicKey(privateKey) {\n    const privateKeyUint8Array = Buffer.from(privateKey, 'hex');\n    const encryptionPublicKey = nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n    return base_1.base64.encode(encryptionPublicKey);\n}\nexports.getEncryptionPublicKey = getEncryptionPublicKey;\n//# sourceMappingURL=encryption.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = exports.concatSig = void 0;\n__exportStar(require(\"./personal-sign\"), exports);\n__exportStar(require(\"./sign-typed-data\"), exports);\n__exportStar(require(\"./encryption\"), exports);\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"concatSig\", { enumerable: true, get: function () { return utils_1.concatSig; } });\nObject.defineProperty(exports, \"normalize\", { enumerable: true, get: function () { return utils_1.normalize; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractPublicKey = exports.recoverPersonalSignature = exports.personalSign = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"./utils\");\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nfunction personalSign({ privateKey, data, }) {\n    if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    const message = (0, utils_1.legacyToBuffer)(data);\n    const msgHash = (0, util_1.hashPersonalMessage)(message);\n    const sig = (0, util_1.ecsign)(msgHash, privateKey);\n    const serialized = (0, utils_1.concatSig)((0, util_1.toBuffer)(sig.v), sig.r, sig.s);\n    return serialized;\n}\nexports.personalSign = personalSign;\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nfunction recoverPersonalSignature({ data, signature, }) {\n    if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const publicKey = getPublicKeyFor(data, signature);\n    const sender = (0, util_1.publicToAddress)(publicKey);\n    const senderHex = (0, util_1.bufferToHex)(sender);\n    return senderHex;\n}\nexports.recoverPersonalSignature = recoverPersonalSignature;\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nfunction extractPublicKey({ data, signature, }) {\n    if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const publicKey = getPublicKeyFor(data, signature);\n    return `0x${publicKey.toString('hex')}`;\n}\nexports.extractPublicKey = extractPublicKey;\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message, signature) {\n    const messageHash = (0, util_1.hashPersonalMessage)((0, utils_1.legacyToBuffer)(message));\n    return (0, utils_1.recoverPublicKey)(messageHash, signature);\n}\n//# sourceMappingURL=personal-sign.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoverTypedSignature = exports.signTypedData = exports.typedSignatureHash = exports.TypedDataUtils = exports.TYPED_MESSAGE_SCHEMA = exports.SignTypedDataVersion = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst abi_utils_1 = require(\"@metamask/abi-utils\");\nconst parsers_1 = require(\"@metamask/abi-utils/dist/parsers\");\nconst utils_1 = require(\"@metamask/abi-utils/dist/utils\");\nconst utils_2 = require(\"@metamask/utils\");\nconst keccak_1 = require(\"ethereum-cryptography/keccak\");\nconst utils_3 = require(\"./utils\");\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of\n * EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nvar SignTypedDataVersion;\n(function (SignTypedDataVersion) {\n    SignTypedDataVersion[\"V1\"] = \"V1\";\n    SignTypedDataVersion[\"V3\"] = \"V3\";\n    SignTypedDataVersion[\"V4\"] = \"V4\";\n})(SignTypedDataVersion = exports.SignTypedDataVersion || (exports.SignTypedDataVersion = {}));\nexports.TYPED_MESSAGE_SCHEMA = {\n    type: 'object',\n    properties: {\n        types: {\n            type: 'object',\n            additionalProperties: {\n                type: 'array',\n                items: {\n                    type: 'object',\n                    properties: {\n                        name: { type: 'string' },\n                        type: { type: 'string' },\n                    },\n                    required: ['name', 'type'],\n                },\n            },\n        },\n        primaryType: { type: 'string' },\n        domain: { type: 'object' },\n        message: { type: 'object' },\n    },\n    required: ['types', 'primaryType', 'domain', 'message'],\n};\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(version, allowedVersions) {\n    if (!Object.keys(SignTypedDataVersion).includes(version)) {\n        throw new Error(`Invalid version: '${version}'`);\n    }\n    else if (allowedVersions && !allowedVersions.includes(version)) {\n        throw new Error(`SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(', ')}`);\n    }\n}\n/**\n * Parse a string, number, or bigint value into a `Uint8Array`.\n *\n * @param type - The type of the value.\n * @param value - The value to parse.\n * @returns The parsed value.\n */\nfunction parseNumber(type, value) {\n    (0, utils_2.assert)(value !== null, `Unable to encode value: Invalid number. Expected a valid number value, but received \"${value}\".`);\n    const bigIntValue = BigInt(value);\n    const length = (0, parsers_1.getLength)(type);\n    const maxValue = BigInt(2) ** BigInt(length) - BigInt(1);\n    // Note that this is not accurate, since the actual maximum value for unsigned\n    // integers is `2 ^ (length - 1) - 1`, but this is required for backwards\n    // compatibility with the old implementation.\n    (0, utils_2.assert)(bigIntValue >= -maxValue && bigIntValue <= maxValue, `Unable to encode value: Number \"${value}\" is out of range for type \"${type}\".`);\n    return bigIntValue;\n}\n/**\n * Parse an address string to a `Uint8Array`. The behaviour of this is quite\n * strange, in that it does not parse the address as hexadecimal string, nor as\n * UTF-8. It does some weird stuff with the string and char codes, and then\n * returns the result as a `Uint8Array`.\n *\n * This is based on the old `ethereumjs-abi` implementation, which essentially\n * calls `new BN(address, 10)` on the address string, the equivalent of calling\n * `parseInt(address, 10)` in JavaScript. This is not a valid way to parse an\n * address and would result in `NaN` in plain JavaScript, but it is the\n * behaviour of the old implementation, and so we must preserve it for backwards\n * compatibility.\n *\n * @param address - The address to parse.\n * @returns The parsed address.\n */\nfunction reallyStrangeAddressToBytes(address) {\n    let addressValue = BigInt(0);\n    for (let i = 0; i < address.length; i++) {\n        const character = BigInt(address.charCodeAt(i) - 48);\n        addressValue *= BigInt(10);\n        // 'a'\n        if (character >= 49) {\n            addressValue += character - BigInt(49) + BigInt(0xa);\n            // 'A'\n        }\n        else if (character >= 17) {\n            addressValue += character - BigInt(17) + BigInt(0xa);\n            // '0' - '9'\n        }\n        else {\n            addressValue += character;\n        }\n    }\n    return (0, utils_1.padStart)((0, utils_2.bigIntToBytes)(addressValue), 20);\n}\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(types, name, type, \n// TODO: constrain type on `value`\nvalue, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    if (types[type] !== undefined) {\n        return [\n            'bytes32',\n            // TODO: return Buffer, remove string from return type\n            version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n                ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n                : (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(encodeData(type, value, types, version))),\n        ];\n    }\n    // `function` is supported in `@metamask/abi-utils`, but not allowed by\n    // EIP-712, so we throw an error here.\n    if (type === 'function') {\n        throw new Error('Unsupported or invalid type: \"function\"');\n    }\n    if (value === undefined) {\n        throw new Error(`missing value for field ${name} of type ${type}`);\n    }\n    if (type === 'address') {\n        if (typeof value === 'number') {\n            return ['address', (0, utils_1.padStart)((0, utils_2.numberToBytes)(value), 20)];\n        }\n        else if ((0, utils_2.isStrictHexString)(value)) {\n            return ['address', (0, utils_2.add0x)(value)];\n        }\n        else if (typeof value === 'string') {\n            return ['address', reallyStrangeAddressToBytes(value).subarray(0, 20)];\n        }\n    }\n    if (type === 'bool') {\n        return ['bool', Boolean(value)];\n    }\n    if (type === 'bytes') {\n        if (typeof value === 'number') {\n            value = (0, utils_2.numberToBytes)(value);\n        }\n        else if ((0, utils_2.isStrictHexString)(value) || value === '0x') {\n            value = (0, utils_2.hexToBytes)(value);\n        }\n        else if (typeof value === 'string') {\n            value = (0, utils_2.stringToBytes)(value);\n        }\n        return ['bytes32', (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(value))];\n    }\n    if (type.startsWith('bytes') && type !== 'bytes' && !type.includes('[')) {\n        if (typeof value === 'number') {\n            if (value < 0) {\n                return ['bytes32', new Uint8Array(32)];\n            }\n            return ['bytes32', (0, utils_2.bigIntToBytes)(BigInt(value))];\n        }\n        else if ((0, utils_2.isStrictHexString)(value)) {\n            return ['bytes32', (0, utils_2.hexToBytes)(value)];\n        }\n        return ['bytes32', value];\n    }\n    if (type.startsWith('int') && !type.includes('[')) {\n        const bigIntValue = parseNumber(type, value);\n        if (bigIntValue >= BigInt(0)) {\n            return ['uint256', bigIntValue];\n        }\n        return ['int256', bigIntValue];\n    }\n    if (type === 'string') {\n        if (typeof value === 'number') {\n            value = (0, utils_2.numberToBytes)(value);\n        }\n        else {\n            value = (0, utils_2.stringToBytes)(value !== null && value !== void 0 ? value : '');\n        }\n        return ['bytes32', (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(value))];\n    }\n    if (type.endsWith(']')) {\n        if (version === SignTypedDataVersion.V3) {\n            throw new Error('Arrays are unimplemented in encodeData; use V4 extension');\n        }\n        const parsedType = type.slice(0, type.lastIndexOf('['));\n        const typeValuePairs = value.map((item) => encodeField(types, name, parsedType, item, version));\n        return [\n            'bytes32',\n            (0, util_1.arrToBufArr)((0, keccak_1.keccak256)((0, abi_utils_1.encode)(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v)))),\n        ];\n    }\n    return [type, value];\n}\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(primaryType, data, types, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const encodedTypes = ['bytes32'];\n    const encodedValues = [\n        hashType(primaryType, types),\n    ];\n    for (const field of types[primaryType]) {\n        if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n            continue;\n        }\n        const [type, value] = encodeField(types, field.name, field.type, data[field.name], version);\n        encodedTypes.push(type);\n        encodedValues.push(value);\n    }\n    return (0, util_1.arrToBufArr)((0, abi_utils_1.encode)(encodedTypes, encodedValues));\n}\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(primaryType, types) {\n    let result = '';\n    const unsortedDeps = findTypeDependencies(primaryType, types);\n    unsortedDeps.delete(primaryType);\n    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n    for (const type of deps) {\n        const children = types[type];\n        if (!children) {\n            throw new Error(`No type definition specified: ${type}`);\n        }\n        result += `${type}(${types[type]\n            .map(({ name, type: t }) => `${t} ${name}`)\n            .join(',')})`;\n    }\n    return result;\n}\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(primaryType, types, results = new Set()) {\n    if (typeof primaryType !== 'string') {\n        throw new Error(`Invalid findTypeDependencies input ${JSON.stringify(primaryType)}`);\n    }\n    const match = primaryType.match(/^\\w*/u);\n    [primaryType] = match;\n    if (results.has(primaryType) || types[primaryType] === undefined) {\n        return results;\n    }\n    results.add(primaryType);\n    for (const field of types[primaryType]) {\n        findTypeDependencies(field.type, types, results);\n    }\n    return results;\n}\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(primaryType, data, types, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const encoded = encodeData(primaryType, data, types, version);\n    const hashed = (0, keccak_1.keccak256)(encoded);\n    const buf = (0, util_1.arrToBufArr)(hashed);\n    return buf;\n}\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(primaryType, types) {\n    const encodedHashType = (0, utils_2.stringToBytes)(encodeType(primaryType, types));\n    return (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(encodedHashType));\n}\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData(data) {\n    const sanitizedData = {};\n    for (const key in exports.TYPED_MESSAGE_SCHEMA.properties) {\n        if (data[key]) {\n            sanitizedData[key] = data[key];\n        }\n    }\n    if ('types' in sanitizedData) {\n        // TODO: Fix types\n        sanitizedData.types = Object.assign({ EIP712Domain: [] }, sanitizedData.types);\n    }\n    return sanitizedData;\n}\n/**\n * Create a EIP-712 Domain Hash.\n * This hash is used at the top of the EIP-712 encoding.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the domain object.\n */\nfunction eip712DomainHash(typedData, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const sanitizedData = sanitizeData(typedData);\n    const { domain } = sanitizedData;\n    const domainType = { EIP712Domain: sanitizedData.types.EIP712Domain };\n    return hashStruct('EIP712Domain', domain, domainType, version);\n}\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash(typedData, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const sanitizedData = sanitizeData(typedData);\n    const parts = [(0, utils_2.hexToBytes)('1901')];\n    parts.push(eip712DomainHash(typedData, version));\n    if (sanitizedData.primaryType !== 'EIP712Domain') {\n        parts.push(hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType, sanitizedData.message, sanitizedData.types, version));\n    }\n    return (0, util_1.arrToBufArr)((0, keccak_1.keccak256)((0, utils_2.concatBytes)(parts)));\n}\n/**\n * A collection of utility functions used for signing typed data.\n */\nexports.TypedDataUtils = {\n    encodeData,\n    encodeType,\n    findTypeDependencies,\n    hashStruct,\n    hashType,\n    sanitizeData,\n    eip712Hash,\n    eip712DomainHash,\n};\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nfunction typedSignatureHash(typedData) {\n    const hashBuffer = _typedSignatureHash(typedData);\n    return (0, utils_2.bytesToHex)(hashBuffer);\n}\nexports.typedSignatureHash = typedSignatureHash;\n/**\n * Normalize a value, so that `@metamask/abi-utils` can handle it. This\n * matches the behaviour of the `ethereumjs-abi` library.\n *\n * @param type - The type of the value to normalize.\n * @param value - The value to normalize.\n * @returns The normalized value.\n */\nfunction normalizeValue(type, value) {\n    if ((0, parsers_1.isArrayType)(type) && Array.isArray(value)) {\n        const [innerType] = (0, parsers_1.getArrayType)(type);\n        return value.map((item) => normalizeValue(innerType, item));\n    }\n    if (type === 'address') {\n        if ((0, utils_2.isStrictHexString)(value)) {\n            return (0, utils_1.padStart)((0, utils_2.hexToBytes)(value).subarray(0, 20), 20);\n        }\n        if (value instanceof Uint8Array) {\n            return (0, utils_1.padStart)(value.subarray(0, 20), 20);\n        }\n    }\n    if (type === 'bool') {\n        return Boolean(value);\n    }\n    if (type.startsWith('bytes') && type !== 'bytes') {\n        const length = (0, parsers_1.getByteLength)(type);\n        if (typeof value === 'number') {\n            if (value < 0) {\n                // `solidityPack(['bytesN'], [-1])` returns `0x00..00`.\n                return new Uint8Array();\n            }\n            return (0, utils_2.numberToBytes)(value).subarray(0, length);\n        }\n        if ((0, utils_2.isStrictHexString)(value)) {\n            return (0, utils_2.hexToBytes)(value).subarray(0, length);\n        }\n        if (value instanceof Uint8Array) {\n            return value.subarray(0, length);\n        }\n    }\n    if (type.startsWith('uint')) {\n        if (typeof value === 'number') {\n            return Math.abs(value);\n        }\n    }\n    if (type.startsWith('int')) {\n        if (typeof value === 'number') {\n            const length = (0, parsers_1.getLength)(type);\n            return BigInt.asIntN(length, BigInt(value));\n        }\n    }\n    return value;\n}\n/**\n * For some reason `ethereumjs-abi` treats `address` and `address[]` differently\n * so we need to normalize `address[]` differently.\n *\n * @param values - The values to normalize.\n * @returns The normalized values.\n */\nfunction normalizeAddresses(values) {\n    return values.map((value) => {\n        if (typeof value === 'number') {\n            return (0, utils_1.padStart)((0, utils_2.numberToBytes)(value), 32);\n        }\n        if ((0, utils_2.isStrictHexString)(value)) {\n            return (0, utils_1.padStart)((0, utils_2.hexToBytes)(value).subarray(0, 32), 32);\n        }\n        if (value instanceof Uint8Array) {\n            return (0, utils_1.padStart)(value.subarray(0, 32), 32);\n        }\n        return value;\n    });\n}\n/**\n * For some reason `ethereumjs-abi` treats `intN` and `intN[]` differently\n * so we need to normalize `intN[]` differently.\n *\n * @param type - The type of the value to normalize.\n * @param values - The values to normalize.\n * @returns The normalized values.\n */\nfunction normalizeIntegers(type, values) {\n    return values.map((value) => {\n        if (typeof value === 'string' ||\n            typeof value === 'number' ||\n            typeof value === 'bigint') {\n            const bigIntValue = parseNumber(type, value);\n            if (bigIntValue >= BigInt(0)) {\n                return (0, utils_1.padStart)((0, utils_2.bigIntToBytes)(bigIntValue), 32);\n            }\n            const length = (0, parsers_1.getLength)(type);\n            const asIntN = BigInt.asIntN(length, bigIntValue);\n            return (0, utils_2.signedBigIntToBytes)(asIntN, 32);\n        }\n        return value;\n    });\n}\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData) {\n    const error = new Error('Expect argument to be non-empty array');\n    if (typeof typedData !== 'object' ||\n        !('length' in typedData) ||\n        !typedData.length) {\n        throw error;\n    }\n    const normalizedData = typedData.map(({ name, type, value }) => {\n        // Handle an edge case with `address[]` types.\n        if (type === 'address[]') {\n            return {\n                name,\n                type: 'bytes32[]',\n                value: normalizeAddresses(value),\n            };\n        }\n        // Handle an edge case with `intN[]` types.\n        if (type.startsWith('int') && (0, parsers_1.isArrayType)(type)) {\n            const [innerType, length] = (0, parsers_1.getArrayType)(type);\n            return {\n                name,\n                type: `bytes32[${length !== null && length !== void 0 ? length : ''}]`,\n                value: normalizeIntegers(innerType, value),\n            };\n        }\n        return {\n            name,\n            type,\n            value: normalizeValue(type, value),\n        };\n    });\n    const data = normalizedData.map((e) => {\n        if (e.type !== 'bytes') {\n            return e.value;\n        }\n        return (0, utils_3.legacyToBuffer)(e.value);\n    });\n    const types = normalizedData.map((e) => {\n        if (e.type === 'function') {\n            throw new Error('Unsupported or invalid type: \"function\"');\n        }\n        return e.type;\n    });\n    const schema = typedData.map((e) => {\n        if (!e.name) {\n            throw error;\n        }\n        return `${e.type} ${e.name}`;\n    });\n    return (0, util_1.arrToBufArr)((0, keccak_1.keccak256)((0, abi_utils_1.encodePacked)(['bytes32', 'bytes32'], [\n        (0, keccak_1.keccak256)((0, abi_utils_1.encodePacked)(['string[]'], [schema], true)),\n        (0, keccak_1.keccak256)((0, abi_utils_1.encodePacked)(types, data, true)),\n    ])));\n}\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of\n * EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nfunction signTypedData({ privateKey, data, version, }) {\n    validateVersion(version);\n    if ((0, utils_3.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_3.isNullish)(privateKey)) {\n        throw new Error('Missing private key parameter');\n    }\n    const messageHash = version === SignTypedDataVersion.V1\n        ? _typedSignatureHash(data)\n        : exports.TypedDataUtils.eip712Hash(data, version);\n    const sig = (0, util_1.ecsign)(messageHash, privateKey);\n    return (0, utils_3.concatSig)((0, util_1.arrToBufArr)((0, utils_2.bigIntToBytes)(sig.v)), sig.r, sig.s);\n}\nexports.signTypedData = signTypedData;\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nfunction recoverTypedSignature({ data, signature, version, }) {\n    validateVersion(version);\n    if ((0, utils_3.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_3.isNullish)(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const messageHash = version === SignTypedDataVersion.V1\n        ? _typedSignatureHash(data)\n        : exports.TypedDataUtils.eip712Hash(data, version);\n    const publicKey = (0, utils_3.recoverPublicKey)(messageHash, signature);\n    const sender = (0, util_1.publicToAddress)(publicKey);\n    return (0, utils_2.bytesToHex)(sender);\n}\nexports.recoverTypedSignature = recoverTypedSignature;\n//# sourceMappingURL=sign-typed-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = exports.recoverPublicKey = exports.concatSig = exports.legacyToBuffer = exports.isNullish = exports.padWithZeroes = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"@metamask/utils\");\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nfunction padWithZeroes(hexString, targetLength) {\n    if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n        throw new Error(`Expected an unprefixed hex string. Received: ${hexString}`);\n    }\n    if (targetLength < 0) {\n        throw new Error(`Expected a non-negative integer target length. Received: ${targetLength}`);\n    }\n    return String.prototype.padStart.call(hexString, targetLength, '0');\n}\nexports.padWithZeroes = padWithZeroes;\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nfunction isNullish(value) {\n    return value === null || value === undefined;\n}\nexports.isNullish = isNullish;\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nfunction legacyToBuffer(value) {\n    return typeof value === 'string' && !(0, util_1.isHexString)(value)\n        ? Buffer.from(value)\n        : (0, util_1.toBuffer)(value);\n}\nexports.legacyToBuffer = legacyToBuffer;\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nfunction concatSig(v, r, s) {\n    const rSig = (0, util_1.fromSigned)(r);\n    const sSig = (0, util_1.fromSigned)(s);\n    const vSig = (0, util_1.bufferToInt)(v);\n    const rStr = padWithZeroes((0, util_1.toUnsigned)(rSig).toString('hex'), 64);\n    const sStr = padWithZeroes((0, util_1.toUnsigned)(sSig).toString('hex'), 64);\n    const vStr = (0, utils_1.remove0x)((0, utils_1.numberToHex)(vSig));\n    return (0, utils_1.add0x)(rStr.concat(sStr, vStr));\n}\nexports.concatSig = concatSig;\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nfunction recoverPublicKey(messageHash, signature) {\n    const sigParams = (0, util_1.fromRpcSig)(signature);\n    return (0, util_1.ecrecover)(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\nexports.recoverPublicKey = recoverPublicKey;\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nfunction normalize(input) {\n    if (isNullish(input)) {\n        return undefined;\n    }\n    if (typeof input === 'number') {\n        if (input < 0) {\n            return '0x';\n        }\n        const buffer = (0, utils_1.numberToBytes)(input);\n        input = (0, utils_1.bytesToHex)(buffer);\n    }\n    if (typeof input !== 'string') {\n        let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n        msg += ` received ${typeof input}: ${input}`;\n        throw new Error(msg);\n    }\n    return (0, utils_1.add0x)(input.toLowerCase());\n}\nexports.normalize = normalize;\n//# sourceMappingURL=utils.js.map","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.createBase58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64urlnopad = exports.base64url = exports.base64nopad = exports.base64 = exports.base32crockford = exports.base32hexnopad = exports.base32hex = exports.base32nopad = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nfunction isArrayOf(isString, arr) {\n    if (!Array.isArray(arr))\n        return false;\n    if (arr.length === 0)\n        return true;\n    if (isString) {\n        return arr.every((item) => typeof item === 'string');\n    }\n    else {\n        return arr.every((item) => Number.isSafeInteger(item));\n    }\n}\n// no abytes: seems to have 10% slowdown. Why?!\nfunction afn(input) {\n    if (typeof input !== 'function')\n        throw new Error('function expected');\n    return true;\n}\nfunction astr(label, input) {\n    if (typeof input !== 'string')\n        throw new Error(`${label}: string expected`);\n    return true;\n}\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`invalid integer: ${n}`);\n}\nexports.assertNumber = anumber;\nfunction aArr(input) {\n    if (!Array.isArray(input))\n        throw new Error('array expected');\n}\nfunction astrArr(label, input) {\n    if (!isArrayOf(true, input))\n        throw new Error(`${label}: array of strings expected`);\n}\nfunction anumArr(label, input) {\n    if (!isArrayOf(false, input))\n        throw new Error(`${label}: array of numbers expected`);\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back.\n * Could also be array of strings.\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(letters) {\n    // mapping 1 to \"b\"\n    const lettersA = typeof letters === 'string' ? letters.split('') : letters;\n    const len = lettersA.length;\n    astrArr('alphabet', lettersA);\n    // mapping \"b\" to 1\n    const indexes = new Map(lettersA.map((l, i) => [l, i]));\n    return {\n        encode: (digits) => {\n            aArr(digits);\n            return digits.map((i) => {\n                if (!Number.isSafeInteger(i) || i < 0 || i >= len)\n                    throw new Error(`alphabet.encode: digit index outside alphabet \"${i}\". Allowed: ${letters}`);\n                return lettersA[i];\n            });\n        },\n        decode: (input) => {\n            aArr(input);\n            return input.map((letter) => {\n                astr('alphabet.decode', letter);\n                const i = indexes.get(letter);\n                if (i === undefined)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${letters}`);\n                return i;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    astr('join', separator);\n    return {\n        encode: (from) => {\n            astrArr('join.decode', from);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            astr('join.decode', to);\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    anumber(bits);\n    astr('padding', chr);\n    return {\n        encode(data) {\n            astrArr('padding.encode', data);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            astrArr('padding.decode', input);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('padding: invalid, string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                const last = end - 1;\n                const byte = last * bits;\n                if (byte % 8 === 0)\n                    throw new Error('padding: invalid, string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    afn(fn);\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);\n    aArr(data);\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data, (d) => {\n        anumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`invalid integer: ${d}`);\n        return d;\n    });\n    const dlen = digits.length;\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < dlen; i++) {\n            const digit = digits[i];\n            const fromCarry = from * carry;\n            const digitBase = fromCarry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                fromCarry / from !== carry ||\n                digitBase - digit !== fromCarry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            const div = digitBase / to;\n            carry = digitBase % to;\n            const rounded = Math.floor(div);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (b === 0 ? a : gcd(b, a % b));\nconst radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\nconst powers = /* @__PURE__ */ (() => {\n    let res = [];\n    for (let i = 0; i < 40; i++)\n        res.push(2 ** i);\n    return res;\n})();\n/**\n * Implemented with numbers, because BigInt is 5x slower\n */\nfunction convertRadix2(data, from, to, padding) {\n    aArr(data);\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const max = powers[from];\n    const mask = powers[to] - 1;\n    const res = [];\n    for (const n of data) {\n        anumber(n);\n        if (n >= max)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        const pow = powers[pos];\n        if (pow === undefined)\n            throw new Error('invalid carry');\n        carry &= pow - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry > 0)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    anumber(num);\n    const _256 = 2 ** 8;\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), _256, num);\n        },\n        decode: (digits) => {\n            anumArr('radix.decode', digits);\n            return Uint8Array.from(convertRadix(digits, num, _256));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    anumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            anumArr('radix2.decode', digits);\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    afn(fn);\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    anumber(len);\n    afn(fn);\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const sum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(sum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const oldChecksum = data.slice(-len);\n            const newChecksum = fn(payload).slice(0, len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nexports.utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\n/**\n * base16 encoding.\n */\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\n/**\n * base64 with padding. For no padding, use `base64nopad`.\n * @example\n * const b = base64.decode('A951'); // Uint8Array.from([ 3, 222, 117 ])\n * base64.encode(b); // 'A951'\n */\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\n/**\n * base64 without padding.\n */\nexports.base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nexports.base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc) => chain(radix(58), alphabet(abc), join(''));\n/**\n * Base58: base64 without characters +, /, 0, O, I, l.\n * Quadratic (O(n^2)) - so, can't be used on large inputs.\n */\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n/**\n * XMR version of base58.\n * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n * Block encoding significantly reduces quadratic complexity of base58.\n */\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.createBase58check = createBase58check;\n/**\n * Use `createBase58check` instead.\n * @deprecated\n */\nexports.base58check = exports.createBase58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        astr('bech32.encode prefix', prefix);\n        if (isBytes(words))\n            words = Array.from(words);\n        anumArr('bech32.encode', words);\n        const plen = prefix.length;\n        if (plen === 0)\n            throw new TypeError(`Invalid prefix length ${plen}`);\n        const actualLength = plen + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        astr('bech32.decode input', str);\n        const slen = str.length;\n        if (slen < 8 || (limit !== false && slen > limit))\n            throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        const sepIndex = lowered.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = lowered.slice(0, sepIndex);\n        const data = lowered.slice(sepIndex + 1);\n        if (data.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(data).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!data.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    function encodeFromBytes(prefix, bytes) {\n        return encode(prefix, toWords(bytes));\n    }\n    return {\n        encode,\n        decode,\n        encodeFromBytes,\n        decodeToBytes,\n        decodeUnsafe,\n        fromWords,\n        fromWordsUnsafe,\n        toWords,\n    };\n}\n/**\n * Low-level bech32 operations. Operates on words.\n */\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\n/**\n * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.\n * @example\n * const b = utf8.decode(\"hey\"); // => new Uint8Array([ 104, 101, 121 ])\n * const str = utf8.encode(b); // \"hey\"\n */\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\n/**\n * hex string decoder.\n * @example\n * const b = hex.decode(\"0102ff\"); // => new Uint8Array([ 1, 2, 255 ])\n * const str = hex.encode(b); // \"0102ff\"\n */\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2 !== 0)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\n// prettier-ignore\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString; // as in python, but for bytes only\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.anumber = anumber;\nexports.number = anumber;\nexports.abytes = abytes;\nexports.bytes = abytes;\nexports.ahash = ahash;\nexports.aexists = aexists;\nexports.aoutput = aoutput;\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n// copied from utils\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nconst assert = {\n    number: anumber,\n    bytes: abytes,\n    hash: ahash,\n    exists: aexists,\n    output: aoutput,\n};\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = void 0;\nexports.fromBig = fromBig;\nexports.split = split;\nexports.add = add;\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// BigUint64Array is too slow as per 2024, so we implement it using Uint32Array.\n// TODO: re-check https://issues.chromium.org/issues/42212588\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = void 0;\nexports.keccakP = keccakP;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0, _u64_js_1.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0, _assert_js_1.anumber)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0, _assert_js_1.aexists)(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0, _assert_js_1.aexists)(this, false);\n        (0, _assert_js_1.abytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0, _assert_js_1.anumber)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0, _assert_js_1.aoutput)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Hash = exports.nextTick = exports.byteSwapIfBE = exports.byteSwap = exports.isLE = exports.rotl = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\nexports.isBytes = isBytes;\nexports.byteSwap32 = byteSwap32;\nexports.bytesToHex = bytesToHex;\nexports.hexToBytes = hexToBytes;\nexports.asyncLoop = asyncLoop;\nexports.utf8ToBytes = utf8ToBytes;\nexports.toBytes = toBytes;\nexports.concatBytes = concatBytes;\nexports.checkOpts = checkOpts;\nexports.wrapConstructor = wrapConstructor;\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\nexports.randomBytes = randomBytes;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst _assert_js_1 = require(\"./_assert.js\");\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexports.rotl = rotl;\nexports.isLE = (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nconst byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\nexports.byteSwap = byteSwap;\n// Conditionally byte swap if on a big-endian platform\nexports.byteSwapIfBE = exports.isLE ? (n) => n : (n) => (0, exports.byteSwap)(n);\n// In place byte swap for Uint32Array\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = (0, exports.byteSwap)(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0, _assert_js_1.abytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    (0, _assert_js_1.abytes)(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0, _assert_js_1.abytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto_1.crypto && typeof crypto_1.crypto.randomBytes === 'function') {\n        return crypto_1.crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.createBase58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64urlnopad = exports.base64url = exports.base64nopad = exports.base64 = exports.base32crockford = exports.base32hexnopad = exports.base32hex = exports.base32nopad = exports.base32 = exports.base16 = exports.utils = void 0;\nexports.assertNumber = assertNumber;\n// Utilities\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            const rounded = Math.floor(digitBase / to);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = /* @__NO_SIDE_EFFECTS__ */ (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = /*@__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\n/**\n * Implemented with numbers, because BigInt is 5x slower\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nexports.utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nexports.base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// xmr ver is done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n// Block encoding significantly reduces quadratic complexity of base58.\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.createBase58check = createBase58check;\n// legacy export, bad name\nexports.base58check = exports.createBase58check;\nconst BECH_ALPHABET = /* @__PURE__ */ chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (words instanceof Uint8Array)\n            words = Array.from(words);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        if (prefix.length === 0)\n            throw new TypeError(`Invalid prefix length ${prefix.length}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        const sepIndex = lowered.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = lowered.slice(0, sepIndex);\n        const data = lowered.slice(sepIndex + 1);\n        if (data.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(data).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!data.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    function encodeFromBytes(prefix, bytes) {\n        return encode(prefix, toWords(bytes));\n    }\n    return {\n        encode,\n        decode,\n        encodeFromBytes,\n        decodeToBytes,\n        decodeUnsafe,\n        fromWords,\n        fromWordsUnsafe,\n        toWords,\n    };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\n// prettier-ignore\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString; // as in python, but for bytes only\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n//# sourceMappingURL=index.js.map","'use strict';\n\nvar objectAssign = require('object.assign/polyfill')();\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\n/* eslint camelcase: \"off\" */\n\nvar assert = require('assert');\n\nvar Zstream = require('pako/lib/zlib/zstream');\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n}\n\n// zlib modes\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\n\nvar GZIP_HEADER_ID1 = 0x1f;\nvar GZIP_HEADER_ID2 = 0x8b;\n\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\nfunction Zlib(mode) {\n  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {\n    throw new TypeError('Bad argument');\n  }\n\n  this.dictionary = null;\n  this.err = 0;\n  this.flush = 0;\n  this.init_done = false;\n  this.level = 0;\n  this.memLevel = 0;\n  this.mode = mode;\n  this.strategy = 0;\n  this.windowBits = 0;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.gzip_id_bytes_read = 0;\n}\n\nZlib.prototype.close = function () {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n\n  this.pending_close = false;\n\n  assert(this.init_done, 'close before init');\n  assert(this.mode <= exports.UNZIP);\n\n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n\n  this.mode = exports.NONE;\n\n  this.dictionary = null;\n};\n\nZlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {\n  assert.equal(arguments.length, 8);\n\n  assert(this.init_done, 'write before init');\n  assert(this.mode !== exports.NONE, 'already finalized');\n  assert.equal(false, this.write_in_progress, 'write already in progress');\n  assert.equal(false, this.pending_close, 'close is pending');\n\n  this.write_in_progress = true;\n\n  assert.equal(false, flush === undefined, 'must provide flush value');\n\n  this.write_in_progress = true;\n\n  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {\n    throw new Error('Invalid flush value');\n  }\n\n  if (input == null) {\n    input = Buffer.alloc(0);\n    in_len = 0;\n    in_off = 0;\n  }\n\n  this.strm.avail_in = in_len;\n  this.strm.input = input;\n  this.strm.next_in = in_off;\n  this.strm.avail_out = out_len;\n  this.strm.output = out;\n  this.strm.next_out = out_off;\n  this.flush = flush;\n\n  if (!async) {\n    // sync version\n    this._process();\n\n    if (this._checkError()) {\n      return this._afterSync();\n    }\n    return;\n  }\n\n  // async version\n  var self = this;\n  process.nextTick(function () {\n    self._process();\n    self._after();\n  });\n\n  return this;\n};\n\nZlib.prototype._afterSync = function () {\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  return [avail_in, avail_out];\n};\n\nZlib.prototype._process = function () {\n  var next_expected_header_byte = null;\n\n  // If the avail_out is left at 0, then it means that it ran out\n  // of room.  If there was avail_out left over, then it means\n  // that all of the input was consumed.\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflate(this.strm, this.flush);\n      break;\n    case exports.UNZIP:\n      if (this.strm.avail_in > 0) {\n        next_expected_header_byte = this.strm.next_in;\n      }\n\n      switch (this.gzip_id_bytes_read) {\n        case 0:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {\n            this.gzip_id_bytes_read = 1;\n            next_expected_header_byte++;\n\n            if (this.strm.avail_in === 1) {\n              // The only available byte was already read.\n              break;\n            }\n          } else {\n            this.mode = exports.INFLATE;\n            break;\n          }\n\n        // fallthrough\n        case 1:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {\n            this.gzip_id_bytes_read = 2;\n            this.mode = exports.GUNZIP;\n          } else {\n            // There is no actual difference between INFLATE and INFLATERAW\n            // (after initialization).\n            this.mode = exports.INFLATE;\n          }\n\n          break;\n        default:\n          throw new Error('invalid number of gzip magic number bytes read');\n      }\n\n    // fallthrough\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      this.err = zlib_inflate.inflate(this.strm, this.flush\n\n      // If data was encoded with dictionary\n      );if (this.err === exports.Z_NEED_DICT && this.dictionary) {\n        // Load it\n        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);\n        if (this.err === exports.Z_OK) {\n          // And try to decode again\n          this.err = zlib_inflate.inflate(this.strm, this.flush);\n        } else if (this.err === exports.Z_DATA_ERROR) {\n          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.\n          // Make it possible for After() to tell a bad dictionary from bad\n          // input.\n          this.err = exports.Z_NEED_DICT;\n        }\n      }\n      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {\n        // Bytes remain in input buffer. Perhaps this is another compressed\n        // member in the same archive, or just trailing garbage.\n        // Trailing zero bytes are okay, though, since they are frequently\n        // used for padding.\n\n        this.reset();\n        this.err = zlib_inflate.inflate(this.strm, this.flush);\n      }\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n};\n\nZlib.prototype._checkError = function () {\n  // Acceptable error states depend on the type of zlib stream.\n  switch (this.err) {\n    case exports.Z_OK:\n    case exports.Z_BUF_ERROR:\n      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {\n        this._error('unexpected end of file');\n        return false;\n      }\n      break;\n    case exports.Z_STREAM_END:\n      // normal statuses, not fatal\n      break;\n    case exports.Z_NEED_DICT:\n      if (this.dictionary == null) {\n        this._error('Missing dictionary');\n      } else {\n        this._error('Bad dictionary');\n      }\n      return false;\n    default:\n      // something else.\n      this._error('Zlib error');\n      return false;\n  }\n\n  return true;\n};\n\nZlib.prototype._after = function () {\n  if (!this._checkError()) {\n    return;\n  }\n\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  // call the write() cb\n  this.callback(avail_in, avail_out);\n\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype._error = function (message) {\n  if (this.strm.msg) {\n    message = this.strm.msg;\n  }\n  this.onerror(message, this.err\n\n  // no hope of rescue.\n  );this.write_in_progress = false;\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {\n  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');\n\n  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');\n  assert(level >= -1 && level <= 9, 'invalid compression level');\n\n  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');\n\n  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');\n\n  this._init(level, windowBits, memLevel, strategy, dictionary);\n  this._setDictionary();\n};\n\nZlib.prototype.params = function () {\n  throw new Error('deflateParams Not supported');\n};\n\nZlib.prototype.reset = function () {\n  this._reset();\n  this._setDictionary();\n};\n\nZlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {\n  this.level = level;\n  this.windowBits = windowBits;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n\n  this.flush = exports.Z_NO_FLUSH;\n\n  this.err = exports.Z_OK;\n\n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {\n    this.windowBits += 16;\n  }\n\n  if (this.mode === exports.UNZIP) {\n    this.windowBits += 32;\n  }\n\n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {\n    this.windowBits = -1 * this.windowBits;\n  }\n\n  this.strm = new Zstream();\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);\n      break;\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Init error');\n  }\n\n  this.dictionary = dictionary;\n\n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype._setDictionary = function () {\n  if (this.dictionary == null) {\n    return;\n  }\n\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to set dictionary');\n  }\n};\n\nZlib.prototype._reset = function () {\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n    case exports.GZIP:\n      this.err = zlib_deflate.deflateReset(this.strm);\n      break;\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n    case exports.GUNZIP:\n      this.err = zlib_inflate.inflateReset(this.strm);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to reset stream');\n  }\n};\n\nexports.Zlib = Zlib;","'use strict';\n\nvar Buffer = require('buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar binding = require('./binding');\nvar util = require('util');\nvar assert = require('assert').ok;\nvar kMaxLength = require('buffer').kMaxLength;\nvar kRangeErrorMessage = 'Cannot create final Buffer. It would be larger ' + 'than 0x' + kMaxLength.toString(16) + ' bytes';\n\n// zlib doesn't provide these, so kludge them in following the same\n// const naming scheme zlib uses.\nbinding.Z_MIN_WINDOWBITS = 8;\nbinding.Z_MAX_WINDOWBITS = 15;\nbinding.Z_DEFAULT_WINDOWBITS = 15;\n\n// fewer than 64 bytes per chunk is stupid.\n// technically it could work with as few as 8, but even 64 bytes\n// is absurdly low.  Usually a MB or more is best.\nbinding.Z_MIN_CHUNK = 64;\nbinding.Z_MAX_CHUNK = Infinity;\nbinding.Z_DEFAULT_CHUNK = 16 * 1024;\n\nbinding.Z_MIN_MEMLEVEL = 1;\nbinding.Z_MAX_MEMLEVEL = 9;\nbinding.Z_DEFAULT_MEMLEVEL = 8;\n\nbinding.Z_MIN_LEVEL = -1;\nbinding.Z_MAX_LEVEL = 9;\nbinding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;\n\n// expose all the zlib constants\nvar bkeys = Object.keys(binding);\nfor (var bk = 0; bk < bkeys.length; bk++) {\n  var bkey = bkeys[bk];\n  if (bkey.match(/^Z/)) {\n    Object.defineProperty(exports, bkey, {\n      enumerable: true, value: binding[bkey], writable: false\n    });\n  }\n}\n\n// translation table for return codes.\nvar codes = {\n  Z_OK: binding.Z_OK,\n  Z_STREAM_END: binding.Z_STREAM_END,\n  Z_NEED_DICT: binding.Z_NEED_DICT,\n  Z_ERRNO: binding.Z_ERRNO,\n  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,\n  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n  Z_MEM_ERROR: binding.Z_MEM_ERROR,\n  Z_BUF_ERROR: binding.Z_BUF_ERROR,\n  Z_VERSION_ERROR: binding.Z_VERSION_ERROR\n};\n\nvar ckeys = Object.keys(codes);\nfor (var ck = 0; ck < ckeys.length; ck++) {\n  var ckey = ckeys[ck];\n  codes[codes[ckey]] = ckey;\n}\n\nObject.defineProperty(exports, 'codes', {\n  enumerable: true, value: Object.freeze(codes), writable: false\n});\n\nexports.Deflate = Deflate;\nexports.Inflate = Inflate;\nexports.Gzip = Gzip;\nexports.Gunzip = Gunzip;\nexports.DeflateRaw = DeflateRaw;\nexports.InflateRaw = InflateRaw;\nexports.Unzip = Unzip;\n\nexports.createDeflate = function (o) {\n  return new Deflate(o);\n};\n\nexports.createInflate = function (o) {\n  return new Inflate(o);\n};\n\nexports.createDeflateRaw = function (o) {\n  return new DeflateRaw(o);\n};\n\nexports.createInflateRaw = function (o) {\n  return new InflateRaw(o);\n};\n\nexports.createGzip = function (o) {\n  return new Gzip(o);\n};\n\nexports.createGunzip = function (o) {\n  return new Gunzip(o);\n};\n\nexports.createUnzip = function (o) {\n  return new Unzip(o);\n};\n\n// Convenience methods.\n// compress/decompress a string or buffer in one step.\nexports.deflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Deflate(opts), buffer, callback);\n};\n\nexports.deflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Deflate(opts), buffer);\n};\n\nexports.gzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gzip(opts), buffer, callback);\n};\n\nexports.gzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gzip(opts), buffer);\n};\n\nexports.deflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new DeflateRaw(opts), buffer, callback);\n};\n\nexports.deflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new DeflateRaw(opts), buffer);\n};\n\nexports.unzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Unzip(opts), buffer, callback);\n};\n\nexports.unzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Unzip(opts), buffer);\n};\n\nexports.inflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Inflate(opts), buffer, callback);\n};\n\nexports.inflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n};\n\nexports.gunzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gunzip(opts), buffer, callback);\n};\n\nexports.gunzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gunzip(opts), buffer);\n};\n\nexports.inflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new InflateRaw(opts), buffer, callback);\n};\n\nexports.inflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new InflateRaw(opts), buffer);\n};\n\nfunction zlibBuffer(engine, buffer, callback) {\n  var buffers = [];\n  var nread = 0;\n\n  engine.on('error', onError);\n  engine.on('end', onEnd);\n\n  engine.end(buffer);\n  flow();\n\n  function flow() {\n    var chunk;\n    while (null !== (chunk = engine.read())) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    }\n    engine.once('readable', flow);\n  }\n\n  function onError(err) {\n    engine.removeListener('end', onEnd);\n    engine.removeListener('readable', flow);\n    callback(err);\n  }\n\n  function onEnd() {\n    var buf;\n    var err = null;\n\n    if (nread >= kMaxLength) {\n      err = new RangeError(kRangeErrorMessage);\n    } else {\n      buf = Buffer.concat(buffers, nread);\n    }\n\n    buffers = [];\n    engine.close();\n    callback(err, buf);\n  }\n}\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === 'string') buffer = Buffer.from(buffer);\n\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('Not a string or buffer');\n\n  var flushFlag = engine._finishFlushFlag;\n\n  return engine._processChunk(buffer, flushFlag);\n}\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate)) return new Deflate(opts);\n  Zlib.call(this, opts, binding.DEFLATE);\n}\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) return new Inflate(opts);\n  Zlib.call(this, opts, binding.INFLATE);\n}\n\n// gzip - bigger header, same deflate compression\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip)) return new Gzip(opts);\n  Zlib.call(this, opts, binding.GZIP);\n}\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip)) return new Gunzip(opts);\n  Zlib.call(this, opts, binding.GUNZIP);\n}\n\n// raw - no header\nfunction DeflateRaw(opts) {\n  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);\n  Zlib.call(this, opts, binding.DEFLATERAW);\n}\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);\n  Zlib.call(this, opts, binding.INFLATERAW);\n}\n\n// auto-detect header.\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip)) return new Unzip(opts);\n  Zlib.call(this, opts, binding.UNZIP);\n}\n\nfunction isValidFlushFlag(flag) {\n  return flag === binding.Z_NO_FLUSH || flag === binding.Z_PARTIAL_FLUSH || flag === binding.Z_SYNC_FLUSH || flag === binding.Z_FULL_FLUSH || flag === binding.Z_FINISH || flag === binding.Z_BLOCK;\n}\n\n// the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\n\nfunction Zlib(opts, mode) {\n  var _this = this;\n\n  this._opts = opts = opts || {};\n  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;\n\n  Transform.call(this, opts);\n\n  if (opts.flush && !isValidFlushFlag(opts.flush)) {\n    throw new Error('Invalid flush flag: ' + opts.flush);\n  }\n  if (opts.finishFlush && !isValidFlushFlag(opts.finishFlush)) {\n    throw new Error('Invalid flush flag: ' + opts.finishFlush);\n  }\n\n  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;\n  this._finishFlushFlag = typeof opts.finishFlush !== 'undefined' ? opts.finishFlush : binding.Z_FINISH;\n\n  if (opts.chunkSize) {\n    if (opts.chunkSize < exports.Z_MIN_CHUNK || opts.chunkSize > exports.Z_MAX_CHUNK) {\n      throw new Error('Invalid chunk size: ' + opts.chunkSize);\n    }\n  }\n\n  if (opts.windowBits) {\n    if (opts.windowBits < exports.Z_MIN_WINDOWBITS || opts.windowBits > exports.Z_MAX_WINDOWBITS) {\n      throw new Error('Invalid windowBits: ' + opts.windowBits);\n    }\n  }\n\n  if (opts.level) {\n    if (opts.level < exports.Z_MIN_LEVEL || opts.level > exports.Z_MAX_LEVEL) {\n      throw new Error('Invalid compression level: ' + opts.level);\n    }\n  }\n\n  if (opts.memLevel) {\n    if (opts.memLevel < exports.Z_MIN_MEMLEVEL || opts.memLevel > exports.Z_MAX_MEMLEVEL) {\n      throw new Error('Invalid memLevel: ' + opts.memLevel);\n    }\n  }\n\n  if (opts.strategy) {\n    if (opts.strategy != exports.Z_FILTERED && opts.strategy != exports.Z_HUFFMAN_ONLY && opts.strategy != exports.Z_RLE && opts.strategy != exports.Z_FIXED && opts.strategy != exports.Z_DEFAULT_STRATEGY) {\n      throw new Error('Invalid strategy: ' + opts.strategy);\n    }\n  }\n\n  if (opts.dictionary) {\n    if (!Buffer.isBuffer(opts.dictionary)) {\n      throw new Error('Invalid dictionary: it should be a Buffer instance');\n    }\n  }\n\n  this._handle = new binding.Zlib(mode);\n\n  var self = this;\n  this._hadError = false;\n  this._handle.onerror = function (message, errno) {\n    // there is no way to cleanly recover.\n    // continuing only obscures problems.\n    _close(self);\n    self._hadError = true;\n\n    var error = new Error(message);\n    error.errno = errno;\n    error.code = exports.codes[errno];\n    self.emit('error', error);\n  };\n\n  var level = exports.Z_DEFAULT_COMPRESSION;\n  if (typeof opts.level === 'number') level = opts.level;\n\n  var strategy = exports.Z_DEFAULT_STRATEGY;\n  if (typeof opts.strategy === 'number') strategy = opts.strategy;\n\n  this._handle.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS, level, opts.memLevel || exports.Z_DEFAULT_MEMLEVEL, strategy, opts.dictionary);\n\n  this._buffer = Buffer.allocUnsafe(this._chunkSize);\n  this._offset = 0;\n  this._level = level;\n  this._strategy = strategy;\n\n  this.once('end', this.close);\n\n  Object.defineProperty(this, '_closed', {\n    get: function () {\n      return !_this._handle;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n\nutil.inherits(Zlib, Transform);\n\nZlib.prototype.params = function (level, strategy, callback) {\n  if (level < exports.Z_MIN_LEVEL || level > exports.Z_MAX_LEVEL) {\n    throw new RangeError('Invalid compression level: ' + level);\n  }\n  if (strategy != exports.Z_FILTERED && strategy != exports.Z_HUFFMAN_ONLY && strategy != exports.Z_RLE && strategy != exports.Z_FIXED && strategy != exports.Z_DEFAULT_STRATEGY) {\n    throw new TypeError('Invalid strategy: ' + strategy);\n  }\n\n  if (this._level !== level || this._strategy !== strategy) {\n    var self = this;\n    this.flush(binding.Z_SYNC_FLUSH, function () {\n      assert(self._handle, 'zlib binding closed');\n      self._handle.params(level, strategy);\n      if (!self._hadError) {\n        self._level = level;\n        self._strategy = strategy;\n        if (callback) callback();\n      }\n    });\n  } else {\n    process.nextTick(callback);\n  }\n};\n\nZlib.prototype.reset = function () {\n  assert(this._handle, 'zlib binding closed');\n  return this._handle.reset();\n};\n\n// This is the _flush function called by the transform class,\n// internally, when the last chunk has been written.\nZlib.prototype._flush = function (callback) {\n  this._transform(Buffer.alloc(0), '', callback);\n};\n\nZlib.prototype.flush = function (kind, callback) {\n  var _this2 = this;\n\n  var ws = this._writableState;\n\n  if (typeof kind === 'function' || kind === undefined && !callback) {\n    callback = kind;\n    kind = binding.Z_FULL_FLUSH;\n  }\n\n  if (ws.ended) {\n    if (callback) process.nextTick(callback);\n  } else if (ws.ending) {\n    if (callback) this.once('end', callback);\n  } else if (ws.needDrain) {\n    if (callback) {\n      this.once('drain', function () {\n        return _this2.flush(kind, callback);\n      });\n    }\n  } else {\n    this._flushFlag = kind;\n    this.write(Buffer.alloc(0), '', callback);\n  }\n};\n\nZlib.prototype.close = function (callback) {\n  _close(this, callback);\n  process.nextTick(emitCloseNT, this);\n};\n\nfunction _close(engine, callback) {\n  if (callback) process.nextTick(callback);\n\n  // Caller may invoke .close after a zlib error (which will null _handle).\n  if (!engine._handle) return;\n\n  engine._handle.close();\n  engine._handle = null;\n}\n\nfunction emitCloseNT(self) {\n  self.emit('close');\n}\n\nZlib.prototype._transform = function (chunk, encoding, cb) {\n  var flushFlag;\n  var ws = this._writableState;\n  var ending = ws.ending || ws.ended;\n  var last = ending && (!chunk || ws.length === chunk.length);\n\n  if (chunk !== null && !Buffer.isBuffer(chunk)) return cb(new Error('invalid input'));\n\n  if (!this._handle) return cb(new Error('zlib binding closed'));\n\n  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag\n  // (or whatever flag was provided using opts.finishFlush).\n  // If it's explicitly flushing at some other time, then we use\n  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n  // goodness.\n  if (last) flushFlag = this._finishFlushFlag;else {\n    flushFlag = this._flushFlag;\n    // once we've flushed the last of the queue, stop flushing and\n    // go back to the normal behavior.\n    if (chunk.length >= ws.length) {\n      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;\n    }\n  }\n\n  this._processChunk(chunk, flushFlag, cb);\n};\n\nZlib.prototype._processChunk = function (chunk, flushFlag, cb) {\n  var availInBefore = chunk && chunk.length;\n  var availOutBefore = this._chunkSize - this._offset;\n  var inOff = 0;\n\n  var self = this;\n\n  var async = typeof cb === 'function';\n\n  if (!async) {\n    var buffers = [];\n    var nread = 0;\n\n    var error;\n    this.on('error', function (er) {\n      error = er;\n    });\n\n    assert(this._handle, 'zlib binding closed');\n    do {\n      var res = this._handle.writeSync(flushFlag, chunk, // in\n      inOff, // in_off\n      availInBefore, // in_len\n      this._buffer, // out\n      this._offset, //out_off\n      availOutBefore); // out_len\n    } while (!this._hadError && callback(res[0], res[1]));\n\n    if (this._hadError) {\n      throw error;\n    }\n\n    if (nread >= kMaxLength) {\n      _close(this);\n      throw new RangeError(kRangeErrorMessage);\n    }\n\n    var buf = Buffer.concat(buffers, nread);\n    _close(this);\n\n    return buf;\n  }\n\n  assert(this._handle, 'zlib binding closed');\n  var req = this._handle.write(flushFlag, chunk, // in\n  inOff, // in_off\n  availInBefore, // in_len\n  this._buffer, // out\n  this._offset, //out_off\n  availOutBefore); // out_len\n\n  req.buffer = chunk;\n  req.callback = callback;\n\n  function callback(availInAfter, availOutAfter) {\n    // When the callback is used in an async write, the callback's\n    // context is the `req` object that was created. The req object\n    // is === this._handle, and that's why it's important to null\n    // out the values after they are done being used. `this._handle`\n    // can stay in memory longer than the callback and buffer are needed.\n    if (this) {\n      this.buffer = null;\n      this.callback = null;\n    }\n\n    if (self._hadError) return;\n\n    var have = availOutBefore - availOutAfter;\n    assert(have >= 0, 'have should not go down');\n\n    if (have > 0) {\n      var out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n      // serve some output to the consumer.\n      if (async) {\n        self.push(out);\n      } else {\n        buffers.push(out);\n        nread += out.length;\n      }\n    }\n\n    // exhausted the output buffer, or used all the input create a new one.\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = Buffer.allocUnsafe(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done.  Need to reprocess.\n      // Also, update the availInBefore to the availInAfter value,\n      // so that if we have to hit it a third (fourth, etc.) time,\n      // it'll have the correct byte counts.\n      inOff += availInBefore - availInAfter;\n      availInBefore = availInAfter;\n\n      if (!async) return true;\n\n      var newReq = self._handle.write(flushFlag, chunk, inOff, availInBefore, self._buffer, self._offset, self._chunkSize);\n      newReq.callback = callback; // this same function\n      newReq.buffer = chunk;\n      return;\n    }\n\n    if (!async) return false;\n\n    // finished with the chunk.\n    cb();\n  }\n};\n\nutil.inherits(Deflate, Zlib);\nutil.inherits(Inflate, Zlib);\nutil.inherits(Gzip, Zlib);\nutil.inherits(Gunzip, Zlib);\nutil.inherits(DeflateRaw, Zlib);\nutil.inherits(InflateRaw, Zlib);\nutil.inherits(Unzip, Zlib);","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n","'use strict';\n\nvar bind = require('function-bind');\nvar $apply = require('./functionApply');\nvar actualApply = require('./actualApply');\n\n/** @type {import('./applyBind')} */\nmodule.exports = function applyBind() {\n\treturn actualApply(bind, $apply, arguments);\n};\n","'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n","'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n","'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {import('.')} */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n","'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar setFunctionLength = require('set-function-length');\n\nvar $defineProperty = require('es-define-property');\n\nvar callBindBasic = require('call-bind-apply-helpers');\nvar applyBind = require('call-bind-apply-helpers/applyBind');\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = callBindBasic(arguments);\n\tvar adjustedLength = originalFunction.length - (arguments.length - 1);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + (adjustedLength > 0 ? adjustedLength : 0),\n\t\ttrue\n\t);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n\n/** @type {import('.')} */\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\t// eslint-disable-next-line no-extra-parens\n\tvar intrinsic = /** @type {Parameters<typeof callBindBasic>[0][0]} */ (GetIntrinsic(name, !!allowMissing));\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBindBasic([intrinsic]);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar undefined;\n\nvar $Object = require('es-object-atoms');\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar max = require('math-intrinsics/max');\nvar min = require('math-intrinsics/min');\nvar pow = require('math-intrinsics/pow');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar getDunderProto = require('dunder-proto/get');\n\nvar getProto = (typeof Reflect === 'function' && Reflect.getPrototypeOf)\n\t|| $Object.getPrototypeOf\n\t|| getDunderProto;\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': $Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty,\n\t'%Math.abs%': abs,\n\t'%Math.floor%': floor,\n\t'%Math.max%': max,\n\t'%Math.min%': min,\n\t'%Math.pow%': pow\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            var t;\n\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    const N = 16;\n\n\t    //Origin pbox and sbox, derived from PI\n\t    const ORIG_P = [\n\t        0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344,\n\t        0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89,\n\t        0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C,\n\t        0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917,\n\t        0x9216D5D9, 0x8979FB1B\n\t    ];\n\n\t    const ORIG_S = [\n\t        [   0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7,\n\t            0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99,\n\t            0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16,\n\t            0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E,\n\t            0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE,\n\t            0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013,\n\t            0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF,\n\t            0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E,\n\t            0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60,\n\t            0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440,\n\t            0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE,\n\t            0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A,\n\t            0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E,\n\t            0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677,\n\t            0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193,\n\t            0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032,\n\t            0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88,\n\t            0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239,\n\t            0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E,\n\t            0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0,\n\t            0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3,\n\t            0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98,\n\t            0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88,\n\t            0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE,\n\t            0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6,\n\t            0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D,\n\t            0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B,\n\t            0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7,\n\t            0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA,\n\t            0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463,\n\t            0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F,\n\t            0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09,\n\t            0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3,\n\t            0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB,\n\t            0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279,\n\t            0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8,\n\t            0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB,\n\t            0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82,\n\t            0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB,\n\t            0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573,\n\t            0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0,\n\t            0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B,\n\t            0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790,\n\t            0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8,\n\t            0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4,\n\t            0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0,\n\t            0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7,\n\t            0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C,\n\t            0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD,\n\t            0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1,\n\t            0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299,\n\t            0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9,\n\t            0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477,\n\t            0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF,\n\t            0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49,\n\t            0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF,\n\t            0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA,\n\t            0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5,\n\t            0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41,\n\t            0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915,\n\t            0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400,\n\t            0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915,\n\t            0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664,\n\t            0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A   ],\n\t        [   0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623,\n\t            0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266,\n\t            0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1,\n\t            0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E,\n\t            0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6,\n\t            0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1,\n\t            0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E,\n\t            0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1,\n\t            0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737,\n\t            0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8,\n\t            0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF,\n\t            0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD,\n\t            0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701,\n\t            0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7,\n\t            0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41,\n\t            0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331,\n\t            0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF,\n\t            0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF,\n\t            0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E,\n\t            0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87,\n\t            0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C,\n\t            0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2,\n\t            0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16,\n\t            0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD,\n\t            0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B,\n\t            0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509,\n\t            0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E,\n\t            0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3,\n\t            0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F,\n\t            0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A,\n\t            0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4,\n\t            0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960,\n\t            0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66,\n\t            0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28,\n\t            0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802,\n\t            0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84,\n\t            0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510,\n\t            0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF,\n\t            0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14,\n\t            0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E,\n\t            0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50,\n\t            0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7,\n\t            0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8,\n\t            0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281,\n\t            0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99,\n\t            0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696,\n\t            0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128,\n\t            0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73,\n\t            0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0,\n\t            0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0,\n\t            0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105,\n\t            0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250,\n\t            0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3,\n\t            0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285,\n\t            0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00,\n\t            0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061,\n\t            0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB,\n\t            0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E,\n\t            0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735,\n\t            0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC,\n\t            0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9,\n\t            0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340,\n\t            0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20,\n\t            0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7   ],\n\t        [   0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934,\n\t            0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068,\n\t            0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF,\n\t            0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840,\n\t            0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45,\n\t            0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504,\n\t            0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A,\n\t            0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB,\n\t            0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE,\n\t            0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6,\n\t            0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42,\n\t            0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B,\n\t            0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2,\n\t            0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB,\n\t            0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527,\n\t            0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B,\n\t            0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33,\n\t            0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C,\n\t            0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3,\n\t            0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC,\n\t            0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17,\n\t            0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564,\n\t            0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B,\n\t            0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115,\n\t            0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922,\n\t            0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728,\n\t            0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0,\n\t            0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E,\n\t            0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37,\n\t            0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D,\n\t            0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804,\n\t            0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B,\n\t            0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3,\n\t            0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB,\n\t            0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D,\n\t            0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C,\n\t            0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350,\n\t            0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9,\n\t            0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A,\n\t            0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE,\n\t            0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D,\n\t            0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC,\n\t            0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F,\n\t            0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61,\n\t            0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2,\n\t            0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9,\n\t            0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2,\n\t            0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C,\n\t            0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E,\n\t            0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633,\n\t            0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10,\n\t            0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169,\n\t            0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52,\n\t            0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027,\n\t            0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5,\n\t            0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62,\n\t            0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634,\n\t            0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76,\n\t            0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24,\n\t            0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC,\n\t            0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4,\n\t            0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C,\n\t            0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837,\n\t            0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0  ],\n\t        [   0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B,\n\t            0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE,\n\t            0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B,\n\t            0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4,\n\t            0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8,\n\t            0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6,\n\t            0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304,\n\t            0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22,\n\t            0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4,\n\t            0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6,\n\t            0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9,\n\t            0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59,\n\t            0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593,\n\t            0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51,\n\t            0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28,\n\t            0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C,\n\t            0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B,\n\t            0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28,\n\t            0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C,\n\t            0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD,\n\t            0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A,\n\t            0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319,\n\t            0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB,\n\t            0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F,\n\t            0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991,\n\t            0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32,\n\t            0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680,\n\t            0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166,\n\t            0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE,\n\t            0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB,\n\t            0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5,\n\t            0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47,\n\t            0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370,\n\t            0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D,\n\t            0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84,\n\t            0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048,\n\t            0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8,\n\t            0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD,\n\t            0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9,\n\t            0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7,\n\t            0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38,\n\t            0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F,\n\t            0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C,\n\t            0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525,\n\t            0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1,\n\t            0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442,\n\t            0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964,\n\t            0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E,\n\t            0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8,\n\t            0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D,\n\t            0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F,\n\t            0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299,\n\t            0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02,\n\t            0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC,\n\t            0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614,\n\t            0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A,\n\t            0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6,\n\t            0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B,\n\t            0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0,\n\t            0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060,\n\t            0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E,\n\t            0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9,\n\t            0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F,\n\t            0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6  ]\n\t    ];\n\n\t    var BLOWFISH_CTX = {\n\t        pbox: [],\n\t        sbox: []\n\t    }\n\n\t    function F(ctx, x){\n\t        let a = (x >> 24) & 0xFF;\n\t        let b = (x >> 16) & 0xFF;\n\t        let c = (x >> 8) & 0xFF;\n\t        let d = x & 0xFF;\n\n\t        let y = ctx.sbox[0][a] + ctx.sbox[1][b];\n\t        y = y ^ ctx.sbox[2][c];\n\t        y = y + ctx.sbox[3][d];\n\n\t        return y;\n\t    }\n\n\t    function BlowFish_Encrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = 0; i < N; ++i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[N];\n\t        Xl = Xl ^ ctx.pbox[N + 1];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    function BlowFish_Decrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = N + 1; i > 1; --i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[1];\n\t        Xl = Xl ^ ctx.pbox[0];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    /**\n\t     * Initialization ctx's pbox and sbox.\n\t     *\n\t     * @param {Object} ctx The object has pbox and sbox.\n\t     * @param {Array} key An array of 32-bit words.\n\t     * @param {int} keysize The length of the key.\n\t     *\n\t     * @example\n\t     *\n\t     *     BlowFishInit(BLOWFISH_CTX, key, 128/32);\n\t     */\n\t    function BlowFishInit(ctx, key, keysize)\n\t    {\n\t        for(let Row = 0; Row < 4; Row++)\n\t        {\n\t            ctx.sbox[Row] = [];\n\t            for(let Col = 0; Col < 256; Col++)\n\t            {\n\t                ctx.sbox[Row][Col] = ORIG_S[Row][Col];\n\t            }\n\t        }\n\n\t        let keyIndex = 0;\n\t        for(let index = 0; index < N + 2; index++)\n\t        {\n\t            ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];\n\t            keyIndex++;\n\t            if(keyIndex >= keysize)\n\t            {\n\t                keyIndex = 0;\n\t            }\n\t        }\n\n\t        let Data1 = 0;\n\t        let Data2 = 0;\n\t        let res = 0;\n\t        for(let i = 0; i < N + 2; i += 2)\n\t        {\n\t            res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t            Data1 = res.left;\n\t            Data2 = res.right;\n\t            ctx.pbox[i] = Data1;\n\t            ctx.pbox[i + 1] = Data2;\n\t        }\n\n\t        for(let i = 0; i < 4; i++)\n\t        {\n\t            for(let j = 0; j < 256; j += 2)\n\t            {\n\t                res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t                Data1 = res.left;\n\t                Data2 = res.right;\n\t                ctx.sbox[i][j] = Data1;\n\t                ctx.sbox[i][j + 1] = Data2;\n\t            }\n\t        }\n\n\t        return true;\n\t    }\n\n\t    /**\n\t     * Blowfish block cipher algorithm.\n\t     */\n\t    var Blowfish = C_algo.Blowfish = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            //Initialization pbox and sbox\n\t            BlowFishInit(BLOWFISH_CTX, keyWords, keySize);\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            var res = BlowFish_Decrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        blockSize: 64/32,\n\n\t        keySize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Blowfish = BlockCipher._createHelper(Blowfish);\n\t}());\n\n\n\treturn CryptoJS.Blowfish;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            var block;\n\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            var modeCreator;\n\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var finalProcessedBlocks;\n\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            var wordArray;\n\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            var salt;\n\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt, hasher) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            if (!hasher) {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\t            } else {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize, hasher: hasher }).compute(password, salt);\n\t            }\n\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, cfg.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64url encoding strategy.\n\t     */\n\t    var Base64url = C_enc.Base64url = {\n\t        /**\n\t         * Converts a word array to a Base64url string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {string} The Base64url string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64url string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64url string.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);\n\t         */\n\t        parse: function (base64Str, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                reverseMap = this._reverseMap = [];\n\t                for (var j = 0; j < map.length; j++) {\n\t                    reverseMap[map.charCodeAt(j)] = j;\n\t                }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t        _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t        var words = [];\n\t        var nBytes = 0;\n\t        for (var i = 0; i < base64StrLength; i++) {\n\t            if (i % 4) {\n\t                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t                var bitsCombined = bits1 | bits2;\n\t                words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t                nBytes++;\n\t            }\n\t        }\n\t        return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64url;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            var block;\n\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./enc-base64url\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"), require(\"./blowfish\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./enc-base64url\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\", \"./blowfish\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        var keystream;\n\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        for (var i = data.sigBytes - 1; i >= 0; i--) {\n\t            if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t                data.sigBytes = i + 1;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA256\n\t         * @property {number} iterations The number of iterations to perform. Default: 250000\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA256,\n\t            iterations: 250000\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    var tMsw;\n\t                    var tLsw;\n\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                var Wil;\n\t                var Wih;\n\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    Wil = gamma0l + Wi7l;\n\t                    Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + gamma1l;\n\t                    Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + Wi16l;\n\t                    Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            // Make sure the key length is valid (64, 128 or >= 192 bit)\n\t            if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n\t                throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\n\t            }\n\n\t            // Extend the key according to the keying options defined in 3DES standard\n\t            var key1 = keyWords.slice(0, 2);\n\t            var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n\t            var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(key1));\n\t            this._des2 = DES.createEncryptor(WordArray.create(key2));\n\t            this._des3 = DES.createEncryptor(WordArray.create(key3));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar gopd = require('gopd');\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n","'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\n\n// eslint-disable-next-line no-extra-parens, no-proto\nvar hasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\n\n// eslint-disable-next-line no-extra-parens\nvar desc = hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\nvar $Object = Object;\nvar $getPrototypeOf = $Object.getPrototypeOf;\n\n/** @type {import('./get')} */\nmodule.exports = desc && typeof desc.get === 'function'\n\t? callBind([desc.get])\n\t: typeof $getPrototypeOf === 'function'\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\n\t\t}\n\t\t: false;\n","'use strict';\n\n/** @type {import('.')} */\nvar $defineProperty = Object.defineProperty || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n","'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n","'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n","'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n","'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n","'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n","'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_js_1 = require(\"./utils.js\");\nexports.keccak224 = (0, utils_js_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_js_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_js_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_js_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHash = getHash;\nexports.createCurve = createCurve;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst weierstrass_js_1 = require(\"./abstract/weierstrass.js\");\n// connects noble-curves to noble-hashes\nfunction getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => (0, hmac_1.hmac)(hash, key, (0, utils_1.concatBytes)(...msgs)),\n        randomBytes: utils_1.randomBytes,\n    };\n}\nfunction createCurve(curveDef, defHash) {\n    const create = (hash) => (0, weierstrass_js_1.weierstrass)({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wNAF = wNAF;\nexports.validateBasic = validateBasic;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nconst modular_js_1 = require(\"./modular.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nfunction wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nfunction validateBasic(curve) {\n    (0, modular_js_1.validateField)(curve.Fp);\n    (0, utils_js_1.validateObject)(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...(0, modular_js_1.nLength)(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expand_message_xmd = expand_message_xmd;\nexports.expand_message_xof = expand_message_xof;\nexports.hash_to_field = hash_to_field;\nexports.isogenyMap = isogenyMap;\nexports.createHasher = createHasher;\nconst modular_js_1 = require(\"./modular.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = utils_js_1.bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    if (value < 0 || value >= 1 << (8 * length)) {\n        throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n    }\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction anum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1\nfunction expand_message_xmd(msg, DST, lenInBytes, H) {\n    (0, utils_js_1.abytes)(msg);\n    (0, utils_js_1.abytes)(DST);\n    anum(lenInBytes);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    if (DST.length > 255)\n        DST = H((0, utils_js_1.concatBytes)((0, utils_js_1.utf8ToBytes)('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (ell > 255)\n        throw new Error('Invalid xmd length');\n    const DST_prime = (0, utils_js_1.concatBytes)(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H((0, utils_js_1.concatBytes)(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H((0, utils_js_1.concatBytes)(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H((0, utils_js_1.concatBytes)(...args));\n    }\n    const pseudo_random_bytes = (0, utils_js_1.concatBytes)(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\n// Produces a uniformly random byte string using an extendable-output function (XOF) H.\n// 1. The collision resistance of H MUST be at least k bits.\n// 2. H MUST be an XOF that has been proved indifferentiable from\n//    a random oracle under a reasonable cryptographic assumption.\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2\nfunction expand_message_xof(msg, DST, lenInBytes, k, H) {\n    (0, utils_js_1.abytes)(msg);\n    (0, utils_js_1.abytes)(DST);\n    anum(lenInBytes);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update((0, utils_js_1.utf8ToBytes)('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://www.rfc-editor.org/rfc/rfc9380#section-5.2\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nfunction hash_to_field(msg, count, options) {\n    (0, utils_js_1.validateObject)(options, {\n        DST: 'stringOrUint8Array',\n        p: 'bigint',\n        m: 'isSafeInteger',\n        k: 'isSafeInteger',\n        hash: 'hash',\n    });\n    const { p, k, m, hash, expand, DST: _DST } = options;\n    (0, utils_js_1.abytes)(msg);\n    anum(count);\n    const DST = typeof _DST === 'string' ? (0, utils_js_1.utf8ToBytes)(_DST) : _DST;\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = (0, modular_js_1.mod)(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nfunction isogenyMap(field, map) {\n    // Make same order as in spec\n    const COEFF = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        x = field.div(xNum, xDen); // xNum / xDen\n        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nfunction createHasher(Point, mapToCurve, def) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    return {\n        // Encodes byte string to elliptic curve.\n        // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n        hashToCurve(msg, options) {\n            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });\n            const u0 = Point.fromAffine(mapToCurve(u[0]));\n            const u1 = Point.fromAffine(mapToCurve(u[1]));\n            const P = u0.add(u1).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // Encodes byte string to elliptic curve.\n        // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n        encodeToCurve(msg, options) {\n            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });\n            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // Same as encodeToCurve, but without hash\n        mapToCurve(scalars) {\n            if (!Array.isArray(scalars))\n                throw new Error('mapToCurve: expected array of bigints');\n            for (const i of scalars)\n                if (typeof i !== 'bigint')\n                    throw new Error(`mapToCurve: expected array of bigints, got ${i} in array`);\n            const P = Point.fromAffine(mapToCurve(scalars)).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n    };\n}\n//# sourceMappingURL=hash-to-curve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNegativeLE = void 0;\nexports.mod = mod;\nexports.pow = pow;\nexports.pow2 = pow2;\nexports.invert = invert;\nexports.tonelliShanks = tonelliShanks;\nexports.FpSqrt = FpSqrt;\nexports.validateField = validateField;\nexports.FpPow = FpPow;\nexports.FpInvertBatch = FpInvertBatch;\nexports.FpDiv = FpDiv;\nexports.FpIsSquare = FpIsSquare;\nexports.nLength = nLength;\nexports.Field = Field;\nexports.FpSqrtOdd = FpSqrtOdd;\nexports.FpSqrtEven = FpSqrtEven;\nexports.hashToPrivateScalar = hashToPrivateScalar;\nexports.getFieldBytesLength = getFieldBytesLength;\nexports.getMinHashLength = getMinHashLength;\nexports.mapHashToField = mapHashToField;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nconst utils_js_1 = require(\"./utils.js\");\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nfunction mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nfunction pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nfunction pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nfunction invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nfunction tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nfunction FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nconst isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\nexports.isNegativeLE = isNegativeLE;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nfunction validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return (0, utils_js_1.validateObject)(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nfunction FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nfunction FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nfunction FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nfunction FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nfunction nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nfunction Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: (0, utils_js_1.bitMask)(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? (0, utils_js_1.numberToBytesLE)(num, BYTES) : (0, utils_js_1.numberToBytesBE)(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? (0, utils_js_1.bytesToNumberLE)(bytes) : (0, utils_js_1.bytesToNumberBE)(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nfunction FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nfunction FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nfunction hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = (0, utils_js_1.ensureBytes)('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? (0, utils_js_1.bytesToNumberLE)(hash) : (0, utils_js_1.bytesToNumberBE)(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nfunction getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nfunction getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nfunction mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? (0, utils_js_1.bytesToNumberBE)(key) : (0, utils_js_1.bytesToNumberLE)(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? (0, utils_js_1.numberToBytesLE)(reduced, fieldLen) : (0, utils_js_1.numberToBytesBE)(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitMask = void 0;\nexports.isBytes = isBytes;\nexports.abytes = abytes;\nexports.bytesToHex = bytesToHex;\nexports.numberToHexUnpadded = numberToHexUnpadded;\nexports.hexToNumber = hexToNumber;\nexports.hexToBytes = hexToBytes;\nexports.bytesToNumberBE = bytesToNumberBE;\nexports.bytesToNumberLE = bytesToNumberLE;\nexports.numberToBytesBE = numberToBytesBE;\nexports.numberToBytesLE = numberToBytesLE;\nexports.numberToVarBytesBE = numberToVarBytesBE;\nexports.ensureBytes = ensureBytes;\nexports.concatBytes = concatBytes;\nexports.equalBytes = equalBytes;\nexports.utf8ToBytes = utf8ToBytes;\nexports.bitLen = bitLen;\nexports.bitGet = bitGet;\nexports.bitSet = bitSet;\nexports.createHmacDrbg = createHmacDrbg;\nexports.validateObject = validateObject;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nfunction bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nfunction numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nfunction numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nfunction numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nfunction ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nfunction equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nfunction bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nfunction bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nfunction bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nconst bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\nexports.bitMask = bitMask;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nfunction createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nfunction validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DER = void 0;\nexports.weierstrassPoints = weierstrassPoints;\nexports.weierstrass = weierstrass;\nexports.SWUFpSqrtRatio = SWUFpSqrtRatio;\nexports.mapToCurveSimpleSWU = mapToCurveSimpleSWU;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nconst curve_js_1 = require(\"./curve.js\");\nconst mod = require(\"./modular.js\");\nconst ut = require(\"./utils.js\");\nconst utils_js_1 = require(\"./utils.js\");\nfunction validatePointOpts(curve) {\n    const opts = (0, curve_js_1.validateBasic)(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexports.DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = exports.DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = exports.DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = exports.DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = exports.DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nfunction weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE((0, utils_js_1.ensureBytes)('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes((0, utils_js_1.ensureBytes)('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = (0, curve_js_1.wNAF)(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = (0, curve_js_1.validateBasic)(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nfunction weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = (0, utils_js_1.ensureBytes)('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = exports.DER.toSig((0, utils_js_1.ensureBytes)('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN((0, utils_js_1.ensureBytes)('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return exports.DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = (0, utils_js_1.ensureBytes)('msgHash', msgHash);\n        if (prehash)\n            msgHash = (0, utils_js_1.ensureBytes)('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push((0, utils_js_1.ensureBytes)('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = (0, utils_js_1.ensureBytes)('msgHash', msgHash);\n        publicKey = (0, utils_js_1.ensureBytes)('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof exports.DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nfunction SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nfunction mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeToCurve = exports.hashToCurve = exports.schnorr = exports.secp256k1 = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst _shortw_utils_js_1 = require(\"./_shortw_utils.js\");\nconst hash_to_curve_js_1 = require(\"./abstract/hash-to-curve.js\");\nconst modular_js_1 = require(\"./abstract/modular.js\");\nconst utils_js_1 = require(\"./abstract/utils.js\");\nconst weierstrass_js_1 = require(\"./abstract/weierstrass.js\");\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = ((0, modular_js_1.pow2)(b3, _3n, P) * b3) % P;\n    const b9 = ((0, modular_js_1.pow2)(b6, _3n, P) * b3) % P;\n    const b11 = ((0, modular_js_1.pow2)(b9, _2n, P) * b2) % P;\n    const b22 = ((0, modular_js_1.pow2)(b11, _11n, P) * b11) % P;\n    const b44 = ((0, modular_js_1.pow2)(b22, _22n, P) * b22) % P;\n    const b88 = ((0, modular_js_1.pow2)(b44, _44n, P) * b44) % P;\n    const b176 = ((0, modular_js_1.pow2)(b88, _88n, P) * b88) % P;\n    const b220 = ((0, modular_js_1.pow2)(b176, _44n, P) * b44) % P;\n    const b223 = ((0, modular_js_1.pow2)(b220, _3n, P) * b3) % P;\n    const t1 = ((0, modular_js_1.pow2)(b223, _23n, P) * b22) % P;\n    const t2 = ((0, modular_js_1.pow2)(t1, _6n, P) * b2) % P;\n    const root = (0, modular_js_1.pow2)(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = (0, modular_js_1.Field)(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexports.secp256k1 = (0, _shortw_utils_js_1.createCurve)({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = (0, modular_js_1.mod)(k - c1 * a1 - c2 * a2, n);\n            let k2 = (0, modular_js_1.mod)(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256_1.sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = (0, sha256_1.sha256)(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = (0, utils_js_1.concatBytes)(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return (0, sha256_1.sha256)((0, utils_js_1.concatBytes)(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => (0, utils_js_1.numberToBytesBE)(n, 32);\nconst modP = (x) => (0, modular_js_1.mod)(x, secp256k1P);\nconst modN = (x) => (0, modular_js_1.mod)(x, secp256k1N);\nconst Point = exports.secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = exports.secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN((0, utils_js_1.bytesToNumberBE)(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = (0, utils_1.randomBytes)(32)) {\n    const m = (0, utils_js_1.ensureBytes)('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = (0, utils_js_1.ensureBytes)('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ (0, utils_js_1.bytesToNumberBE)(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN((0, utils_js_1.bytesToNumberBE)(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = (0, utils_js_1.ensureBytes)('signature', signature, 64);\n    const m = (0, utils_js_1.ensureBytes)('message', message);\n    const pub = (0, utils_js_1.ensureBytes)('publicKey', publicKey, 32);\n    try {\n        const P = lift_x((0, utils_js_1.bytesToNumberBE)(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = (0, utils_js_1.bytesToNumberBE)(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = (0, utils_js_1.bytesToNumberBE)(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexports.schnorr = (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: exports.secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE: utils_js_1.numberToBytesBE,\n        bytesToNumberBE: utils_js_1.bytesToNumberBE,\n        taggedHash,\n        mod: modular_js_1.mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.isogenyMap)(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => (0, weierstrass_js_1.mapToCurveSimpleSWU)(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.createHasher)(exports.secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256_1.sha256,\n}))();\nexports.hashToCurve = (() => htf.hashToCurve)();\nexports.encodeToCurve = (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = exports.isBytes = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\nexports.bool = bool;\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexports.isBytes = isBytes;\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = { number, bool, bytes, hash, exists, output };\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HashMD = exports.Maj = exports.Chi = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\nexports.Chi = Chi;\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\nexports.Maj = Maj;\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nclass HashMD extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.HashMD = HashMD;\n//# sourceMappingURL=_md.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = exports.HMAC = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        (0, _assert_js_1.hash)(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        (0, _assert_js_1.exists)(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.bytes)(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\nexports.HMAC = HMAC;\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _md_js_1 = require(\"./_md.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends _md_js_1.HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + (0, _md_js_1.Chi)(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + (0, _md_js_1.Maj)(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0, _u64_js_1.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0, _assert_js_1.number)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0, _assert_js_1.exists)(this, false);\n        (0, _assert_js_1.bytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0, _assert_js_1.number)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0, _assert_js_1.output)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.byteSwap32 = exports.byteSwapIfBE = exports.byteSwap = exports.isLE = exports.rotl = exports.rotr = exports.createView = exports.u32 = exports.u8 = exports.isBytes = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst _assert_js_1 = require(\"./_assert.js\");\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexports.isBytes = isBytes;\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexports.rotl = rotl;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nconst byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\nexports.byteSwap = byteSwap;\n// Conditionally byte swap if on a big-endian platform\nexports.byteSwapIfBE = exports.isLE ? (n) => n : (n) => (0, exports.byteSwap)(n);\n// In place byte swap for Uint32Array\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = (0, exports.byteSwap)(arr[i]);\n    }\n}\nexports.byteSwap32 = byteSwap32;\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0, _assert_js_1.bytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    (0, _assert_js_1.bytes)(data);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0, _assert_js_1.bytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.secp256k1 = void 0;\nvar secp256k1_1 = require(\"@noble/curves/secp256k1\");\nObject.defineProperty(exports, \"secp256k1\", { enumerable: true, get: function () { return secp256k1_1.secp256k1; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\nexports.bytesToUtf8 = bytesToUtf8;\nexports.hexToBytes = hexToBytes;\nexports.equalsBytes = equalsBytes;\nexports.wrapHash = wrapHash;\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexports.crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar getDunderProto = require('dunder-proto/get');\n\nvar getProto = (typeof Reflect === 'function' && Reflect.getPrototypeOf)\n\t|| Object.getPrototypeOf\n\t|| getDunderProto;\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\n/** @type {import('./gOPD')} */\nmodule.exports = Object.getOwnPropertyDescriptor;\n","'use strict';\n\n/** @type {import('.')} */\nvar $gOPD = require('./gOPD');\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\treturn !!$defineProperty;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!$defineProperty) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bound');\n\nvar $toString = callBound('Object.prototype.toString');\n\n/** @type {import('.')} */\nvar isStandardArguments = function isArguments(value) {\n\tif (\n\t\thasToStringTag\n\t\t&& value\n\t\t&& typeof value === 'object'\n\t\t&& Symbol.toStringTag in value\n\t) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\n/** @type {import('.')} */\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null\n\t\t&& typeof value === 'object'\n\t\t&& 'length' in value\n\t\t&& typeof value.length === 'number'\n\t\t&& value.length >= 0\n\t\t&& $toString(value) !== '[object Array]'\n\t\t&& 'callee' in value\n\t\t&& $toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\n// @ts-expect-error TODO make this not error\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\n/** @type {import('.')} */\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\nvar whichTypedArray = require('which-typed-array');\n\n/** @type {import('.')} */\nmodule.exports = function isTypedArray(value) {\n\treturn !!whichTypedArray(value);\n};\n","'use strict';\n\n/** @type {import('./abs')} */\nmodule.exports = Math.abs;\n","'use strict';\n\n/** @type {import('./floor')} */\nmodule.exports = Math.floor;\n","'use strict';\n\n/** @type {import('./max')} */\nmodule.exports = Math.max;\n","'use strict';\n\n/** @type {import('./min')} */\nmodule.exports = Math.min;\n","'use strict';\n\n/** @type {import('./pow')} */\nmodule.exports = Math.pow;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidStatusCodeError = exports.InvalidCertError = void 0;\nconst DEFAULT_OPT = Object.freeze({\n    redirect: true,\n    expectStatusCode: 200,\n    headers: {},\n    full: false,\n    keepAlive: true,\n    cors: false,\n    referrer: false,\n    sslAllowSelfSigned: false,\n    _redirectCount: 0,\n});\nclass InvalidCertError extends Error {\n    constructor(msg, fingerprint256) {\n        super(msg);\n        this.fingerprint256 = fingerprint256;\n    }\n}\nexports.InvalidCertError = InvalidCertError;\nclass InvalidStatusCodeError extends Error {\n    constructor(statusCode) {\n        super(`Request Failed. Status Code: ${statusCode}`);\n        this.statusCode = statusCode;\n    }\n}\nexports.InvalidStatusCodeError = InvalidStatusCodeError;\nfunction detectType(b, type) {\n    if (!type || type === 'text' || type === 'json') {\n        try {\n            let text = new TextDecoder('utf8', { fatal: true }).decode(b);\n            if (type === 'text')\n                return text;\n            try {\n                return JSON.parse(text);\n            }\n            catch (err) {\n                if (type === 'json')\n                    throw err;\n                return text;\n            }\n        }\n        catch (err) {\n            if (type === 'text' || type === 'json')\n                throw err;\n        }\n    }\n    return b;\n}\nlet agents = {};\nfunction fetchNode(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const http = require('http');\n    const https = require('https');\n    const zlib = require('zlib');\n    const { promisify } = require('util');\n    const { resolve: urlResolve } = require('url');\n    const isSecure = !!/^https/.test(url);\n    let opts = {\n        method: options.method || 'GET',\n        headers: { 'Accept-Encoding': 'gzip, deflate, br' },\n    };\n    const compactFP = (s) => s.replace(/:| /g, '').toLowerCase();\n    if (options.keepAlive) {\n        const agentOpt = {\n            keepAlive: true,\n            keepAliveMsecs: 30 * 1000,\n            maxFreeSockets: 1024,\n            maxCachedSessions: 1024,\n        };\n        const agentKey = [\n            isSecure,\n            isSecure && options.sslPinnedCertificates?.map((i) => compactFP(i)).sort(),\n        ].join();\n        opts.agent =\n            agents[agentKey] || (agents[agentKey] = new (isSecure ? https : http).Agent(agentOpt));\n    }\n    if (options.type === 'json')\n        opts.headers['Content-Type'] = 'application/json';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    opts.headers = { ...opts.headers, ...options.headers };\n    if (options.sslAllowSelfSigned)\n        opts.rejectUnauthorized = false;\n    const handleRes = async (res) => {\n        const status = res.statusCode;\n        if (options.redirect && 300 <= status && status < 400 && res.headers['location']) {\n            if (options._redirectCount == 10)\n                throw new Error('Request failed. Too much redirects.');\n            options._redirectCount += 1;\n            return await fetchNode(urlResolve(url, res.headers['location']), options);\n        }\n        if (options.expectStatusCode && status !== options.expectStatusCode) {\n            res.resume();\n            throw new InvalidStatusCodeError(status);\n        }\n        let buf = [];\n        for await (const chunk of res)\n            buf.push(chunk);\n        let bytes = Buffer.concat(buf);\n        const encoding = res.headers['content-encoding'];\n        if (encoding === 'br')\n            bytes = await promisify(zlib.brotliDecompress)(bytes);\n        if (encoding === 'gzip' || encoding === 'deflate')\n            bytes = await promisify(zlib.unzip)(bytes);\n        const body = detectType(bytes, options.type);\n        if (options.full)\n            return { headers: res.headers, status, body };\n        return body;\n    };\n    return new Promise((resolve, reject) => {\n        const handleError = async (err) => {\n            if (err && err.code === 'DEPTH_ZERO_SELF_SIGNED_CERT') {\n                try {\n                    await fetchNode(url, { ...options, sslAllowSelfSigned: true, sslPinnedCertificates: [] });\n                }\n                catch (e) {\n                    if (e && e.fingerprint256) {\n                        err = new InvalidCertError(`Self-signed SSL certificate: ${e.fingerprint256}`, e.fingerprint256);\n                    }\n                }\n            }\n            reject(err);\n        };\n        const req = (isSecure ? https : http).request(url, opts, (res) => {\n            res.on('error', handleError);\n            (async () => {\n                try {\n                    resolve(await handleRes(res));\n                }\n                catch (error) {\n                    reject(error);\n                }\n            })();\n        });\n        req.on('error', handleError);\n        const pinned = options.sslPinnedCertificates?.map((i) => compactFP(i));\n        const mfetchSecureConnect = (socket) => {\n            const fp256 = compactFP(socket.getPeerCertificate()?.fingerprint256 || '');\n            if (!fp256 && socket.isSessionReused())\n                return;\n            if (pinned.includes(fp256))\n                return;\n            req.emit('error', new InvalidCertError(`Invalid SSL certificate: ${fp256} Expected: ${pinned}`, fp256));\n            return req.abort();\n        };\n        if (options.sslPinnedCertificates) {\n            req.on('socket', (socket) => {\n                const hasListeners = socket\n                    .listeners('secureConnect')\n                    .map((i) => (i.name || '').replace('bound ', ''))\n                    .includes('mfetchSecureConnect');\n                if (hasListeners)\n                    return;\n                socket.on('secureConnect', mfetchSecureConnect.bind(null, socket));\n            });\n        }\n        if (options.keepAlive)\n            req.setNoDelay(true);\n        if (opts.body)\n            req.write(opts.body);\n        req.end();\n    });\n}\nconst SAFE_HEADERS = new Set(['Accept', 'Accept-Language', 'Content-Language', 'Content-Type'].map((i) => i.toLowerCase()));\nconst FORBIDDEN_HEADERS = new Set(['Accept-Charset', 'Accept-Encoding', 'Access-Control-Request-Headers', 'Access-Control-Request-Method',\n    'Connection', 'Content-Length', 'Cookie', 'Cookie2', 'Date', 'DNT', 'Expect', 'Host', 'Keep-Alive', 'Origin', 'Referer', 'TE', 'Trailer',\n    'Transfer-Encoding', 'Upgrade', 'Via'].map((i) => i.toLowerCase()));\nasync function fetchBrowser(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const headers = new Headers();\n    if (options.type === 'json')\n        headers.set('Content-Type', 'application/json');\n    let parsed = new URL(url);\n    if (parsed.username) {\n        const auth = btoa(`${parsed.username}:${parsed.password}`);\n        headers.set('Authorization', `Basic ${auth}`);\n        parsed.username = '';\n        parsed.password = '';\n    }\n    url = '' + parsed;\n    for (let k in options.headers) {\n        const name = k.toLowerCase();\n        if (SAFE_HEADERS.has(name) || (options.cors && !FORBIDDEN_HEADERS.has(name)))\n            headers.set(k, options.headers[k]);\n    }\n    let opts = { headers, redirect: options.redirect ? 'follow' : 'manual' };\n    if (!options.referrer)\n        opts.referrerPolicy = 'no-referrer';\n    if (options.cors)\n        opts.mode = 'cors';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    const res = await fetch(url, opts);\n    if (options.expectStatusCode && res.status !== options.expectStatusCode)\n        throw new InvalidStatusCodeError(res.status);\n    const body = detectType(new Uint8Array(await res.arrayBuffer()), options.type);\n    if (options.full)\n        return { headers: Object.fromEntries(res.headers.entries()), status: res.status, body };\n    return body;\n}\nconst IS_NODE = !!(typeof process == 'object' &&\n    process.versions &&\n    process.versions.node &&\n    process.versions.v8);\nfunction fetchUrl(url, options) {\n    const fn = IS_NODE ? fetchNode : fetchBrowser;\n    return fn(url, options);\n}\nexports.default = fetchUrl;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nvar quotes = {\n    __proto__: null,\n    'double': '\"',\n    single: \"'\"\n};\nvar quoteREs = {\n    __proto__: null,\n    'double': /([\"\\\\])/g,\n    single: /(['\\\\])/g\n};\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var style = opts.quoteStyle || defaultStyle;\n    var quoteChar = quotes[style];\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\n    quoteRE.lastIndex = 0;\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\n// modified from https://github.com/es-shims/es6-shim\nvar objectKeys = require('object-keys');\nvar hasSymbols = require('has-symbols/shams')();\nvar callBound = require('call-bound');\nvar $Object = require('es-object-atoms');\nvar $push = callBound('Array.prototype.push');\nvar $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar originalGetSymbols = hasSymbols ? $Object.getOwnPropertySymbols : null;\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function assign(target, source1) {\n\tif (target == null) { throw new TypeError('target must be an object'); }\n\tvar to = $Object(target); // step 1\n\tif (arguments.length === 1) {\n\t\treturn to; // step 2\n\t}\n\tfor (var s = 1; s < arguments.length; ++s) {\n\t\tvar from = $Object(arguments[s]); // step 3.a.i\n\n\t\t// step 3.a.ii:\n\t\tvar keys = objectKeys(from);\n\t\tvar getSymbols = hasSymbols && ($Object.getOwnPropertySymbols || originalGetSymbols);\n\t\tif (getSymbols) {\n\t\t\tvar syms = getSymbols(from);\n\t\t\tfor (var j = 0; j < syms.length; ++j) {\n\t\t\t\tvar key = syms[j];\n\t\t\t\tif ($propIsEnumerable(from, key)) {\n\t\t\t\t\t$push(keys, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// step 3.a.iii:\n\t\tfor (var i = 0; i < keys.length; ++i) {\n\t\t\tvar nextKey = keys[i];\n\t\t\tif ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2\n\t\t\t\tvar propValue = from[nextKey]; // step 3.a.iii.2.a\n\t\t\t\tto[nextKey] = propValue; // step 3.a.iii.2.b\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to; // step 4\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n\tif (!Object.assign) {\n\t\treturn false;\n\t}\n\t/*\n\t * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n\t * note: this does not detect the bug unless there's 20 characters\n\t */\n\tvar str = 'abcdefghijklmnopqrst';\n\tvar letters = str.split('');\n\tvar map = {};\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tmap[letters[i]] = letters[i];\n\t}\n\tvar obj = Object.assign({}, map);\n\tvar actual = '';\n\tfor (var k in obj) {\n\t\tactual += k;\n\t}\n\treturn str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n\tif (!Object.assign || !Object.preventExtensions) {\n\t\treturn false;\n\t}\n\t/*\n\t * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t * which is 72% slower than our shim, and Firefox 40's native implementation.\n\t */\n\tvar thrower = Object.preventExtensions({ 1: 2 });\n\ttry {\n\t\tObject.assign(thrower, 'xy');\n\t} catch (e) {\n\t\treturn thrower[1] === 'y';\n\t}\n\treturn false;\n};\n\nmodule.exports = function getPolyfill() {\n\tif (!Object.assign) {\n\t\treturn implementation;\n\t}\n\tif (lacksProperEnumerationOrder()) {\n\t\treturn implementation;\n\t}\n\tif (assignHasPendingExceptions()) {\n\t\treturn implementation;\n\t}\n\treturn Object.assign;\n};\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\nconst { ErrorWithCause } = require('./lib/error-with-cause'); // linemod-replace-with: export { ErrorWithCause } from './lib/error-with-cause.mjs';\n\nconst { // linemod-replace-with: export {\n  findCauseByReference,\n  getErrorCause,\n  messageWithCauses,\n  stackWithCauses,\n} = require('./lib/helpers'); // linemod-replace-with: } from './lib/helpers.mjs';\n\nmodule.exports = {      // linemod-remove\n  ErrorWithCause,       // linemod-remove\n  findCauseByReference, // linemod-remove\n  getErrorCause,        // linemod-remove\n  stackWithCauses,      // linemod-remove\n  messageWithCauses,    // linemod-remove\n};                      // linemod-remove\n","'use strict';\n\n/** @template [T=undefined] */\nclass ErrorWithCause extends Error { // linemod-prefix-with: export\n  /**\n   * @param {string} message\n   * @param {{ cause?: T }} options\n   */\n  constructor (message, { cause } = {}) {\n    super(message);\n\n    /** @type {string} */\n    this.name = ErrorWithCause.name;\n    if (cause) {\n      /** @type {T} */\n      this.cause = cause;\n    }\n    /** @type {string} */\n    this.message = message;\n  }\n}\n\nmodule.exports = {      // linemod-remove\n  ErrorWithCause,       // linemod-remove\n};                      // linemod-remove\n","'use strict';\n\n/**\n * @template {Error} T\n * @param {unknown} err\n * @param {new(...args: any[]) => T} reference\n * @returns {T|undefined}\n */\nconst findCauseByReference = (err, reference) => { // linemod-prefix-with: export\n  if (!err || !reference) return;\n  if (!(err instanceof Error)) return;\n  if (\n    !(reference.prototype instanceof Error) &&\n    // @ts-ignore\n    reference !== Error\n  ) return;\n\n  /**\n   * Ensures we don't go circular\n   *\n   * @type {Set<Error>}\n   */\n  const seen = new Set();\n\n  /** @type {Error|undefined} */\n  let currentErr = err;\n\n  while (currentErr && !seen.has(currentErr)) {\n    seen.add(currentErr);\n\n    if (currentErr instanceof reference) {\n      return currentErr;\n    }\n\n    currentErr = getErrorCause(currentErr);\n  }\n};\n\n/**\n * @param {Error|{ cause?: unknown|(()=>err)}} err\n * @returns {Error|undefined}\n */\nconst getErrorCause = (err) => { // linemod-prefix-with: export\n  if (!err || typeof err !== 'object' || !('cause' in err)) {\n    return;\n  }\n\n  // VError / NError style causes\n  if (typeof err.cause === 'function') {\n    const causeResult = err.cause();\n\n    return causeResult instanceof Error\n      ? causeResult\n      : undefined;\n  } else {\n    return err.cause instanceof Error\n      ? err.cause\n      : undefined;\n  }\n};\n\n/**\n * Internal method that keeps a track of which error we have already added, to avoid circular recursion\n *\n * @private\n * @param {Error} err\n * @param {Set<Error>} seen\n * @returns {string}\n */\nconst _stackWithCauses = (err, seen) => {\n  if (!(err instanceof Error)) return '';\n\n  const stack = err.stack || '';\n\n  // Ensure we don't go circular or crazily deep\n  if (seen.has(err)) {\n    return stack + '\\ncauses have become circular...';\n  }\n\n  const cause = getErrorCause(err);\n\n  // TODO: Follow up in https://github.com/nodejs/node/issues/38725#issuecomment-920309092 on how to log stuff\n\n  if (cause) {\n    seen.add(err);\n    return (stack + '\\ncaused by: ' + _stackWithCauses(cause, seen));\n  } else {\n    return stack;\n  }\n};\n\n/**\n * @param {Error} err\n * @returns {string}\n */\nconst stackWithCauses = (err) => _stackWithCauses(err, new Set()); // linemod-prefix-with: export\n\n/**\n * Internal method that keeps a track of which error we have already added, to avoid circular recursion\n *\n * @private\n * @param {Error} err\n * @param {Set<Error>} seen\n * @param {boolean} [skip]\n * @returns {string}\n */\nconst _messageWithCauses = (err, seen, skip) => {\n  if (!(err instanceof Error)) return '';\n\n  const message = skip ? '' : (err.message || '');\n\n  // Ensure we don't go circular or crazily deep\n  if (seen.has(err)) {\n    return message + ': ...';\n  }\n\n  const cause = getErrorCause(err);\n\n  if (cause) {\n    seen.add(err);\n\n    const skipIfVErrorStyleCause = 'cause' in err && typeof err.cause === 'function';\n\n    return (message +\n      (skipIfVErrorStyleCause ? '' : ': ') +\n      _messageWithCauses(cause, seen, skipIfVErrorStyleCause));\n  } else {\n    return message;\n  }\n};\n\n/**\n * @param {Error} err\n * @returns {string}\n */\nconst messageWithCauses = (err) => _messageWithCauses(err, new Set()); // linemod-prefix-with: export\n\nmodule.exports = {      // linemod-remove\n  findCauseByReference, // linemod-remove\n  getErrorCause,        // linemod-remove\n  stackWithCauses,      // linemod-remove\n  messageWithCauses,    // linemod-remove\n};                      // linemod-remove\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = [\n\t'Float32Array',\n\t'Float64Array',\n\t'Int8Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'BigInt64Array',\n\t'BigUint64Array'\n];\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('.').listGetNode} */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\tfor (; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('.').listGet} */\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('.').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('.').ListNode<typeof value>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('.').listHas} */\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @type {WeakMap<object, unknown>} */ var $wm;\n\t/** @type {Map<object, unknown>} */ var $m;\n\t/** @type {import('.').RootNode<unknown>} */ var $o;\n\n\t/** @type {import('.').Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/lib/_stream_readable.js');\nStream.Writable = require('readable-stream/lib/_stream_writable.js');\nStream.Duplex = require('readable-stream/lib/_stream_duplex.js');\nStream.Transform = require('readable-stream/lib/_stream_transform.js');\nStream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');\nStream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')\nStream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictDepth: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key;\n        var val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(String(val));\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))\n                ? []\n                : [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? { __proto__: null } : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n    if (segment) {\n        if (options.strictDepth === true) {\n            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n        }\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? { __proto__: null } : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? { __proto__: null } : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    commaRoundTrip: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    filter: void undefined,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && key && typeof key.value !== 'undefined'\n            ? key.value\n            : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? String(key).replace(/\\./g, '%2E') : String(key);\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (options.skipNulls && value === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            value,\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? { __proto__: null } : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object' && typeof source !== 'function') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if (\n                (options && (options.plainObjects || options.allowPrototypes))\n                || !has.call(Object.prototype, source)\n            ) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, defaultDecoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode/');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bound');\nvar gOPD = require('gopd');\n\n/** @type {(O: object) => string} */\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\n/** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/** @typedef {(receiver: import('.').TypedArray) => string | typeof Uint8Array.prototype.slice.call | typeof Uint8Array.prototype.set.call} Getter */\n/** @type {{ [k in `\\$${import('.').TypedArrayName}`]?: Getter } & { __proto__: null }} */\nvar cache = { __proto__: null };\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n\t\t}\n\t});\n} else {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tvar fn = arr.slice || arr.set;\n\t\tif (fn) {\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(fn);\n\t\t}\n\t});\n}\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\t/** @type {ReturnType<typeof tryAllTypedArrays>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */\n\t\tfunction (getter, typedArray) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tif ('$' + getter(value) === typedArray) {\n\t\t\t\t\t\tfound = $slice(typedArray, 1);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar trySlices = function tryAllSlices(value) {\n\t/** @type {ReturnType<typeof tryAllSlices>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: typeof cache, name: `\\$${import('.').TypedArrayName}`) => void} */ function (getter, name) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tgetter(value);\n\t\t\t\t\tfound = $slice(name, 1);\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\t/** @type {string} */\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\tif ($indexOf(typedArrays, tag) > -1) {\n\t\t\treturn tag;\n\t\t}\n\t\tif (tag !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\t// node < 0.6 hits here on real Typed Arrays\n\t\treturn trySlices(value);\n\t}\n\tif (!gOPD) { return null; } // unknown engine\n\treturn tryTypedArrays(value);\n};\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","\"use strict\";\n/**\n * A `StructFailure` represents a single specific failure in validation.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StructError = void 0;\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const cause = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? cause);\n        if (explanation !== null && explanation !== undefined) {\n            this.cause = cause;\n        }\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\nexports.StructError = StructError;\n//# sourceMappingURL=error.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./error.cjs\"), exports);\n__exportStar(require(\"./struct.cjs\"), exports);\n__exportStar(require(\"./structs/coercions.cjs\"), exports);\n__exportStar(require(\"./structs/refinements.cjs\"), exports);\n__exportStar(require(\"./structs/types.cjs\"), exports);\n__exportStar(require(\"./structs/utilities.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.is = exports.mask = exports.create = exports.assert = exports.Struct = void 0;\nconst error_js_1 = require(\"./error.cjs\");\nconst utils_js_1 = require(\"./utils.cjs\");\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () {\n            /* noop */\n        }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return (0, utils_js_1.toFailures)(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return (0, utils_js_1.toFailures)(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `withCoercion` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\nexports.Struct = Struct;\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param message - An optional message to include in the error.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\nexports.assert = assert;\n/**\n * Create a value with the coercion logic of struct and validate it.\n *\n * @param value - The value to coerce and validate.\n * @param struct - The struct to validate against.\n * @param message - An optional message to include in the error.\n * @returns The coerced and validated value.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\nexports.create = create;\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n *\n * @param value - The value to mask.\n * @param struct - The struct to mask against.\n * @param message - An optional message to include in the error.\n * @returns The masked value.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\nexports.mask = mask;\n/**\n * Check if a value passes a struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @returns `true` if the value passes the struct, `false` otherwise.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\nexports.is = is;\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param options - Optional settings.\n * @param options.coerce - Whether to coerce the value before validating it.\n * @param options.mask - Whether to mask the value before validating it.\n * @param options.message - An optional message to include in the error.\n * @returns A tuple containing the error (if invalid) and the validated value.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = (0, utils_js_1.run)(value, struct, options);\n    const tuple = (0, utils_js_1.shiftIterator)(tuples);\n    if (tuple[0]) {\n        const error = new error_js_1.StructError(tuple[0], function* () {\n            for (const innerTuple of tuples) {\n                if (innerTuple[0]) {\n                    yield innerTuple[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    const validatedValue = tuple[1];\n    return [undefined, validatedValue];\n}\nexports.validate = validate;\n//# sourceMappingURL=struct.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trimmed = exports.defaulted = exports.coerce = void 0;\nconst struct_js_1 = require(\"../struct.cjs\");\nconst utils_js_1 = require(\"../utils.cjs\");\nconst types_js_1 = require(\"./types.cjs\");\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n *\n * @param struct - The struct to augment.\n * @param condition - A struct that the input must pass to be coerced.\n * @param coercer - A function that takes the input and returns the coerced\n * value.\n * @returns A new struct that will coerce its input before validating it.\n */\nfunction coerce(struct, condition, coercer) {\n    return new struct_js_1.Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return (0, struct_js_1.is)(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\nexports.coerce = coerce;\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n *\n * @param struct - The struct to augment.\n * @param fallback - The value to use when the input is `undefined`.\n * @param options - An optional options object.\n * @param options.strict - When `true`, the fallback will only be used when the\n * input is `undefined`. When `false`, the fallback will be used when the input\n * is `undefined` or when the input is a plain object and the fallback is a\n * plain object, and any keys in the fallback are missing from the input.\n * @returns A new struct that will replace `undefined` inputs with a default.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, (0, types_js_1.unknown)(), (value) => {\n        const result = typeof fallback === 'function' ? fallback() : fallback;\n        if (value === undefined) {\n            return result;\n        }\n        if (!options.strict && (0, utils_js_1.isPlainObject)(value) && (0, utils_js_1.isPlainObject)(result)) {\n            const ret = { ...value };\n            let changed = false;\n            for (const key in result) {\n                if (ret[key] === undefined) {\n                    ret[key] = result[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return value;\n    });\n}\nexports.defaulted = defaulted;\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will trim string inputs before validating them.\n */\nfunction trimmed(struct) {\n    return coerce(struct, (0, types_js_1.string)(), (value) => value.trim());\n}\nexports.trimmed = trimmed;\n//# sourceMappingURL=coercions.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.refine = exports.size = exports.pattern = exports.nonempty = exports.min = exports.max = exports.empty = void 0;\nconst struct_js_1 = require(\"../struct.cjs\");\nconst utils_js_1 = require(\"../utils.cjs\");\n/**\n * Ensure that a string, array, map, or set is empty.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will only accept empty values.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nexports.empty = empty;\n/**\n * Get the size of a string, array, map, or set.\n *\n * @param value - The value to measure.\n * @returns The size of the value.\n */\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    return value.length;\n}\n/**\n * Ensure that a number or date is below a threshold.\n *\n * @param struct - The struct to augment.\n * @param threshold - The maximum value that the input can be.\n * @param options - An optional options object.\n * @param options.exclusive - When `true`, the input must be strictly less than\n * the threshold. When `false`, the input must be less than or equal to the\n * threshold.\n * @returns A new struct that will only accept values below the threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                }${threshold} but received \\`${value}\\``;\n    });\n}\nexports.max = max;\n/**\n * Ensure that a number or date is above a threshold.\n *\n * @param struct - The struct to augment.\n * @param threshold - The minimum value that the input can be.\n * @param options - An optional options object.\n * @param options.exclusive - When `true`, the input must be strictly greater\n * than the threshold. When `false`, the input must be greater than or equal to\n * the threshold.\n * @returns A new struct that will only accept values above the threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                }${threshold} but received \\`${value}\\``;\n    });\n}\nexports.min = min;\n/**\n * Ensure that a string, array, map or set is not empty.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will only accept non-empty values.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\nexports.nonempty = nonempty;\n/**\n * Ensure that a string matches a regular expression.\n *\n * @param struct - The struct to augment.\n * @param regexp - The regular expression to match against.\n * @returns A new struct that will only accept strings matching the regular\n * expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\nexports.pattern = pattern;\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length,\n * or time) between `min` and `max`.\n *\n * @param struct - The struct to augment.\n * @param minimum - The minimum size that the input can be.\n * @param maximum - The maximum size that the input can be.\n * @returns A new struct that will only accept values within the given size\n * range.\n */\nfunction size(struct, minimum, maximum = minimum) {\n    const expected = `Expected a ${struct.type}`;\n    const of = minimum === maximum\n        ? `of \\`${minimum}\\``\n        : `between \\`${minimum}\\` and \\`${maximum}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((minimum <= value && value <= maximum) ||\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            const { size } = value;\n            return ((minimum <= size && size <= maximum) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        const { length } = value;\n        return ((minimum <= length && length <= maximum) ||\n            `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n    });\n}\nexports.size = size;\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n *\n * @param struct - The struct to augment.\n * @param name - The name of the refinement.\n * @param refiner - The refiner function.\n * @returns A new struct that will run the refiner function after the existing\n * validation.\n */\nfunction refine(struct, name, refiner) {\n    return new struct_js_1.Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = (0, utils_js_1.toFailures)(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\nexports.refine = refine;\n//# sourceMappingURL=refinements.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unknown = exports.union = exports.type = exports.tuple = exports.string = exports.set = exports.regexp = exports.record = exports.optional = exports.object = exports.number = exports.nullable = exports.never = exports.map = exports.literal = exports.intersection = exports.integer = exports.instance = exports.func = exports.enums = exports.date = exports.boolean = exports.bigint = exports.array = exports.any = void 0;\nconst struct_js_1 = require(\"../struct.cjs\");\nconst utils_js_1 = require(\"../utils.cjs\");\nconst utilities_js_1 = require(\"./utilities.cjs\");\n/**\n * Ensure that any value passes validation.\n *\n * @returns A struct that will always pass validation.\n */\nfunction any() {\n    return (0, utilities_js_1.define)('any', () => true);\n}\nexports.any = any;\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n *\n * @param Element - The struct to validate each element in the array against.\n * @returns A new struct that will only accept arrays of the given type.\n */\nfunction array(Element) {\n    return new struct_js_1.Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [index, arrayValue] of value.entries()) {\n                    yield [index, arrayValue, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.array = array;\n/**\n * Ensure that a value is a bigint.\n *\n * @returns A new struct that will only accept bigints.\n */\nfunction bigint() {\n    return (0, utilities_js_1.define)('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\nexports.bigint = bigint;\n/**\n * Ensure that a value is a boolean.\n *\n * @returns A new struct that will only accept booleans.\n */\nfunction boolean() {\n    return (0, utilities_js_1.define)('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\nexports.boolean = boolean;\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n *\n * @returns A new struct that will only accept valid `Date` objects.\n */\nfunction date() {\n    return (0, utilities_js_1.define)('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${(0, utils_js_1.print)(value)}`);\n    });\n}\nexports.date = date;\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n *\n * @param values - The potential values that the input can be.\n * @returns A new struct that will only accept the given values.\n */\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((value) => (0, utils_js_1.print)(value)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new struct_js_1.Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.enums = enums;\n/**\n * Ensure that a value is a function.\n *\n * @returns A new struct that will only accept functions.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction func() {\n    return (0, utilities_js_1.define)('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${(0, utils_js_1.print)(value)}`);\n    });\n}\nexports.func = func;\n/**\n * Ensure that a value is an instance of a specific class.\n *\n * @param Class - The class that the value must be an instance of.\n * @returns A new struct that will only accept instances of the given class.\n */\nfunction instance(Class) {\n    return (0, utilities_js_1.define)('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${(0, utils_js_1.print)(value)}`);\n    });\n}\nexports.instance = instance;\n/**\n * Ensure that a value is an integer.\n *\n * @returns A new struct that will only accept integers.\n */\nfunction integer() {\n    return (0, utilities_js_1.define)('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${(0, utils_js_1.print)(value)}`);\n    });\n}\nexports.integer = integer;\n/**\n * Ensure that a value matches all of a set of types.\n *\n * @param Structs - The set of structs that the value must match.\n * @returns A new struct that will only accept values that match all of the\n * given structs.\n */\nfunction intersection(Structs) {\n    return new struct_js_1.Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, context) {\n            for (const { entries } of Structs) {\n                yield* entries(value, context);\n            }\n        },\n        *validator(value, context) {\n            for (const { validator } of Structs) {\n                yield* validator(value, context);\n            }\n        },\n        *refiner(value, context) {\n            for (const { refiner } of Structs) {\n                yield* refiner(value, context);\n            }\n        },\n    });\n}\nexports.intersection = intersection;\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n *\n * @param constant - The exact value that the input must be.\n * @returns A new struct that will only accept the exact given value.\n */\nfunction literal(constant) {\n    const description = (0, utils_js_1.print)(constant);\n    const valueType = typeof constant;\n    return new struct_js_1.Struct({\n        type: 'literal',\n        schema: valueType === 'string' ||\n            valueType === 'number' ||\n            valueType === 'boolean'\n            ? constant\n            : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.literal = literal;\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n *\n * @param Key - The struct to validate each key in the map against.\n * @param Value - The struct to validate each value in the map against.\n * @returns A new struct that will only accept `Map` objects.\n */\nfunction map(Key, Value) {\n    return new struct_js_1.Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [mapKey, mapValue] of value.entries()) {\n                    yield [mapKey, mapKey, Key];\n                    yield [mapKey, mapValue, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.map = map;\n/**\n * Ensure that no value ever passes validation.\n *\n * @returns A new struct that will never pass validation.\n */\nfunction never() {\n    return (0, utilities_js_1.define)('never', () => false);\n}\nexports.never = never;\n/**\n * Augment an existing struct to allow `null` values.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will accept `null` values.\n */\nfunction nullable(struct) {\n    return new struct_js_1.Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\nexports.nullable = nullable;\n/**\n * Ensure that a value is a number.\n *\n * @returns A new struct that will only accept numbers.\n */\nfunction number() {\n    return (0, utilities_js_1.define)('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${(0, utils_js_1.print)(value)}`);\n    });\n}\nexports.number = number;\n/**\n * Ensure that a value is an object, that it has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n *\n * @param schema - An object that defines the structure of the object.\n * @returns A new struct that will only accept objects.\n */\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new struct_js_1.Struct({\n        type: 'object',\n        schema: schema ?? null,\n        *entries(value) {\n            if (schema && (0, utils_js_1.isObject)(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return ((0, utils_js_1.isObject)(value) || `Expected an object, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n        coercer(value) {\n            return (0, utils_js_1.isObject)(value) ? { ...value } : value;\n        },\n    });\n}\nexports.object = object;\n/**\n * Augment a struct to allow `undefined` values.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will accept `undefined` values.\n */\nfunction optional(struct) {\n    return new struct_js_1.Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\nexports.optional = optional;\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * @param Key - The struct to validate each key in the record against.\n * @param Value - The struct to validate each value in the record against.\n * @returns A new struct that will only accept objects.\n */\nfunction record(Key, Value) {\n    return new struct_js_1.Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if ((0, utils_js_1.isObject)(value)) {\n                // eslint-disable-next-line guard-for-in\n                for (const objectKey in value) {\n                    const objectValue = value[objectKey];\n                    yield [objectKey, objectKey, Key];\n                    yield [objectKey, objectValue, Value];\n                }\n            }\n        },\n        validator(value) {\n            return ((0, utils_js_1.isObject)(value) || `Expected an object, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.record = record;\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n *\n * @returns A new struct that will only accept `RegExp` objects.\n */\nfunction regexp() {\n    return (0, utilities_js_1.define)('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nexports.regexp = regexp;\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n *\n * @param Element - The struct to validate each element in the set against.\n * @returns A new struct that will only accept `Set` objects.\n */\nfunction set(Element) {\n    return new struct_js_1.Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const setValue of value) {\n                    yield [setValue, setValue, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.set = set;\n/**\n * Ensure that a value is a string.\n *\n * @returns A new struct that will only accept strings.\n */\nfunction string() {\n    return (0, utilities_js_1.define)('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${(0, utils_js_1.print)(value)}`);\n    });\n}\nexports.string = string;\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n *\n * @param Structs - The set of structs that the value must match.\n * @returns A new struct that will only accept tuples of the given types.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new struct_js_1.Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n    });\n}\nexports.tuple = tuple;\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n *\n * @param schema - An object that defines the structure of the object.\n * @returns A new struct that will only accept objects.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new struct_js_1.Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if ((0, utils_js_1.isObject)(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return ((0, utils_js_1.isObject)(value) || `Expected an object, but received: ${(0, utils_js_1.print)(value)}`);\n        },\n        coercer(value) {\n            return (0, utils_js_1.isObject)(value) ? { ...value } : value;\n        },\n    });\n}\nexports.type = type;\n/**\n * Ensure that a value matches one of a set of types.\n *\n * @param Structs - The set of structs that the value must match.\n * @returns A new struct that will only accept values that match one of the\n * given structs.\n */\nfunction union(Structs) {\n    const description = Structs.map((struct) => struct.type).join(' | ');\n    return new struct_js_1.Struct({\n        type: 'union',\n        schema: null,\n        coercer(value) {\n            for (const InnerStruct of Structs) {\n                const [error, coerced] = InnerStruct.validate(value, { coerce: true });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const InnerStruct of Structs) {\n                const [...tuples] = (0, utils_js_1.run)(value, InnerStruct, ctx);\n                const [first] = tuples;\n                if (!first?.[0]) {\n                    return [];\n                }\n                for (const [failure] of tuples) {\n                    if (failure) {\n                        failures.push(failure);\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${(0, utils_js_1.print)(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\nexports.union = union;\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n *\n * @returns A struct that will always pass validation.\n */\nfunction unknown() {\n    return (0, utilities_js_1.define)('unknown', () => true);\n}\nexports.unknown = unknown;\n//# sourceMappingURL=types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pick = exports.partial = exports.omit = exports.lazy = exports.dynamic = exports.deprecated = exports.define = exports.assign = void 0;\nconst struct_js_1 = require(\"../struct.cjs\");\nconst types_js_1 = require(\"./types.cjs\");\n/**\n * Create a new struct that combines the properties from multiple object or type\n * structs. Its return type will match the first parameter's type.\n *\n * @param Structs - The structs to combine.\n * @returns A new struct that combines the properties of the input structs.\n */\nfunction assign(...Structs) {\n    const isType = Structs[0]?.type === 'type';\n    const schemas = Structs.map(({ schema }) => schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? (0, types_js_1.type)(schema) : (0, types_js_1.object)(schema);\n}\nexports.assign = assign;\n/**\n * Define a new struct type with a custom validation function.\n *\n * @param name - The name of the struct type.\n * @param validator - The validation function.\n * @returns A new struct type.\n */\nfunction define(name, validator) {\n    return new struct_js_1.Struct({ type: name, schema: null, validator });\n}\nexports.define = define;\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n *\n * @param struct - The struct to augment.\n * @param log - The function to call when the value is not `undefined`.\n * @returns A new struct that will only accept `undefined` or values that pass\n * the input struct.\n */\nfunction deprecated(struct, log) {\n    return new struct_js_1.Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            log(value, ctx);\n            return struct.validator(value, ctx);\n        },\n    });\n}\nexports.deprecated = deprecated;\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n *\n * @param fn - The callback to create the struct.\n * @returns A new struct with dynamic validation logic.\n */\nfunction dynamic(fn) {\n    return new struct_js_1.Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\nexports.dynamic = dynamic;\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n *\n * @param fn - The callback to create the struct.\n * @returns A new struct with lazily evaluated validation logic.\n */\nfunction lazy(fn) {\n    let struct;\n    return new struct_js_1.Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\nexports.lazy = lazy;\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n *\n * @param struct - The struct to augment.\n * @param keys - The keys to omit.\n * @returns A new struct that will not accept the input keys.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return (0, types_js_1.type)(subschema);\n        default:\n            return (0, types_js_1.object)(subschema);\n    }\n}\nexports.omit = omit;\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will accept the input keys as `undefined`.\n */\nfunction partial(struct) {\n    const isStruct = struct instanceof struct_js_1.Struct;\n    const schema = isStruct ? { ...struct.schema } : { ...struct };\n    // eslint-disable-next-line guard-for-in\n    for (const key in schema) {\n        schema[key] = (0, types_js_1.optional)(schema[key]);\n    }\n    if (isStruct && struct.type === 'type') {\n        return (0, types_js_1.type)(schema);\n    }\n    return (0, types_js_1.object)(schema);\n}\nexports.partial = partial;\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n *\n * @param struct - The struct to augment.\n * @param keys - The keys to pick.\n * @returns A new struct that will only accept the input keys.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return (0, types_js_1.type)(subschema);\n        default:\n            return (0, types_js_1.object)(subschema);\n    }\n}\nexports.pick = pick;\n//# sourceMappingURL=utilities.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.run = exports.toFailures = exports.toFailure = exports.shiftIterator = exports.print = exports.isPlainObject = exports.isObject = void 0;\n/**\n * Check if a value is an iterator.\n *\n * @param value - The value to check.\n * @returns Whether the value is an iterator.\n */\nfunction isIterable(value) {\n    return isObject(value) && typeof value[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n *\n * @param value - The value to check.\n * @returns Whether the value is a plain object.\n */\nfunction isObject(value) {\n    return typeof value === 'object' && value !== null;\n}\nexports.isObject = isObject;\n/**\n * Check if a value is a plain object.\n *\n * @param value - The value to check.\n * @returns Whether the value is a plain object.\n */\nfunction isPlainObject(value) {\n    if (Object.prototype.toString.call(value) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.prototype;\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Return a value as a printable string.\n *\n * @param value - The value to print.\n * @returns The value as a string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\nexports.print = print;\n/**\n * Shift (remove and return) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n *\n * @param input - The iterator to shift.\n * @returns The first value of the iterator, or `undefined` if the iterator is\n * empty.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\nexports.shiftIterator = shiftIterator;\n/**\n * Convert a single validation result to a failure.\n *\n * @param result - The result to convert.\n * @param context - The context of the validation.\n * @param struct - The struct being validated.\n * @param value - The value being validated.\n * @returns A failure if the result is a failure, or `undefined` if the result\n * is a success.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return undefined;\n    }\n    else if (result === false) {\n        // eslint-disable-next-line no-param-reassign\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        // eslint-disable-next-line no-param-reassign\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\nexports.toFailure = toFailure;\n/**\n * Convert a validation result to an iterable of failures.\n *\n * @param result - The result to convert.\n * @param context - The context of the validation.\n * @param struct - The struct being validated.\n * @param value - The value being validated.\n * @yields The failures.\n * @returns An iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        // eslint-disable-next-line no-param-reassign\n        result = [result];\n    }\n    for (const validationResult of result) {\n        const failure = toFailure(validationResult, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\nexports.toFailures = toFailures;\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n *\n * @param value - The value to check.\n * @param struct - The struct to check against.\n * @param options - Optional settings.\n * @param options.path - The path to the value in the input data.\n * @param options.branch - The branch of the value in the input data.\n * @param options.coerce - Whether to coerce the value before validating it.\n * @param options.mask - Whether to mask the value before validating it.\n * @param options.message - An optional message to include in the error.\n * @yields An iterator of failures or success.\n * @returns An iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const context = { path, branch };\n    if (coerce) {\n        // eslint-disable-next-line no-param-reassign\n        value = struct.coercer(value, context);\n        if (mask &&\n            struct.type !== 'type' &&\n            isObject(struct.schema) &&\n            isObject(value) &&\n            !Array.isArray(value)) {\n            for (const key in value) {\n                if (struct.schema[key] === undefined) {\n                    delete value[key];\n                }\n            }\n        }\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, context)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    // eslint-disable-next-line prefer-const\n    for (let [innerKey, innerValue, innerStruct] of struct.entries(value, context)) {\n        const iterable = run(innerValue, innerStruct, {\n            path: innerKey === undefined ? path : [...path, innerKey],\n            branch: innerKey === undefined ? branch : [...branch, innerValue],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const result of iterable) {\n            if (result[0]) {\n                status =\n                    result[0].refinement === null || result[0].refinement === undefined\n                        ? 'not_valid'\n                        : 'not_refined';\n                yield [result[0], undefined];\n            }\n            else if (coerce) {\n                innerValue = result[1];\n                if (innerKey === undefined) {\n                    // eslint-disable-next-line no-param-reassign\n                    value = innerValue;\n                }\n                else if (value instanceof Map) {\n                    value.set(innerKey, innerValue);\n                }\n                else if (value instanceof Set) {\n                    value.add(innerValue);\n                }\n                else if (isObject(value)) {\n                    if (innerValue !== undefined || innerKey in value) {\n                        value[innerKey] = innerValue;\n                    }\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, context)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\nexports.run = run;\n//# sourceMappingURL=utils.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertExhaustive = exports.assertStruct = exports.assert = exports.AssertionError = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst errors_1 = require(\"./errors.cjs\");\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(fn) {\n    /* istanbul ignore next */\n    return Boolean(typeof fn?.prototype?.constructor?.name === 'string');\n}\n/**\n * Attempts to obtain the message from a possible error object. If it is\n * possible to do so, any trailing period will be removed from the message;\n * otherwise an empty string is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The message without any trailing period if `error` is an object\n * with a `message` property; the string version of `error` without any trailing\n * period if it is not `undefined` or `null`; otherwise an empty string.\n */\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n    // We'll add our own period.\n    return (0, errors_1.getErrorMessage)(error).replace(/\\.$/u, '');\n}\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper, message) {\n    if (isConstructable(ErrorWrapper)) {\n        return new ErrorWrapper({\n            message,\n        });\n    }\n    return ErrorWrapper({\n        message,\n    });\n}\n/**\n * The default error class that is thrown if an assertion fails.\n */\nclass AssertionError extends Error {\n    constructor(options) {\n        super(options.message);\n        this.code = 'ERR_ASSERTION';\n    }\n}\nexports.AssertionError = AssertionError;\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nfunction assert(value, message = 'Assertion failed.', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    if (!value) {\n        if (message instanceof Error) {\n            throw message;\n        }\n        throw getError(ErrorWrapper, message);\n    }\n}\nexports.assert = assert;\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nfunction assertStruct(value, struct, errorPrefix = 'Assertion failed', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    try {\n        (0, superstruct_1.assert)(value, struct);\n    }\n    catch (error) {\n        throw getError(ErrorWrapper, `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`);\n    }\n}\nexports.assertStruct = assertStruct;\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nfunction assertExhaustive(_object) {\n    throw new Error('Invalid branch reached. Should be detected during compilation.');\n}\nexports.assertExhaustive = assertExhaustive;\n//# sourceMappingURL=assert.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64 = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nconst base64 = (struct, options = {}) => {\n    const paddingRequired = options.paddingRequired ?? false;\n    const characterSet = options.characterSet ?? 'base64';\n    let letters;\n    if (characterSet === 'base64') {\n        letters = String.raw `[A-Za-z0-9+\\/]`;\n    }\n    else {\n        (0, assert_1.assert)(characterSet === 'base64url');\n        letters = String.raw `[-_A-Za-z0-9]`;\n    }\n    let re;\n    if (paddingRequired) {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    else {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    return (0, superstruct_1.pattern)(struct, re);\n};\nexports.base64 = base64;\n//# sourceMappingURL=base64.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDataView = exports.concatBytes = exports.valueToBytes = exports.base64ToBytes = exports.stringToBytes = exports.numberToBytes = exports.signedBigIntToBytes = exports.bigIntToBytes = exports.hexToBytes = exports.bytesToBase64 = exports.bytesToString = exports.bytesToNumber = exports.bytesToSignedBigInt = exports.bytesToBigInt = exports.bytesToHex = exports.assertIsBytes = exports.isBytes = void 0;\nconst base_1 = require(\"@scure/base\");\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder() {\n    // To avoid issues with tree shaking, we need to use a function to return the\n    // array. This is because the array is only used in the `bytesToHex` function\n    // and if we were to use a global variable, the array might be removed by the\n    // tree shaker.\n    const lookupTable = [];\n    return () => {\n        if (lookupTable.length === 0) {\n            for (let i = 0; i < 256; i++) {\n                lookupTable.push(i.toString(16).padStart(2, '0'));\n            }\n        }\n        return lookupTable;\n    };\n}\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nfunction isBytes(value) {\n    return value instanceof Uint8Array;\n}\nexports.isBytes = isBytes;\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nfunction assertIsBytes(value) {\n    (0, assert_1.assert)(isBytes(value), 'Value must be a Uint8Array.');\n}\nexports.assertIsBytes = assertIsBytes;\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nfunction bytesToHex(bytes) {\n    assertIsBytes(bytes);\n    if (bytes.length === 0) {\n        return '0x';\n    }\n    const lookupTable = getPrecomputedHexValues();\n    const hexadecimal = new Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hexadecimal[i] = lookupTable[bytes[i]];\n    }\n    return (0, hex_1.add0x)(hexadecimal.join(''));\n}\nexports.bytesToHex = bytesToHex;\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nfunction bytesToBigInt(bytes) {\n    assertIsBytes(bytes);\n    const hexadecimal = bytesToHex(bytes);\n    return BigInt(hexadecimal);\n}\nexports.bytesToBigInt = bytesToBigInt;\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nfunction bytesToSignedBigInt(bytes) {\n    assertIsBytes(bytes);\n    let value = BigInt(0);\n    for (const byte of bytes) {\n        // eslint-disable-next-line no-bitwise\n        value = (value << BigInt(8)) + BigInt(byte);\n    }\n    return BigInt.asIntN(bytes.length * 8, value);\n}\nexports.bytesToSignedBigInt = bytesToSignedBigInt;\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nfunction bytesToNumber(bytes) {\n    assertIsBytes(bytes);\n    const bigint = bytesToBigInt(bytes);\n    (0, assert_1.assert)(bigint <= BigInt(Number.MAX_SAFE_INTEGER), 'Number is not a safe integer. Use `bytesToBigInt` instead.');\n    return Number(bigint);\n}\nexports.bytesToNumber = bytesToNumber;\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nfunction bytesToString(bytes) {\n    assertIsBytes(bytes);\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToString = bytesToString;\n/**\n * Convert a `Uint8Array` to a base64 encoded string.\n *\n * @param bytes - The bytes to convert to a base64 encoded string.\n * @returns The base64 encoded string.\n */\nfunction bytesToBase64(bytes) {\n    assertIsBytes(bytes);\n    return base_1.base64.encode(bytes);\n}\nexports.bytesToBase64 = bytesToBase64;\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction hexToBytes(value) {\n    // \"0x\" is often used as empty byte array.\n    if (value?.toLowerCase?.() === '0x') {\n        return new Uint8Array();\n    }\n    (0, hex_1.assertIsHexString)(value);\n    // Remove the `0x` prefix if it exists, and pad the string to have an even\n    // number of characters.\n    const strippedValue = (0, hex_1.remove0x)(value).toLowerCase();\n    const normalizedValue = strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n    const bytes = new Uint8Array(normalizedValue.length / 2);\n    for (let i = 0; i < bytes.length; i++) {\n        // While this is not the prettiest way to convert a hexadecimal string to a\n        // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n        // character.\n        const c1 = normalizedValue.charCodeAt(i * 2);\n        const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n        const n1 = c1 -\n            (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        const n2 = c2 -\n            (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        bytes[i] = n1 * 16 + n2;\n    }\n    return bytes;\n}\nexports.hexToBytes = hexToBytes;\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction bigIntToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= BigInt(0), 'Value must be a non-negative bigint.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.bigIntToBytes = bigIntToBytes;\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value, bytes) {\n    (0, assert_1.assert)(bytes > 0);\n    /* eslint-disable no-bitwise */\n    const mask = value >> BigInt(31);\n    return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n    /* eslint-enable no-bitwise */\n}\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nfunction signedBigIntToBytes(value, byteLength) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(typeof byteLength === 'number', 'Byte length must be a number.');\n    (0, assert_1.assert)(byteLength > 0, 'Byte length must be greater than 0.');\n    (0, assert_1.assert)(bigIntFits(value, byteLength), 'Byte length is too small to represent the given value.');\n    // ESLint doesn't like mutating function parameters, so to avoid having to\n    // disable the rule, we create a new variable.\n    let numberValue = value;\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = Number(BigInt.asUintN(8, numberValue));\n        // eslint-disable-next-line no-bitwise\n        numberValue >>= BigInt(8);\n    }\n    return bytes.reverse();\n}\nexports.signedBigIntToBytes = signedBigIntToBytes;\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nfunction numberToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToBytes` instead.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.numberToBytes = numberToBytes;\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction stringToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return new TextEncoder().encode(value);\n}\nexports.stringToBytes = stringToBytes;\n/**\n * Convert a base64 encoded string to a `Uint8Array`.\n *\n * @param value - The base64 encoded string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction base64ToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return base_1.base64.decode(value);\n}\nexports.base64ToBytes = base64ToBytes;\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction valueToBytes(value) {\n    if (typeof value === 'bigint') {\n        return bigIntToBytes(value);\n    }\n    if (typeof value === 'number') {\n        return numberToBytes(value);\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('0x')) {\n            return hexToBytes(value);\n        }\n        return stringToBytes(value);\n    }\n    if (isBytes(value)) {\n        return value;\n    }\n    throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\nexports.valueToBytes = valueToBytes;\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nfunction concatBytes(values) {\n    const normalizedValues = new Array(values.length);\n    let byteLength = 0;\n    for (let i = 0; i < values.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = valueToBytes(values[i]);\n        normalizedValues[i] = value;\n        byteLength += value.length;\n    }\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n        // While we could simply spread the values into an array and use\n        // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n        bytes.set(normalizedValues[i], offset);\n        offset += normalizedValues[i].length;\n    }\n    return bytes;\n}\nexports.concatBytes = concatBytes;\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nfunction createDataView(bytes) {\n    // To maintain compatibility with Node.js, we need to check if the bytes are\n    // a Buffer. If so, we need to slice the buffer to get the underlying\n    // ArrayBuffer.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n        const buffer = bytes.buffer.slice(bytes.byteOffset, bytes.byteOffset + bytes.byteLength);\n        return new DataView(buffer);\n    }\n    return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\nexports.createDataView = createDataView;\n//# sourceMappingURL=bytes.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCaipChainId = exports.parseCaipAccountId = exports.parseCaipChainId = exports.isCaipAssetId = exports.isCaipAssetType = exports.isCaipAccountAddress = exports.isCaipAccountId = exports.isCaipReference = exports.isCaipNamespace = exports.isCaipChainId = exports.KnownCaipNamespace = exports.CaipAssetIdStruct = exports.CaipAssetTypeStruct = exports.CaipAccountAddressStruct = exports.CaipAccountIdStruct = exports.CaipReferenceStruct = exports.CaipNamespaceStruct = exports.CaipChainIdStruct = exports.CAIP_ASSET_ID_REGEX = exports.CAIP_ASSET_TYPE_REGEX = exports.CAIP_ACCOUNT_ADDRESS_REGEX = exports.CAIP_ACCOUNT_ID_REGEX = exports.CAIP_REFERENCE_REGEX = exports.CAIP_NAMESPACE_REGEX = exports.CAIP_CHAIN_ID_REGEX = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nexports.CAIP_CHAIN_ID_REGEX = /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\nexports.CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\nexports.CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\nexports.CAIP_ACCOUNT_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\nexports.CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\nexports.CAIP_ASSET_TYPE_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})$/u;\nexports.CAIP_ASSET_ID_REGEX = /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})\\/(?<tokenId>[-.%a-zA-Z0-9]{1,78})$/u;\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexports.CaipChainIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_CHAIN_ID_REGEX);\n/**\n * A CAIP-2 namespace, i.e., the first part of a CAIP chain ID.\n */\nexports.CaipNamespaceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_NAMESPACE_REGEX);\n/**\n * A CAIP-2 reference, i.e., the second part of a CAIP chain ID.\n */\nexports.CaipReferenceStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_REFERENCE_REGEX);\n/**\n * A CAIP-10 account ID, i.e., a human-readable namespace, reference, and account address.\n */\nexports.CaipAccountIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ID_REGEX);\n/**\n * A CAIP-10 account address, i.e., the third part of the CAIP account ID.\n */\nexports.CaipAccountAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ACCOUNT_ADDRESS_REGEX);\n/**\n * A CAIP-19 asset type identifier, i.e., a human-readable type of asset identifier.\n */\nexports.CaipAssetTypeStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ASSET_TYPE_REGEX);\n/**\n * A CAIP-19 asset ID identifier, i.e., a human-readable type of asset ID.\n */\nexports.CaipAssetIdStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), exports.CAIP_ASSET_ID_REGEX);\n/** Known CAIP namespaces. */\nvar KnownCaipNamespace;\n(function (KnownCaipNamespace) {\n    /** BIP-122 (Bitcoin) compatible chains. */\n    KnownCaipNamespace[\"Bip122\"] = \"bip122\";\n    /** Solana compatible chains */\n    KnownCaipNamespace[\"Solana\"] = \"solana\";\n    /** EIP-155 compatible chains. */\n    KnownCaipNamespace[\"Eip155\"] = \"eip155\";\n    KnownCaipNamespace[\"Wallet\"] = \"wallet\";\n})(KnownCaipNamespace = exports.KnownCaipNamespace || (exports.KnownCaipNamespace = {}));\n/**\n * Check if the given value is a {@link CaipChainId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipChainId}.\n */\nfunction isCaipChainId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipChainIdStruct);\n}\nexports.isCaipChainId = isCaipChainId;\n/**\n * Check if the given value is a {@link CaipNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipNamespace}.\n */\nfunction isCaipNamespace(value) {\n    return (0, superstruct_1.is)(value, exports.CaipNamespaceStruct);\n}\nexports.isCaipNamespace = isCaipNamespace;\n/**\n * Check if the given value is a {@link CaipReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipReference}.\n */\nfunction isCaipReference(value) {\n    return (0, superstruct_1.is)(value, exports.CaipReferenceStruct);\n}\nexports.isCaipReference = isCaipReference;\n/**\n * Check if the given value is a {@link CaipAccountId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAccountId}.\n */\nfunction isCaipAccountId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountIdStruct);\n}\nexports.isCaipAccountId = isCaipAccountId;\n/**\n * Check if a value is a {@link CaipAccountAddress}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link CaipAccountAddress}.\n */\nfunction isCaipAccountAddress(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAccountAddressStruct);\n}\nexports.isCaipAccountAddress = isCaipAccountAddress;\n/**\n * Check if the given value is a {@link CaipAssetType}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAssetType}.\n */\nfunction isCaipAssetType(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAssetTypeStruct);\n}\nexports.isCaipAssetType = isCaipAssetType;\n/**\n * Check if the given value is a {@link CaipAssetId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAssetId}.\n */\nfunction isCaipAssetId(value) {\n    return (0, superstruct_1.is)(value, exports.CaipAssetIdStruct);\n}\nexports.isCaipAssetId = isCaipAssetId;\n/**\n * Parse a CAIP-2 chain ID to an object containing the namespace and reference.\n * This validates the CAIP-2 chain ID before parsing it.\n *\n * @param caipChainId - The CAIP-2 chain ID to validate and parse.\n * @returns The parsed CAIP-2 chain ID.\n */\nfunction parseCaipChainId(caipChainId) {\n    const match = exports.CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP chain ID.');\n    }\n    return {\n        namespace: match.groups.namespace,\n        reference: match.groups.reference,\n    };\n}\nexports.parseCaipChainId = parseCaipChainId;\n/**\n * Parse an CAIP-10 account ID to an object containing the chain ID, parsed chain ID, and account address.\n * This validates the CAIP-10 account ID before parsing it.\n *\n * @param caipAccountId - The CAIP-10 account ID to validate and parse.\n * @returns The parsed CAIP-10 account ID.\n */\nfunction parseCaipAccountId(caipAccountId) {\n    const match = exports.CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n    if (!match?.groups) {\n        throw new Error('Invalid CAIP account ID.');\n    }\n    return {\n        address: match.groups.accountAddress,\n        chainId: match.groups.chainId,\n        chain: {\n            namespace: match.groups.namespace,\n            reference: match.groups.reference,\n        },\n    };\n}\nexports.parseCaipAccountId = parseCaipAccountId;\n/**\n * Chain ID as defined per the CAIP-2\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md}.\n *\n * It defines a way to uniquely identify any blockchain in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identify of a blockchain within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs does not comply with the CAIP-2\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#syntax}.\n * @returns A CAIP chain ID.\n */\nfunction toCaipChainId(namespace, reference) {\n    if (!isCaipNamespace(namespace)) {\n        throw new Error(`Invalid \"namespace\", must match: ${exports.CAIP_NAMESPACE_REGEX.toString()}`);\n    }\n    if (!isCaipReference(reference)) {\n        throw new Error(`Invalid \"reference\", must match: ${exports.CAIP_REFERENCE_REGEX.toString()}`);\n    }\n    return `${namespace}:${reference}`;\n}\nexports.toCaipChainId = toCaipChainId;\n//# sourceMappingURL=caip-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst base64_1 = require(\"./base64.cjs\");\nexports.ChecksumStruct = (0, superstruct_1.size)((0, base64_1.base64)((0, superstruct_1.string)(), { paddingRequired: true }), 44, 44);\n//# sourceMappingURL=checksum.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHex = exports.createBytes = exports.createBigInt = exports.createNumber = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\nconst NumberLikeStruct = (0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.bigint)(), (0, superstruct_1.string)(), hex_1.StrictHexStruct]);\nconst NumberCoercer = (0, superstruct_1.coerce)((0, superstruct_1.number)(), NumberLikeStruct, Number);\nconst BigIntCoercer = (0, superstruct_1.coerce)((0, superstruct_1.bigint)(), NumberLikeStruct, BigInt);\nconst BytesLikeStruct = (0, superstruct_1.union)([hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]);\nconst BytesCoercer = (0, superstruct_1.coerce)((0, superstruct_1.instance)(Uint8Array), (0, superstruct_1.union)([hex_1.StrictHexStruct]), bytes_1.hexToBytes);\nconst HexCoercer = (0, superstruct_1.coerce)(hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array), bytes_1.bytesToHex);\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nfunction createNumber(value) {\n    try {\n        const result = (0, superstruct_1.create)(value, NumberCoercer);\n        (0, assert_1.assert)(Number.isFinite(result), `Expected a number-like value, got \"${value}\".`);\n        return result;\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${value}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createNumber = createNumber;\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nfunction createBigInt(value) {\n    try {\n        // The `BigInt` constructor throws if the value is not a number-like value.\n        // There is no need to validate the value manually.\n        return (0, superstruct_1.create)(value, BigIntCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBigInt = createBigInt;\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nfunction createBytes(value) {\n    if (typeof value === 'string' && value.toLowerCase() === '0x') {\n        return new Uint8Array();\n    }\n    try {\n        return (0, superstruct_1.create)(value, BytesCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBytes = createBytes;\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nfunction createHex(value) {\n    if ((value instanceof Uint8Array && value.length === 0) ||\n        (typeof value === 'string' && value.toLowerCase() === '0x')) {\n        return '0x';\n    }\n    try {\n        return (0, superstruct_1.create)(value, HexCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createHex = createHex;\n//# sourceMappingURL=coercers.cjs.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _FrozenMap_map, _FrozenSet_set;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrozenSet = exports.FrozenMap = void 0;\n/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").size;\n    }\n    [(_FrozenMap_map = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\")[Symbol.iterator]();\n    }\n    constructor(entries) {\n        _FrozenMap_map.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenMap_map, new Map(entries), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner map.\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").forEach((value, key, _map) => callbackfn.call(thisArg, value, key, this));\n    }\n    get(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").get(key);\n    }\n    has(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").has(key);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").values();\n    }\n    toString() {\n        return `FrozenMap(${this.size}) {${this.size > 0\n            ? ` ${[...this.entries()]\n                .map(([key, value]) => `${String(key)} => ${String(value)}`)\n                .join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenMap = FrozenMap;\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet {\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").size;\n    }\n    [(_FrozenSet_set = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\")[Symbol.iterator]();\n    }\n    constructor(values) {\n        _FrozenSet_set.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenSet_set, new Set(values), \"f\");\n        Object.freeze(this);\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner set.\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").forEach((value, value2, _set) => callbackfn.call(thisArg, value, value2, this));\n    }\n    has(value) {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").has(value);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").values();\n    }\n    toString() {\n        return `FrozenSet(${this.size}) {${this.size > 0\n            ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenSet = FrozenSet;\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n//# sourceMappingURL=collections.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=encryption-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapError = exports.getErrorMessage = exports.isErrorWithStack = exports.isErrorWithMessage = exports.isErrorWithCode = void 0;\nconst pony_cause_1 = require(\"pony-cause\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * Type guard for determining whether the given value is an instance of Error.\n * For errors generated via `fs.promises`, `error instanceof Error` won't work,\n * so we have to come up with another way of testing.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isError(error) {\n    return (error instanceof Error ||\n        ((0, misc_1.isObject)(error) && error.constructor.name === 'Error'));\n}\n/**\n * Type guard for determining whether the given value is an error object with a\n * `code` property such as the type of error that Node throws for filesystem\n * operations, etc.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithCode(error) {\n    return typeof error === 'object' && error !== null && 'code' in error;\n}\nexports.isErrorWithCode = isErrorWithCode;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `message` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithMessage(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\nexports.isErrorWithMessage = isErrorWithMessage;\n/**\n * Type guard for determining whether the given value is an error object with a\n * `stack` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isErrorWithStack(error) {\n    return typeof error === 'object' && error !== null && 'stack' in error;\n}\nexports.isErrorWithStack = isErrorWithStack;\n/**\n * Attempts to obtain the message from a possible error object, defaulting to an\n * empty string if it is impossible to do so.\n *\n * @param error - The possible error to get the message from.\n * @returns The message if `error` is an object with a `message` property;\n * the string version of `error` if it is not `undefined` or `null`; otherwise\n * an empty string.\n */\nfunction getErrorMessage(error) {\n    if (isErrorWithMessage(error) && typeof error.message === 'string') {\n        return error.message;\n    }\n    if ((0, misc_1.isNullOrUndefined)(error)) {\n        return '';\n    }\n    return String(error);\n}\nexports.getErrorMessage = getErrorMessage;\n/**\n * Builds a new error object, linking it to the original error via the `cause`\n * property if it is an Error.\n *\n * This function is useful to reframe error messages in general, but is\n * _critical_ when interacting with any of Node's filesystem functions as\n * provided via `fs.promises`, because these do not produce stack traces in the\n * case of an I/O error (see <https://github.com/nodejs/node/issues/30944>).\n *\n * @param originalError - The error to be wrapped (something throwable).\n * @param message - The desired message of the new error.\n * @returns A new error object.\n */\nfunction wrapError(originalError, message) {\n    if (isError(originalError)) {\n        let error;\n        if (Error.length === 2) {\n            // for some reason `tsserver` is not complaining that the\n            // Error constructor doesn't support a second argument in the editor,\n            // but `tsc` does. Error causes are not supported by our current tsc target (ES2020, we need ES2022 to make this work)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new Error(message, { cause: originalError });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            error = new pony_cause_1.ErrorWithCause(message, { cause: originalError });\n        }\n        if (isErrorWithCode(originalError)) {\n            error.code = originalError.code;\n        }\n        return error;\n    }\n    if (message.length > 0) {\n        return new Error(`${String(originalError)}: ${message}`);\n    }\n    return new Error(String(originalError));\n}\nexports.wrapError = wrapError;\n//# sourceMappingURL=errors.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remove0x = exports.add0x = exports.isValidChecksumAddress = exports.getChecksumAddress = exports.isValidHexAddress = exports.assertIsStrictHexString = exports.assertIsHexString = exports.isStrictHexString = exports.isHexString = exports.HexChecksumAddressStruct = exports.HexAddressStruct = exports.StrictHexStruct = exports.HexStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst assert_1 = require(\"./assert.cjs\");\nconst bytes_1 = require(\"./bytes.cjs\");\nexports.HexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^(?:0x)?[0-9a-f]+$/iu);\nexports.StrictHexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]+$/iu);\nexports.HexAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]{40}$/u);\nexports.HexChecksumAddressStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-fA-F]{40}$/u);\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isHexString(value) {\n    return (0, superstruct_1.is)(value, exports.HexStruct);\n}\nexports.isHexString = isHexString;\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isStrictHexString(value) {\n    return (0, superstruct_1.is)(value, exports.StrictHexStruct);\n}\nexports.isStrictHexString = isStrictHexString;\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsHexString(value) {\n    (0, assert_1.assert)(isHexString(value), 'Value must be a hexadecimal string.');\n}\nexports.assertIsHexString = assertIsHexString;\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsStrictHexString(value) {\n    (0, assert_1.assert)(isStrictHexString(value), 'Value must be a hexadecimal string, starting with \"0x\".');\n}\nexports.assertIsStrictHexString = assertIsStrictHexString;\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nfunction isValidHexAddress(possibleAddress) {\n    return ((0, superstruct_1.is)(possibleAddress, exports.HexAddressStruct) ||\n        isValidChecksumAddress(possibleAddress));\n}\nexports.isValidHexAddress = isValidHexAddress;\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n *\n * @param address - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nfunction getChecksumAddress(address) {\n    (0, assert_1.assert)((0, superstruct_1.is)(address, exports.HexChecksumAddressStruct), 'Invalid hex address.');\n    const unPrefixed = remove0x(address.toLowerCase());\n    const unPrefixedHash = remove0x((0, bytes_1.bytesToHex)((0, sha3_1.keccak_256)(unPrefixed)));\n    return `0x${unPrefixed\n        .split('')\n        .map((character, nibbleIndex) => {\n        const hashCharacter = unPrefixedHash[nibbleIndex];\n        (0, assert_1.assert)((0, superstruct_1.is)(hashCharacter, (0, superstruct_1.string)()), 'Hash shorter than address.');\n        return parseInt(hashCharacter, 16) > 7\n            ? character.toUpperCase()\n            : character;\n    })\n        .join('')}`;\n}\nexports.getChecksumAddress = getChecksumAddress;\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nfunction isValidChecksumAddress(possibleChecksum) {\n    if (!(0, superstruct_1.is)(possibleChecksum, exports.HexChecksumAddressStruct)) {\n        return false;\n    }\n    return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nfunction add0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x')) {\n        return hexadecimal;\n    }\n    if (hexadecimal.startsWith('0X')) {\n        return `0x${hexadecimal.substring(2)}`;\n    }\n    return `0x${hexadecimal}`;\n}\nexports.add0x = add0x;\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nfunction remove0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n        return hexadecimal.substring(2);\n    }\n    return hexadecimal;\n}\nexports.remove0x = remove0x;\n//# sourceMappingURL=hex.cjs.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./assert.cjs\"), exports);\n__exportStar(require(\"./base64.cjs\"), exports);\n__exportStar(require(\"./bytes.cjs\"), exports);\n__exportStar(require(\"./caip-types.cjs\"), exports);\n__exportStar(require(\"./checksum.cjs\"), exports);\n__exportStar(require(\"./coercers.cjs\"), exports);\n__exportStar(require(\"./collections.cjs\"), exports);\n__exportStar(require(\"./encryption-types.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./hex.cjs\"), exports);\n__exportStar(require(\"./json.cjs\"), exports);\n__exportStar(require(\"./keyring.cjs\"), exports);\n__exportStar(require(\"./logging.cjs\"), exports);\n__exportStar(require(\"./misc.cjs\"), exports);\n__exportStar(require(\"./number.cjs\"), exports);\n__exportStar(require(\"./opaque.cjs\"), exports);\n__exportStar(require(\"./promise.cjs\"), exports);\n__exportStar(require(\"./time.cjs\"), exports);\n__exportStar(require(\"./transaction-types.cjs\"), exports);\n__exportStar(require(\"./versions.cjs\"), exports);\n//# sourceMappingURL=index.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonRpcIdValidator = exports.assertIsJsonRpcError = exports.isJsonRpcError = exports.assertIsJsonRpcFailure = exports.isJsonRpcFailure = exports.assertIsJsonRpcSuccess = exports.isJsonRpcSuccess = exports.assertIsJsonRpcResponse = exports.isJsonRpcResponse = exports.assertIsPendingJsonRpcResponse = exports.isPendingJsonRpcResponse = exports.JsonRpcResponseStruct = exports.JsonRpcFailureStruct = exports.JsonRpcSuccessStruct = exports.PendingJsonRpcResponseStruct = exports.assertIsJsonRpcRequest = exports.isJsonRpcRequest = exports.assertIsJsonRpcNotification = exports.isJsonRpcNotification = exports.JsonRpcNotificationStruct = exports.JsonRpcRequestStruct = exports.JsonRpcParamsStruct = exports.JsonRpcErrorStruct = exports.JsonRpcIdStruct = exports.JsonRpcVersionStruct = exports.jsonrpc2 = exports.getJsonSize = exports.getSafeJson = exports.isValidJson = exports.JsonStruct = exports.UnsafeJsonStruct = exports.exactOptional = exports.object = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst assert_1 = require(\"./assert.cjs\");\nconst misc_1 = require(\"./misc.cjs\");\n/**\n * A struct to check if the given value is a valid object, with support for\n * {@link exactOptional} types.\n *\n * @param schema - The schema of the object.\n * @returns A struct to check if the given value is an object.\n */\nconst object = (schema) => \n// The type is slightly different from a regular object struct, because we\n// want to make properties with `undefined` in their type optional, but not\n// `undefined` itself. This means that we need a type cast.\n(0, superstruct_1.object)(schema);\nexports.object = object;\n/**\n * Check the last field of a path is present.\n *\n * @param context - The context to check.\n * @param context.path - The path to check.\n * @param context.branch - The branch to check.\n * @returns Whether the last field of a path is present.\n */\nfunction hasOptional({ path, branch }) {\n    const field = path[path.length - 1];\n    return (0, misc_1.hasProperty)(branch[branch.length - 2], field);\n}\n/**\n * A struct which allows the property of an object to be absent, or to be present\n * as long as it's valid and not set to `undefined`.\n *\n * This struct should be used in conjunction with the {@link object} from this\n * library, to get proper type inference.\n *\n * @param struct - The struct to check the value against, if present.\n * @returns A struct to check if the given value is valid, or not present.\n * @example\n * ```ts\n * const struct = object({\n *   foo: exactOptional(string()),\n *   bar: exactOptional(number()),\n *   baz: optional(boolean()),\n *   qux: unknown(),\n * });\n *\n * type Type = Infer<typeof struct>;\n * // Type is equivalent to:\n * // {\n * //   foo?: string;\n * //   bar?: number;\n * //   baz?: boolean | undefined;\n * //   qux: unknown;\n * // }\n * ```\n */\nfunction exactOptional(struct) {\n    return new superstruct_1.Struct({\n        ...struct,\n        type: `optional ${struct.type}`,\n        validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n        refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context),\n    });\n}\nexports.exactOptional = exactOptional;\n/**\n * Validate an unknown input to be valid JSON.\n *\n * Useful for constructing JSON structs.\n *\n * @param json - An unknown value.\n * @returns True if the value is valid JSON, otherwise false.\n */\nfunction validateJson(json) {\n    if (json === null || typeof json === 'boolean' || typeof json === 'string') {\n        return true;\n    }\n    if (typeof json === 'number' && Number.isFinite(json)) {\n        return true;\n    }\n    if (typeof json === 'object') {\n        let every = true;\n        if (Array.isArray(json)) {\n            // Ignoring linting error since for-of is significantly slower than a normal for-loop\n            // and performance is important in this specific function.\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for (let i = 0; i < json.length; i++) {\n                if (!validateJson(json[i])) {\n                    every = false;\n                    break;\n                }\n            }\n            return every;\n        }\n        const entries = Object.entries(json);\n        // Ignoring linting errors since for-of is significantly slower than a normal for-loop\n        // and performance is important in this specific function.\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < entries.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            if (typeof entries[i][0] !== 'string' || !validateJson(entries[i][1])) {\n                every = false;\n                break;\n            }\n        }\n        return every;\n    }\n    return false;\n}\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\nexports.UnsafeJsonStruct = (0, superstruct_1.define)('JSON', (json) => validateJson(json));\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexports.JsonStruct = (0, superstruct_1.coerce)(exports.UnsafeJsonStruct, (0, superstruct_1.refine)((0, superstruct_1.any)(), 'JSON', (value) => (0, superstruct_1.is)(value, exports.UnsafeJsonStruct)), (value) => JSON.parse(JSON.stringify(value, (propKey, propValue) => {\n    // Strip __proto__ and constructor properties to prevent prototype pollution.\n    if (propKey === '__proto__' || propKey === 'constructor') {\n        return undefined;\n    }\n    return propValue;\n})));\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nfunction isValidJson(value) {\n    try {\n        getSafeJson(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexports.isValidJson = isValidJson;\n/**\n * Validate and return sanitized JSON.\n *\n * Note:\n * This function uses sanitized JsonStruct for validation\n * that applies stringify and then parse of a value provided\n * to ensure that there are no getters which can have side effects\n * that can cause security issues.\n *\n * @param value - JSON structure to be processed.\n * @returns Sanitized JSON structure.\n */\nfunction getSafeJson(value) {\n    return (0, superstruct_1.create)(value, exports.JsonStruct);\n}\nexports.getSafeJson = getSafeJson;\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nfunction getJsonSize(value) {\n    (0, assert_1.assertStruct)(value, exports.JsonStruct, 'Invalid JSON value');\n    const json = JSON.stringify(value);\n    return new TextEncoder().encode(json).byteLength;\n}\nexports.getJsonSize = getJsonSize;\n/**\n * The string '2.0'.\n */\nexports.jsonrpc2 = '2.0';\nexports.JsonRpcVersionStruct = (0, superstruct_1.literal)(exports.jsonrpc2);\nexports.JsonRpcIdStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.string)()]));\nexports.JsonRpcErrorStruct = (0, exports.object)({\n    code: (0, superstruct_1.integer)(),\n    message: (0, superstruct_1.string)(),\n    data: exactOptional(exports.JsonStruct),\n    stack: exactOptional((0, superstruct_1.string)()),\n});\nexports.JsonRpcParamsStruct = (0, superstruct_1.union)([(0, superstruct_1.record)((0, superstruct_1.string)(), exports.JsonStruct), (0, superstruct_1.array)(exports.JsonStruct)]);\nexports.JsonRpcRequestStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\nexports.JsonRpcNotificationStruct = (0, exports.object)({\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exactOptional(exports.JsonRpcParamsStruct),\n});\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nfunction isJsonRpcNotification(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcNotificationStruct);\n}\nexports.isJsonRpcNotification = isJsonRpcNotification;\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nfunction assertIsJsonRpcNotification(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcNotificationStruct, 'Invalid JSON-RPC notification', ErrorWrapper);\n}\nexports.assertIsJsonRpcNotification = assertIsJsonRpcNotification;\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nfunction isJsonRpcRequest(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcRequestStruct);\n}\nexports.isJsonRpcRequest = isJsonRpcRequest;\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nfunction assertIsJsonRpcRequest(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcRequestStruct, 'Invalid JSON-RPC request', ErrorWrapper);\n}\nexports.assertIsJsonRpcRequest = assertIsJsonRpcRequest;\nexports.PendingJsonRpcResponseStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: (0, superstruct_1.optional)((0, superstruct_1.unknown)()),\n    error: (0, superstruct_1.optional)(exports.JsonRpcErrorStruct),\n});\nexports.JsonRpcSuccessStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: exports.JsonStruct,\n});\nexports.JsonRpcFailureStruct = (0, exports.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    error: exports.JsonRpcErrorStruct,\n});\nexports.JsonRpcResponseStruct = (0, superstruct_1.union)([\n    exports.JsonRpcSuccessStruct,\n    exports.JsonRpcFailureStruct,\n]);\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nfunction isPendingJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.PendingJsonRpcResponseStruct);\n}\nexports.isPendingJsonRpcResponse = isPendingJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nfunction assertIsPendingJsonRpcResponse(response, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(response, exports.PendingJsonRpcResponseStruct, 'Invalid pending JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsPendingJsonRpcResponse = assertIsPendingJsonRpcResponse;\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nfunction isJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.JsonRpcResponseStruct);\n}\nexports.isJsonRpcResponse = isJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nfunction assertIsJsonRpcResponse(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcResponseStruct, 'Invalid JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsJsonRpcResponse = assertIsJsonRpcResponse;\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nfunction isJsonRpcSuccess(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcSuccessStruct);\n}\nexports.isJsonRpcSuccess = isJsonRpcSuccess;\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nfunction assertIsJsonRpcSuccess(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcSuccessStruct, 'Invalid JSON-RPC success response', ErrorWrapper);\n}\nexports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess;\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nfunction isJsonRpcFailure(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcFailureStruct);\n}\nexports.isJsonRpcFailure = isJsonRpcFailure;\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nfunction assertIsJsonRpcFailure(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcFailureStruct, 'Invalid JSON-RPC failure response', ErrorWrapper);\n}\nexports.assertIsJsonRpcFailure = assertIsJsonRpcFailure;\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nfunction isJsonRpcError(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcErrorStruct);\n}\nexports.isJsonRpcError = isJsonRpcError;\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nfunction assertIsJsonRpcError(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcErrorStruct, 'Invalid JSON-RPC error', ErrorWrapper);\n}\nexports.assertIsJsonRpcError = assertIsJsonRpcError;\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nfunction getJsonRpcIdValidator(options) {\n    const { permitEmptyString, permitFractions, permitNull } = {\n        permitEmptyString: true,\n        permitFractions: false,\n        permitNull: true,\n        ...options,\n    };\n    /**\n     * Type guard for {@link JsonRpcId}.\n     *\n     * @param id - The JSON-RPC ID value to check.\n     * @returns Whether the given ID is valid per the options given to the\n     * factory.\n     */\n    const isValidJsonRpcId = (id) => {\n        return Boolean((typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n            (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n            (permitNull && id === null));\n    };\n    return isValidJsonRpcId;\n}\nexports.getJsonRpcIdValidator = getJsonRpcIdValidator;\n//# sourceMappingURL=json.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.cjs.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.createProjectLogger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst globalLogger = (0, debug_1.default)('metamask');\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nfunction createProjectLogger(projectName) {\n    return globalLogger.extend(projectName);\n}\nexports.createProjectLogger = createProjectLogger;\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nfunction createModuleLogger(projectLogger, moduleName) {\n    return projectLogger.extend(moduleName);\n}\nexports.createModuleLogger = createModuleLogger;\n//# sourceMappingURL=logging.cjs.map","\"use strict\";\n//\n// Types\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateNumberSize = exports.calculateStringSize = exports.isASCII = exports.isPlainObject = exports.ESCAPE_CHARACTERS_REGEXP = exports.JsonSize = exports.getKnownPropertyNames = exports.hasProperty = exports.isObject = exports.isNullOrUndefined = exports.isNonEmptyArray = void 0;\n//\n// Type Guards\n//\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nfunction isObject(value) {\n    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\nexports.isObject = isObject;\n//\n// Other utility functions\n//\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nconst hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nexports.hasProperty = hasProperty;\n/**\n * `Object.getOwnPropertyNames()` is intentionally generic: it returns the\n * immediate property names of an object, but it cannot make guarantees about\n * the contents of that object, so the type of the property names is merely\n * `string[]`. While this is technically accurate, it is also unnecessary if we\n * have an object with a type that we own (such as an enum).\n *\n * @param object - The plain object.\n * @returns The own property names of the object which are assigned a type\n * derived from the object itself.\n */\nfunction getKnownPropertyNames(object) {\n    return Object.getOwnPropertyNames(object);\n}\nexports.getKnownPropertyNames = getKnownPropertyNames;\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nvar JsonSize;\n(function (JsonSize) {\n    JsonSize[JsonSize[\"Null\"] = 4] = \"Null\";\n    JsonSize[JsonSize[\"Comma\"] = 1] = \"Comma\";\n    JsonSize[JsonSize[\"Wrapper\"] = 1] = \"Wrapper\";\n    JsonSize[JsonSize[\"True\"] = 4] = \"True\";\n    JsonSize[JsonSize[\"False\"] = 5] = \"False\";\n    JsonSize[JsonSize[\"Quote\"] = 1] = \"Quote\";\n    JsonSize[JsonSize[\"Colon\"] = 1] = \"Colon\";\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    JsonSize[JsonSize[\"Date\"] = 24] = \"Date\";\n})(JsonSize = exports.JsonSize || (exports.JsonSize = {}));\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexports.ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        let proto = value;\n        while (Object.getPrototypeOf(proto) !== null) {\n            proto = Object.getPrototypeOf(proto);\n        }\n        return Object.getPrototypeOf(value) === proto;\n    }\n    catch (_) {\n        return false;\n    }\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nfunction isASCII(character) {\n    return character.charCodeAt(0) <= 127;\n}\nexports.isASCII = isASCII;\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nfunction calculateStringSize(value) {\n    const size = value.split('').reduce((total, character) => {\n        if (isASCII(character)) {\n            return total + 1;\n        }\n        return total + 2;\n    }, 0);\n    // Also detect characters that need backslash escape\n    return size + (value.match(exports.ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\nexports.calculateStringSize = calculateStringSize;\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nfunction calculateNumberSize(value) {\n    return value.toString().length;\n}\nexports.calculateNumberSize = calculateNumberSize;\n//# sourceMappingURL=misc.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBigInt = exports.hexToNumber = exports.bigIntToHex = exports.numberToHex = void 0;\nconst assert_1 = require(\"./assert.cjs\");\nconst hex_1 = require(\"./hex.cjs\");\n/**\n * Convert a number to a hexadecimal string. This verifies that the number is a\n * non-negative safe integer.\n *\n * To convert a `bigint` to a hexadecimal string instead, use\n * {@link bigIntToHex}.\n *\n * @example\n * ```typescript\n * numberToHex(0); // '0x0'\n * numberToHex(1); // '0x1'\n * numberToHex(16); // '0x10'\n * ```\n * @param value - The number to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the number is not a non-negative safe integer.\n */\nconst numberToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToHex` instead.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.numberToHex = numberToHex;\n/**\n * Convert a `bigint` to a hexadecimal string. This verifies that the `bigint`\n * is a non-negative integer.\n *\n * To convert a number to a hexadecimal string instead, use {@link numberToHex}.\n *\n * @example\n * ```typescript\n * bigIntToHex(0n); // '0x0'\n * bigIntToHex(1n); // '0x1'\n * bigIntToHex(16n); // '0x10'\n * ```\n * @param value - The `bigint` to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the `bigint` is not a non-negative integer.\n */\nconst bigIntToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative bigint.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert a hexadecimal string to a number. This verifies that the string is a\n * valid hex string, and that the resulting number is a safe integer. Both\n * \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a `bigint` instead, use\n * {@link hexToBigInt}.\n *\n * @example\n * ```typescript\n * hexToNumber('0x0'); // 0\n * hexToNumber('0x1'); // 1\n * hexToNumber('0x10'); // 16\n * ```\n * @param value - The hexadecimal string to convert to a number.\n * @returns The number.\n * @throws If the value is not a valid hexadecimal string, or if the resulting\n * number is not a safe integer.\n */\nconst hexToNumber = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // `parseInt` accepts values without the \"0x\"-prefix, whereas `Number` does\n    // not. Using this is slightly faster than `Number(add0x(value))`.\n    const numberValue = parseInt(value, 16);\n    (0, assert_1.assert)(Number.isSafeInteger(numberValue), 'Value is not a safe integer. Use `hexToBigInt` instead.');\n    return numberValue;\n};\nexports.hexToNumber = hexToNumber;\n/**\n * Convert a hexadecimal string to a `bigint`. This verifies that the string is\n * a valid hex string. Both \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a number instead, use {@link hexToNumber}.\n *\n * @example\n * ```typescript\n * hexToBigInt('0x0'); // 0n\n * hexToBigInt('0x1'); // 1n\n * hexToBigInt('0x10'); // 16n\n * ```\n * @param value - The hexadecimal string to convert to a `bigint`.\n * @returns The `bigint`.\n * @throws If the value is not a valid hexadecimal string.\n */\nconst hexToBigInt = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // The `BigInt` constructor requires the \"0x\"-prefix to parse a hex string.\n    return BigInt((0, hex_1.add0x)(value));\n};\nexports.hexToBigInt = hexToBigInt;\n//# sourceMappingURL=number.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=opaque.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeferredPromise = void 0;\n/**\n * Create a defered Promise.\n *\n * If the Promise is rejected prior to a handler being added, this can result in an\n * `UnhandledPromiseRejection` error. Optionally this can be suppressed with the\n * `suppressUnhandledRejection` flag, as it's common to belatedly handle deferred Promises, or to\n * ignore them if they're no longer relevant (e.g. related to a cancelled request).\n *\n * However, be very careful that you have handled the Promise if you do this. Suppressing these\n * errors is dangerous, they exist for good reason. An unhandled rejection can hide errors, making\n * debugging extremely difficult. They should only be suppressed if you're confident that the\n * Promise is always handled correctly, in both the success and failure cases.\n *\n * @param args - The arguments.\n * @param args.suppressUnhandledRejection - This option adds an empty error handler\n * to the Promise to suppress the UnhandledPromiseRejection error. This can be\n * useful if the deferred Promise is sometimes intentionally not used.\n * @returns A deferred Promise.\n * @template Result - The result type of the Promise.\n */\nfunction createDeferredPromise({ suppressUnhandledRejection = false, } = {}) {\n    let resolve;\n    let reject;\n    const promise = new Promise((innerResolve, innerReject) => {\n        resolve = innerResolve;\n        reject = innerReject;\n    });\n    if (suppressUnhandledRejection) {\n        promise.catch((_error) => {\n            // This handler is used to suppress the UnhandledPromiseRejection error\n        });\n    }\n    // @ts-expect-error We know that these are assigned, but TypeScript doesn't\n    return { promise, resolve, reject };\n}\nexports.createDeferredPromise = createDeferredPromise;\n//# sourceMappingURL=promise.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeSince = exports.inMilliseconds = exports.Duration = void 0;\n/**\n * Common duration constants, in milliseconds.\n */\nvar Duration;\n(function (Duration) {\n    /**\n     * A millisecond.\n     */\n    Duration[Duration[\"Millisecond\"] = 1] = \"Millisecond\";\n    /**\n     * A second, in milliseconds.\n     */\n    Duration[Duration[\"Second\"] = 1000] = \"Second\";\n    /**\n     * A minute, in milliseconds.\n     */\n    Duration[Duration[\"Minute\"] = 60000] = \"Minute\";\n    /**\n     * An hour, in milliseconds.\n     */\n    Duration[Duration[\"Hour\"] = 3600000] = \"Hour\";\n    /**\n     * A day, in milliseconds.\n     */\n    Duration[Duration[\"Day\"] = 86400000] = \"Day\";\n    /**\n     * A week, in milliseconds.\n     */\n    Duration[Duration[\"Week\"] = 604800000] = \"Week\";\n    /**\n     * A year, in milliseconds.\n     */\n    Duration[Duration[\"Year\"] = 31536000000] = \"Year\";\n})(Duration = exports.Duration || (exports.Duration = {}));\nconst isNonNegativeInteger = (number) => Number.isInteger(number) && number >= 0;\nconst assertIsNonNegativeInteger = (number, name) => {\n    if (!isNonNegativeInteger(number)) {\n        throw new Error(`\"${name}\" must be a non-negative integer. Received: \"${number}\".`);\n    }\n};\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nfunction inMilliseconds(count, duration) {\n    assertIsNonNegativeInteger(count, 'count');\n    return count * duration;\n}\nexports.inMilliseconds = inMilliseconds;\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nfunction timeSince(timestamp) {\n    assertIsNonNegativeInteger(timestamp, 'timestamp');\n    return Date.now() - timestamp;\n}\nexports.timeSince = timeSince;\n//# sourceMappingURL=time.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.cjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.satisfiesVersionRange = exports.gtRange = exports.gtVersion = exports.assertIsSemVerRange = exports.assertIsSemVerVersion = exports.isValidSemVerRange = exports.isValidSemVerVersion = exports.VersionRangeStruct = exports.VersionStruct = void 0;\nconst superstruct_1 = require(\"@metamask/superstruct\");\nconst semver_1 = require(\"semver\");\nconst assert_1 = require(\"./assert.cjs\");\n/**\n * A struct for validating a version string.\n */\nexports.VersionStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version', (value) => {\n    if ((0, semver_1.valid)(value) === null) {\n        return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n});\nexports.VersionRangeStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version range', (value) => {\n    if ((0, semver_1.validRange)(value) === null) {\n        return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n});\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nfunction isValidSemVerVersion(version) {\n    return (0, superstruct_1.is)(version, exports.VersionStruct);\n}\nexports.isValidSemVerVersion = isValidSemVerVersion;\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nfunction isValidSemVerRange(versionRange) {\n    return (0, superstruct_1.is)(versionRange, exports.VersionRangeStruct);\n}\nexports.isValidSemVerRange = isValidSemVerRange;\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nfunction assertIsSemVerVersion(version) {\n    (0, assert_1.assertStruct)(version, exports.VersionStruct);\n}\nexports.assertIsSemVerVersion = assertIsSemVerVersion;\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nfunction assertIsSemVerRange(range) {\n    (0, assert_1.assertStruct)(range, exports.VersionRangeStruct);\n}\nexports.assertIsSemVerRange = assertIsSemVerRange;\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nfunction gtVersion(version1, version2) {\n    return (0, semver_1.gt)(version1, version2);\n}\nexports.gtVersion = gtVersion;\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nfunction gtRange(version, range) {\n    return (0, semver_1.gtr)(version, range);\n}\nexports.gtRange = gtRange;\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nfunction satisfiesVersionRange(version, versionRange) {\n    return (0, semver_1.satisfies)(version, versionRange, {\n        includePrerelease: true,\n    });\n}\nexports.satisfiesVersionRange = satisfiesVersionRange;\n//# sourceMappingURL=versions.cjs.map","'use strict';\n\nvar possibleNames = require('possible-typed-array-names');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\n/** @type {import('.')} */\nmodule.exports = function availableTypedArrays() {\n\tvar /** @type {ReturnType<typeof availableTypedArrays>} */ out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\t// @ts-expect-error\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","import { cachedTextDecoder } from \"./text-decoder.js\";\nconst uint8ArrayStringified = \"[object Uint8Array]\";\n/**\n * Throw a `TypeError` if the given value is not an instance of `Uint8Array`.\n * @example\n * ```ts\n * import {assertUint8Array} from 'uint8array-extras';\n *\n * try {\n * assertUint8Array(new ArrayBuffer(10)); // Throws a TypeError\n * } catch (error) {\n * console.error(error.message);\n * }\n * ```\n */\nfunction assertUint8Array(value) {\n    if (!isUint8Array(value)) {\n        throw new TypeError(`Expected \\`Uint8Array\\`, got \\`${typeof value}\\``);\n    }\n}\n/**\n * Check if the given value is an instance of `Uint8Array`.\n *\n * Replacement for [`Buffer.isBuffer()`](https://nodejs.org/api/buffer.html#static-method-bufferisbufferobj).\n * @example\n * ```ts\n * import {isUint8Array} from 'uint8array-extras';\n *\n * console.log(isUint8Array(new Uint8Array()));\n * //=> true\n *\n * console.log(isUint8Array(Buffer.from('x')));\n * //=> true\n *\n * console.log(isUint8Array(new ArrayBuffer(10)));\n * //=> false\n * ```\n */\nexport function isUint8Array(value) {\n    if (!value) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    return Object.prototype.toString.call(value) === uint8ArrayStringified;\n}\n/**\n * Check if two arrays are identical by verifying that they contain the same bytes in the same sequence.\n *\n * Replacement for [`Buffer#equals()`](https://nodejs.org/api/buffer.html#bufequalsotherbuffer).\n * @example\n * ```ts\n * import {areUint8ArraysEqual} from 'uint8array-extras';\n *\n * const a = new Uint8Array([1, 2, 3]);\n * const b = new Uint8Array([1, 2, 3]);\n * const c = new Uint8Array([4, 5, 6]);\n *\n * console.log(areUint8ArraysEqual(a, b));\n * //=> true\n *\n * console.log(areUint8ArraysEqual(a, c));\n * //=> false\n * ```\n */\nexport function areUint8ArraysEqual(a, b) {\n    assertUint8Array(a);\n    assertUint8Array(b);\n    if (a === b) {\n        return true;\n    }\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let index = 0; index < a.length; index++) {\n        if (a[index] !== b[index]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Convert a `Uint8Array` (containing a UTF-8 string) to a string.\n *\n * Replacement for [`Buffer#toString()`](https://nodejs.org/api/buffer.html#buftostringencoding-start-end).\n * @example\n * ```ts\n * import {uint8ArrayToString} from 'uint8array-extras';\n *\n * const byteArray = new Uint8Array([72, 101, 108, 108, 111]);\n *\n * console.log(uint8ArrayToString(byteArray));\n * //=> 'Hello'\n * ```\n */\nfunction uint8ArrayToString(array) {\n    assertUint8Array(array);\n    return cachedTextDecoder().decode(array);\n}\nfunction assertString(value) {\n    if (typeof value !== \"string\") {\n        throw new TypeError(`Expected \\`string\\`, got \\`${typeof value}\\``);\n    }\n}\nexport function base64UrlToBase64(base64url) {\n    // Replace Base64URL characters with Base64 characters\n    let base64 = base64url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    // Add padding if necessary\n    const padding = base64.length % 4;\n    if (padding !== 0) {\n        base64 += \"=\".repeat(4 - padding);\n    }\n    return base64;\n}\n/**\n * Convert a Base64-encoded or [Base64URL](https://base64.guru/standards/base64url)-encoded string to a `Uint8Array`.\n *\n * Replacement for [`Buffer.from('SGVsbG8=', 'base64')`](https://nodejs.org/api/buffer.html#static-method-bufferfromstring-encoding).\n * @example\n * ```ts\n * import {base64ToUint8Array} from 'uint8array-extras';\n *\n * console.log(base64ToUint8Array('SGVsbG8='));\n * //=> Uint8Array [72, 101, 108, 108, 111]\n * ```\n */\nexport function base64ToUint8Array(base64String) {\n    assertString(base64String);\n    return Uint8Array.from(globalThis.atob(base64UrlToBase64(base64String)), \n    // biome-ignore lint/style/noNonNullAssertion: we know that the code points exist\n    (x) => x.codePointAt(0));\n}\n/**\n * Decode a Base64-encoded or [Base64URL](https://base64.guru/standards/base64url)-encoded string to a string.\n *\n * Replacement for `Buffer.from('SGVsbG8=', 'base64').toString()` and [`atob()`](https://developer.mozilla.org/en-US/docs/Web/API/atob).\n * @example\n * ```ts\n * import {base64ToString} from 'uint8array-extras';\n *\n * console.log(base64ToString('SGVsbG8='));\n * //=> 'Hello'\n * ```\n */\nexport function base64ToString(base64String) {\n    assertString(base64String);\n    return uint8ArrayToString(base64ToUint8Array(base64String));\n}\nfunction base64ToBase64Url(base64) {\n    return base64.replaceAll(\"+\", \"-\").replaceAll(\"/\", \"_\").replace(/=+$/, \"\");\n}\n// Reference: https://phuoc.ng/collection/this-vs-that/concat-vs-push/\nconst MAX_BLOCK_SIZE = 65_535;\nexport function uint8ArrayToBase64(array, { urlSafe = false } = {}) {\n    assertUint8Array(array);\n    let base64;\n    if (array.length < MAX_BLOCK_SIZE) {\n        // Required as `btoa` and `atob` don't properly support Unicode: https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n        // @ts-expect-error - TS doesn't know about `String#fromCodePoint`\n        base64 = globalThis.btoa(String.fromCodePoint.apply(this, array));\n    }\n    else {\n        base64 = \"\";\n        for (const value of array) {\n            base64 += String.fromCodePoint(value);\n        }\n        base64 = globalThis.btoa(base64);\n    }\n    return urlSafe ? base64ToBase64Url(base64) : base64;\n}\nexport function concatUint8Arrays(arrays, totalLength) {\n    if (arrays.length === 0) {\n        return new Uint8Array(0);\n    }\n    const calculatedTotalLength = totalLength ??\n        arrays.reduce((accumulator, currentValue) => accumulator + currentValue.length, 0);\n    const returnValue = new Uint8Array(calculatedTotalLength);\n    let offset = 0;\n    for (const array of arrays) {\n        assertUint8Array(array);\n        returnValue.set(array, offset);\n        offset += array.length;\n    }\n    return returnValue;\n}\nexport function compareUint8Arrays(a, b) {\n    assertUint8Array(a);\n    assertUint8Array(b);\n    const length = Math.min(a.length, b.length);\n    for (let index = 0; index < length; index++) {\n        // biome-ignore lint/style/noNonNullAssertion: we check the length above so the index is always in bounds\n        const diff = a[index] - b[index];\n        if (diff !== 0) {\n            return Math.sign(diff);\n        }\n    }\n    // At this point, all the compared elements are equal.\n    // The shorter array should come first if the arrays are of different lengths.\n    return Math.sign(a.length - b.length);\n}\n//# sourceMappingURL=uint8-array.js.map","import { isObjectWithKeys } from \"../../utils/type-guards.js\";\nimport { areUint8ArraysEqual, isUint8Array } from \"../../utils/uint8-array.js\";\n/**\n * @internal\n */\nfunction isFileInstance(data) {\n    return globalThis.File && data instanceof File;\n}\n/**\n * @internal\n */\nfunction isBufferOrStringWithName(data) {\n    if (!data) {\n        return false;\n    }\n    if (!isObjectWithKeys(data, [\"data\", \"name\"])) {\n        return false;\n    }\n    return !!(typeof data.name === \"string\" &&\n        (typeof data.data === \"string\" || isUint8Array(data.data)));\n}\nexport function isFileBufferOrStringEqual(input1, input2) {\n    if (isFileInstance(input1) && isFileInstance(input2)) {\n        // if both are File types, compare the name, size, and last modified date (best guess that these are the same files)\n        if (input1.name === input2.name &&\n            input1.lastModified === input2.lastModified &&\n            input1.size === input2.size) {\n            return true;\n        }\n    }\n    else if (isUint8Array(input1) && isUint8Array(input2)) {\n        // buffer gives us an easy way to compare the contents!\n        return areUint8ArraysEqual(input1, input2);\n    }\n    else if (isBufferOrStringWithName(input1) &&\n        isBufferOrStringWithName(input2)) {\n        // first check the names\n        if (input1.name === input2.name) {\n            // if the data for both is a string, compare the strings\n            if (typeof input1.data === \"string\" && typeof input2.data === \"string\") {\n                return input1.data === input2.data;\n            }\n            if (isUint8Array(input1.data) && isUint8Array(input2.data)) {\n                // otherwise we know it's buffers, so compare the buffers\n                return areUint8ArraysEqual(input1.data, input2.data);\n            }\n        }\n    }\n    // otherwise if we have not found a match, return false\n    return false;\n}\nexport function buildFormData(form, files, options) {\n    const fileNameToFileMap = new Map();\n    const fileNames = [];\n    for (let i = 0; i < files.length; i++) {\n        // biome-ignore lint/style/noNonNullAssertion: we know that files[i] is not null or undefined because we are iterating over the array\n        const file = files[i];\n        let fileName = \"\";\n        let fileData = file;\n        if (isFileInstance(file)) {\n            if (options?.rewriteFileNames) {\n                let extensions = \"\";\n                if (file.name) {\n                    const extensionStartIndex = file.name.lastIndexOf(\".\");\n                    if (extensionStartIndex > -1) {\n                        extensions = file.name.substring(extensionStartIndex);\n                    }\n                }\n                fileName = `${i + options.rewriteFileNames.fileStartNumber}${extensions}`;\n            }\n            else {\n                fileName = `${file.name}`;\n            }\n        }\n        else if (isBufferOrStringWithName(file)) {\n            fileData = file.data;\n            if (options?.rewriteFileNames) {\n                fileName = `${i + options.rewriteFileNames.fileStartNumber}`;\n            }\n            else {\n                fileName = `${file.name}`;\n            }\n        }\n        else {\n            if (options?.rewriteFileNames) {\n                fileName = `${i + options.rewriteFileNames.fileStartNumber}`;\n            }\n            else {\n                fileName = `${i}`;\n            }\n        }\n        // If we don't want to wrap with directory, adjust the filepath\n        const filepath = options?.uploadWithoutDirectory\n            ? \"files\"\n            : `files/${fileName}`;\n        if (fileNameToFileMap.has(fileName)) {\n            // if the file in the map is the same as the file we are already looking at then just skip and continue\n            if (isFileBufferOrStringEqual(fileNameToFileMap.get(fileName), file)) {\n                // we add it to the filenames array so that we can return the correct number of urls,\n                fileNames.push(fileName);\n                // but then we skip because we don't need to upload it multiple times\n                continue;\n            }\n            // otherwise if file names are the same but they are not the same file then we should throw an error (trying to upload to differnt files but with the same names)\n            throw new Error(`[DUPLICATE_FILE_NAME_ERROR] File name ${fileName} was passed for more than one different file.`);\n        }\n        // add it to the map so that we can check for duplicates\n        fileNameToFileMap.set(fileName, file);\n        // add it to the filenames array so that we can return the correct number of urls\n        fileNames.push(fileName);\n        form.append(\"file\", new Blob([fileData]), filepath);\n    }\n    const metadata = {\n        name: \"Storage SDK\",\n        keyvalues: { ...options?.metadata },\n    };\n    form.append(\"pinataMetadata\", JSON.stringify(metadata));\n    if (options?.uploadWithoutDirectory) {\n        form.append(\"pinataOptions\", JSON.stringify({\n            wrapWithDirectory: false,\n        }));\n    }\n    return {\n        form,\n        // encode the file names on the way out (which is what the upload backend expects)\n        fileNames: fileNames.map((fName) => encodeURIComponent(fName)),\n    };\n}\nexport function isFileOrUint8Array(data) {\n    return (isFileInstance(data) || isUint8Array(data) || isBufferOrStringWithName(data));\n}\n/**\n * @internal\n */\nexport function extractObjectFiles(data, files = []) {\n    // If item is a FileOrBuffer add it to our list of files\n    if (isFileOrUint8Array(data)) {\n        files.push(data);\n        return files;\n    }\n    if (typeof data === \"object\") {\n        if (!data) {\n            return files;\n        }\n        if (Array.isArray(data)) {\n            for (const entry of data) {\n                extractObjectFiles(entry, files);\n            }\n        }\n        else {\n            Object.keys(data).map((key) => extractObjectFiles(data[key], files));\n        }\n    }\n    return files;\n}\n/**\n * @internal\n */\nexport function replaceObjectFilesWithUris(data, uris) {\n    if (isFileOrUint8Array(data)) {\n        if (uris.length) {\n            return uris.shift();\n        }\n        console.warn(\"Not enough URIs to replace all files in object.\");\n    }\n    if (typeof data === \"object\") {\n        if (!data) {\n            return data;\n        }\n        if (Array.isArray(data)) {\n            return data.map((entry) => replaceObjectFilesWithUris(entry, uris));\n        }\n        return Object.fromEntries(Object.entries(data).map(([key, value]) => [\n            key,\n            replaceObjectFilesWithUris(value, uris),\n        ]));\n    }\n    return data;\n}\n/**\n * @internal\n */\nexport function replaceGatewayUrlWithScheme(url) {\n    if (url.includes(\"/ipfs/\")) {\n        const hash = url.split(\"/ipfs/\")[1];\n        return `ipfs://${hash}`;\n    }\n    return url;\n}\n/**\n * @internal\n */\nexport function replaceObjectGatewayUrlsWithSchemes(data) {\n    if (typeof data === \"string\") {\n        return replaceGatewayUrlWithScheme(data);\n    }\n    if (typeof data === \"object\") {\n        if (!data) {\n            return data;\n        }\n        if (isFileOrUint8Array(data)) {\n            return data;\n        }\n        if (Array.isArray(data)) {\n            return data.map((entry) => replaceObjectGatewayUrlsWithSchemes(entry));\n        }\n        return Object.fromEntries(Object.entries(data).map(([key, value]) => [\n            key,\n            replaceObjectGatewayUrlsWithSchemes(value),\n        ]));\n    }\n    return data;\n}\n//# sourceMappingURL=helpers.js.map","/**\n * Checks if a value is an object.\n * @param value - The value to check.\n * @returns True if the value is an object, false otherwise.\n * @internal\n */\nfunction isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n/**\n * Checks if a value is an object with specified keys.\n * @param value - The value to check.\n * @param keys - The keys to check for in the object. Defaults to an empty array.\n * @returns True if the value is an object with the specified keys, false otherwise.\n * @internal\n */\nexport function isObjectWithKeys(value, keys = []) {\n    return isObject(value) && keys.every((key) => key in value);\n}\n//# sourceMappingURL=type-guards.js.map","import { detectPlatform } from \"../utils/detect-platform.js\";\nimport { stringify } from \"../utils/json.js\";\nimport { buildFormData, extractObjectFiles, isFileOrUint8Array, replaceObjectFilesWithUris, replaceObjectGatewayUrlsWithSchemes, } from \"./upload/helpers.js\";\n/**\n * Uploads files based on the provided options.\n * @param options - The upload options.\n * @returns A promise that resolves to the uploaded file URI or URIs (when passing multiple files).\n * @throws An error if the upload fails.\n * @example\n *\n * ### Uploading JSON objects\n *\n * ```ts\n * import { upload } from \"thirdweb/storage\";\n * const uri = await upload({\n *  client,\n *  files: [\n *    {\n *      name: \"something\",\n *      data: {\n *        hello: \"world\",\n *      },\n *    },\n *  ],\n * });\n * ```\n *\n * ### Uploading files\n *\n * ```ts\n * import { upload } from \"thirdweb/storage\";\n * const uri = await upload({\n *  client,\n *  files: [\n *    new File([\"hello world\"], \"hello.txt\"),\n *  ],\n * });\n * ```\n * @storage\n */\nexport async function upload(options) {\n    // deal with the differnt file types\n    // if there are no files, return an empty array immediately\n    if (options.files.length === 0) {\n        return null;\n    }\n    // handle file arrays\n    const isFileArray = options.files\n        .map((item) => isFileOrUint8Array(item) || typeof item === \"string\")\n        .every((item) => !!item);\n    let uris;\n    if (isFileArray) {\n        // if we already have an array of files, we can just pass it through\n        uris = options.files;\n    }\n    else {\n        // otherwise we have to process them first\n        let cleaned = options.files;\n        // Replace any gateway URLs with their hashes\n        cleaned = replaceObjectGatewayUrlsWithSchemes(cleaned);\n        // Recurse through data and extract files to upload\n        const files = extractObjectFiles(cleaned);\n        if (files.length) {\n            // Upload all files that came from the object\n            const uris_ = await upload({ ...options, files });\n            // Recurse through data and replace files with hashes\n            cleaned = replaceObjectFilesWithUris(cleaned, \n            // always pass an array even if the underlying upload returns a single uri\n            Array.isArray(uris_) ? uris_ : [uris_]);\n        }\n        uris = cleaned.map((item) => {\n            if (typeof item === \"string\") {\n                return item;\n            }\n            return stringify(item);\n        });\n    }\n    // end deal with the differnt file types\n    const form_ = new FormData();\n    const { fileNames, form } = buildFormData(form_, uris, options);\n    const platform = detectPlatform();\n    if (platform === \"browser\" || platform === \"node\") {\n        const { uploadBatch } = await import(\"./upload/web-node.js\");\n        const uris = await uploadBatch(options.client, form, fileNames, options);\n        // if we only passed a single file, return its URI directly\n        if (options.files.length === 1) {\n            return uris[0];\n        }\n        return uris;\n    }\n    throw new Error(\"Please, use the uploadMobile function in mobile environments.\");\n}\n//# sourceMappingURL=upload.js.map","/**\n * Stringify a JSON object and convert all bigint values to string\n *\n * If you are getting this error: \"Exception: Do not know how to serialize a BigInt\",\n * you probably can use this function to parse the data.\n * Because bigint is not an accepted value of the JSON format.\n *\n * @returns An object with all bigint values converted to string\n * @example\n * ```ts\n * import { stringify } from \"thirdweb/utils\";\n * const obj = { tokenId: 0n };\n * const str = stringify(obj); // \"{\"tokenId\":\"0\"}\"\n * ```\n * @utils\n */\nexport function stringify(\n// biome-ignore lint/suspicious/noExplicitAny: JSON.stringify signature\nvalue, \n// biome-ignore lint/suspicious/noExplicitAny: JSON.stringify signature\nreplacer, space) {\n    const res = JSON.stringify(value, (key, value_) => {\n        const value__ = typeof value_ === \"bigint\" ? value_.toString() : value_;\n        return typeof replacer === \"function\" ? replacer(key, value__) : value__;\n    }, space);\n    return res;\n}\n//# sourceMappingURL=json.js.map","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    get(key) {\n        const value = super.get(key);\n        if (super.has(key) && value !== undefined) {\n            this.delete(key);\n            super.set(key, value);\n        }\n        return value;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize) {\n            const firstKey = this.keys().next().value;\n            if (firstKey) {\n                this.delete(firstKey);\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","const operatingSystemRules = [\n    [\"iOS\", /iP(hone|od|ad)/],\n    [\"Android OS\", /Android/],\n    [\"BlackBerry OS\", /BlackBerry|BB10/],\n    [\"Windows Mobile\", /IEMobile/],\n    [\"Amazon OS\", /Kindle/],\n    [\"Windows 3.11\", /Win16/],\n    [\"Windows 95\", /(Windows 95)|(Win95)|(Windows_95)/],\n    [\"Windows 98\", /(Windows 98)|(Win98)/],\n    [\"Windows 2000\", /(Windows NT 5.0)|(Windows 2000)/],\n    [\"Windows XP\", /(Windows NT 5.1)|(Windows XP)/],\n    [\"Windows Server 2003\", /(Windows NT 5.2)/],\n    [\"Windows Vista\", /(Windows NT 6.0)/],\n    [\"Windows 7\", /(Windows NT 6.1)/],\n    [\"Windows 8\", /(Windows NT 6.2)/],\n    [\"Windows 8.1\", /(Windows NT 6.3)/],\n    [\"Windows 10\", /(Windows NT 10.0)/],\n    [\"Windows ME\", /Windows ME/],\n    [\"Windows CE\", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    [\"Open BSD\", /OpenBSD/],\n    [\"Sun OS\", /SunOS/],\n    [\"Chrome OS\", /CrOS/],\n    [\"Linux\", /(Linux)|(X11)/],\n    [\"Mac OS\", /(Mac_PowerPC)|(Macintosh)/],\n    [\"QNX\", /QNX/],\n    [\"BeOS\", /BeOS/],\n    [\"OS/2\", /OS\\/2/],\n];\nexport function detectPlatform() {\n    if (typeof document === \"undefined\" &&\n        typeof navigator !== \"undefined\" &&\n        navigator.product === \"ReactNative\") {\n        // react-native\n        return \"mobile\";\n    }\n    if (typeof navigator !== \"undefined\") {\n        return \"browser\";\n    }\n    return \"node\";\n}\nexport function detectOS(ua) {\n    for (let ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        const [os, regex] = operatingSystemRules[ii];\n        const match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=detect-platform.js.map","export const version = \"5.80.0\";\n//# sourceMappingURL=version.js.map","export const IS_DEV = \n// biome-ignore lint/nursery/noProcessEnv: ok in this file\nprocess.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"test\";\n//# sourceMappingURL=process.js.map","import { version } from \"../version.js\";\nimport { LruMap } from \"./caching/lru.js\";\nimport { detectOS, detectPlatform, } from \"./detect-platform.js\";\nimport { isJWT } from \"./jwt/is-jwt.js\";\nimport { IS_DEV } from \"./process.js\";\nconst DEFAULT_REQUEST_TIMEOUT = 60000;\n/**\n * @internal\n */\nexport function getClientFetch(client, ecosystem) {\n    /**\n     * @internal\n     */\n    async function fetchWithHeaders(url, init) {\n        const { requestTimeoutMs = DEFAULT_REQUEST_TIMEOUT, ...restInit } = init || {};\n        let headers = restInit.headers ? new Headers(restInit.headers) : undefined;\n        // check if we are making a request to a thirdweb service (we don't want to send any headers to non-thirdweb services)\n        if (isThirdwebUrl(url)) {\n            if (!headers) {\n                headers = new Headers();\n            }\n            // auth token if secret key === jwt\n            const authToken = client.secretKey && isJWT(client.secretKey)\n                ? client.secretKey\n                : undefined;\n            // secret key if secret key !== jwt\n            const secretKey = client.secretKey && !isJWT(client.secretKey)\n                ? client.secretKey\n                : undefined;\n            const clientId = client.clientId;\n            // if we have an auth token set, use that (thirdweb dashboard sets this for the user)\n            // pay urls should never send the auth token, because we always want the \"developer\" to be the one making the request, not the \"end user\"\n            if (authToken &&\n                !isPayUrl(url) &&\n                !isInAppWalletUrl(url) &&\n                !isBundlerUrl(url)) {\n                headers.set(\"authorization\", `Bearer ${authToken}`);\n            }\n            else if (secretKey) {\n                headers.set(\"x-secret-key\", secretKey);\n            }\n            else if (clientId) {\n                headers.set(\"x-client-id\", clientId);\n            }\n            if (ecosystem) {\n                headers.set(\"x-ecosystem-id\", ecosystem.id);\n                if (ecosystem.partnerId) {\n                    headers.set(\"x-ecosystem-partner-id\", ecosystem.partnerId);\n                }\n            }\n            // this already internally caches\n            for (const [key, value] of getPlatformHeaders()) {\n                headers.set(key, value);\n            }\n        }\n        let controller;\n        let abortTimeout;\n        if (requestTimeoutMs) {\n            controller = new AbortController();\n            abortTimeout = setTimeout(() => {\n                controller?.abort(\"timeout\");\n            }, requestTimeoutMs);\n        }\n        return fetch(url, {\n            ...restInit,\n            headers,\n            signal: controller?.signal,\n        }).finally(() => {\n            if (abortTimeout) {\n                clearTimeout(abortTimeout);\n            }\n        });\n    }\n    return fetchWithHeaders;\n}\n// NOTE: these all start with \".\" because we want to make sure we don't match (for example) \"otherthirdweb.com\"\nconst THIRDWEB_DOMAINS = [\n    \".thirdweb.com\",\n    \".ipfscdn.io\",\n    // dev domains\n    \".thirdweb.dev\",\n    \".thirdweb-dev.com\",\n];\nexport const IS_THIRDWEB_URL_CACHE = new LruMap(4096);\n/**\n * @internal\n */\nexport function isThirdwebUrl(url) {\n    if (IS_THIRDWEB_URL_CACHE.has(url)) {\n        // biome-ignore lint/style/noNonNullAssertion: the `has` above ensures that this will always be set\n        return IS_THIRDWEB_URL_CACHE.get(url);\n    }\n    try {\n        const { hostname } = new URL(url);\n        try {\n            // special case for localhost in development only\n            if (IS_DEV) {\n                if (hostname === \"localhost\") {\n                    IS_THIRDWEB_URL_CACHE.set(url, true);\n                    return true;\n                }\n            }\n        }\n        catch { }\n        const is = THIRDWEB_DOMAINS.some((domain) => hostname.endsWith(domain));\n        IS_THIRDWEB_URL_CACHE.set(url, is);\n        return is;\n    }\n    catch {\n        IS_THIRDWEB_URL_CACHE.set(url, false);\n        return false;\n    }\n}\nfunction isPayUrl(url) {\n    try {\n        const { hostname } = new URL(url);\n        // pay service hostname always starts with \"pay.\"\n        return hostname.startsWith(\"pay.\");\n    }\n    catch {\n        return false;\n    }\n}\nfunction isInAppWalletUrl(url) {\n    try {\n        const { hostname } = new URL(url);\n        // in app wallet service hostname always starts with \"in-app-wallet.\" or \"embedded-wallet.\"\n        return (hostname.startsWith(\"in-app-wallet.\") ||\n            hostname.startsWith(\"embedded-wallet.\"));\n    }\n    catch {\n        return false;\n    }\n}\nfunction isBundlerUrl(url) {\n    try {\n        const { hostname } = new URL(url);\n        return (hostname.endsWith(\".bundler.thirdweb.com\") ||\n            hostname.endsWith(\".bundler.thirdweb-dev.com\"));\n    }\n    catch {\n        return false;\n    }\n}\nconst SDK_NAME = \"unified-sdk\";\nlet previousPlatform;\n/**\n * @internal\n */\nexport function getPlatformHeaders() {\n    if (previousPlatform) {\n        return previousPlatform;\n    }\n    let os = null;\n    if (typeof navigator !== \"undefined\") {\n        os = detectOS(navigator.userAgent);\n    }\n    let bundleId = undefined;\n    if (typeof globalThis !== \"undefined\" && \"Application\" in globalThis) {\n        // shims use wallet connect RN module which injects Application info in globalThis\n        // biome-ignore lint/suspicious/noExplicitAny: get around globalThis typing\n        bundleId = globalThis.Application.applicationId;\n    }\n    previousPlatform = Object.entries({\n        \"x-sdk-platform\": detectPlatform(),\n        \"x-sdk-version\": version,\n        \"x-sdk-os\": os ? parseOs(os) : \"unknown\",\n        \"x-sdk-name\": SDK_NAME,\n        ...(bundleId ? { \"x-bundle-id\": bundleId } : {}),\n    });\n    return previousPlatform;\n}\n/**\n * @internal\n */\nfunction parseOs(os) {\n    const osLowerCased = os.toLowerCase();\n    if (osLowerCased.startsWith(\"win\")) {\n        return \"win\";\n    }\n    // we do NOT use the lowercase here\n    switch (os) {\n        case \"Mac OS\":\n            return \"mac\";\n        case \"iOS\":\n            return \"ios\";\n        case \"Android OS\":\n            return \"android\";\n        default:\n            // if we somehow fall through here, just replace all spaces with underscores and send it\n            return osLowerCased.replace(/\\s/gi, \"_\");\n    }\n}\n//# sourceMappingURL=fetch.js.map","export function isJWT(str) {\n    return str.split(\".\").length === 3;\n}\n//# sourceMappingURL=is-jwt.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle1.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktokenization\"] = self[\"webpackChunktokenization\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/* Do NOT modify this file; see /src.ts/_admin/update-version.ts */\n/**\n *  The current version of Ethers.\n */\nexport const version = \"6.13.4\";\n//# sourceMappingURL=_version.js.map","/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\nfunction checkType(value, type, name) {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof (value) === type) {\n                    return;\n                }\n        }\n    }\n    const error = new Error(`invalid value for type ${type}`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${name}`;\n    error.value = value;\n    throw error;\n}\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties(value) {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[k])));\n    return results.reduce((accum, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, {});\n}\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties(target, values, types) {\n    for (let key in values) {\n        let value = values[key];\n        const type = (types ? types[key] : null);\n        if (type) {\n            checkType(value, type, key);\n        }\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n//# sourceMappingURL=properties.js.map","/**\n *  All errors in ethers include properties to ensure they are both\n *  human-readable (i.e. ``.message``) and machine-readable (i.e. ``.code``).\n *\n *  The [[isError]] function can be used to check the error ``code`` and\n *  provide a type guard for the properties present on that error interface.\n *\n *  @_section: api/utils/errors:Errors  [about-errors]\n */\nimport { version } from \"../_version.js\";\nimport { defineProperties } from \"./properties.js\";\nfunction stringify(value) {\n    if (value == null) {\n        return \"null\";\n    }\n    if (Array.isArray(value)) {\n        return \"[ \" + (value.map(stringify)).join(\", \") + \" ]\";\n    }\n    if (value instanceof Uint8Array) {\n        const HEX = \"0123456789abcdef\";\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n    if (typeof (value) === \"object\" && typeof (value.toJSON) === \"function\") {\n        return stringify(value.toJSON());\n    }\n    switch (typeof (value)) {\n        case \"boolean\":\n        case \"symbol\":\n            return value.toString();\n        case \"bigint\":\n            return BigInt(value).toString();\n        case \"number\":\n            return (value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{ \" + keys.map((k) => `${stringify(k)}: ${stringify(value[k])}`).join(\", \") + \" }\";\n        }\n    }\n    return `[ COULD NOT SERIALIZE ]`;\n}\n/**\n *  Returns true if the %%error%% matches an error thrown by ethers\n *  that matches the error %%code%%.\n *\n *  In TypeScript environments, this can be used to check that %%error%%\n *  matches an EthersError type, which means the expected properties will\n *  be set.\n *\n *  @See [ErrorCodes](api:ErrorCode)\n *  @example\n *    try {\n *      // code....\n *    } catch (e) {\n *      if (isError(e, \"CALL_EXCEPTION\")) {\n *          // The Type Guard has validated this object\n *          console.log(e.data);\n *      }\n *    }\n */\nexport function isError(error, code) {\n    return (error && error.code === code);\n}\n/**\n *  Returns true if %%error%% is a [[CallExceptionError].\n */\nexport function isCallException(error) {\n    return isError(error, \"CALL_EXCEPTION\");\n}\n/**\n *  Returns a new Error configured to the format ethers emits errors, with\n *  the %%message%%, [[api:ErrorCode]] %%code%% and additional properties\n *  for the corresponding EthersError.\n *\n *  Each error in ethers includes the version of ethers, a\n *  machine-readable [[ErrorCode]], and depending on %%code%%, additional\n *  required properties. The error message will also include the %%message%%,\n *  ethers version, %%code%% and all additional properties, serialized.\n */\nexport function makeError(message, code, info) {\n    let shortMessage = message;\n    {\n        const details = [];\n        if (info) {\n            if (\"message\" in info || \"code\" in info || \"name\" in info) {\n                throw new Error(`value will overwrite populated values: ${stringify(info)}`);\n            }\n            for (const key in info) {\n                if (key === \"shortMessage\") {\n                    continue;\n                }\n                const value = (info[key]);\n                //                try {\n                details.push(key + \"=\" + stringify(value));\n                //                } catch (error: any) {\n                //                console.log(\"MMM\", error.message);\n                //                    details.push(key + \"=[could not serialize object]\");\n                //                }\n            }\n        }\n        details.push(`code=${code}`);\n        details.push(`version=${version}`);\n        if (details.length) {\n            message += \" (\" + details.join(\", \") + \")\";\n        }\n    }\n    let error;\n    switch (code) {\n        case \"INVALID_ARGUMENT\":\n            error = new TypeError(message);\n            break;\n        case \"NUMERIC_FAULT\":\n        case \"BUFFER_OVERRUN\":\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n    defineProperties(error, { code });\n    if (info) {\n        Object.assign(error, info);\n    }\n    if (error.shortMessage == null) {\n        defineProperties(error, { shortMessage });\n    }\n    return error;\n}\n/**\n *  Throws an EthersError with %%message%%, %%code%% and additional error\n *  %%info%% when %%check%% is falsish..\n *\n *  @see [[api:makeError]]\n */\nexport function assert(check, message, code, info) {\n    if (!check) {\n        throw makeError(message, code, info);\n    }\n}\n/**\n *  A simple helper to simply ensuring provided arguments match expected\n *  constraints, throwing if not.\n *\n *  In TypeScript environments, the %%check%% has been asserted true, so\n *  any further code does not need additional compile-time checks.\n */\nexport function assertArgument(check, message, name, value) {\n    assert(check, message, \"INVALID_ARGUMENT\", { argument: name, value: value });\n}\nexport function assertArgumentCount(count, expectedCount, message) {\n    if (message == null) {\n        message = \"\";\n    }\n    if (message) {\n        message = \": \" + message;\n    }\n    assert(count >= expectedCount, \"missing arguemnt\" + message, \"MISSING_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n    assert(count <= expectedCount, \"too many arguments\" + message, \"UNEXPECTED_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n}\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") {\n            throw new Error(\"bad\");\n        }\n        ;\n        /* c8 ignore stop */\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301);\n            /* c8 ignore start */\n            if (check !== expected) {\n                throw new Error(\"broken\");\n            }\n            /* c8 ignore stop */\n        }\n        accum.push(form);\n    }\n    catch (error) { }\n    return accum;\n}, []);\n/**\n *  Throws if the normalization %%form%% is not supported.\n */\nexport function assertNormalize(form) {\n    assert(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"String.prototype.normalize\", info: { form }\n    });\n}\n/**\n *  Many classes use file-scoped values to guard the constructor,\n *  making it effectively private. This facilitates that pattern\n *  by ensuring the %%givenGaurd%% matches the file-scoped %%guard%%,\n *  throwing if not, indicating the %%className%% if provided.\n */\nexport function assertPrivate(givenGuard, guard, className) {\n    if (className == null) {\n        className = \"\";\n    }\n    if (givenGuard !== guard) {\n        let method = className, operation = \"new\";\n        if (className) {\n            method += \".\";\n            operation += \" \" + className;\n        }\n        assert(false, `private constructor; use ${method}from* methods`, \"UNSUPPORTED_OPERATION\", {\n            operation\n        });\n    }\n}\n//# sourceMappingURL=errors.js.map","/**\n *  Some data helpers.\n *\n *\n *  @_subsection api/utils:Data Helpers  [about-data]\n */\nimport { assert, assertArgument } from \"./errors.js\";\nfunction _getBytes(value, name, copy) {\n    if (value instanceof Uint8Array) {\n        if (copy) {\n            return new Uint8Array(value);\n        }\n        return value;\n    }\n    if (typeof (value) === \"string\" && value.match(/^0x(?:[0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n    assertArgument(false, \"invalid BytesLike value\", name || \"value\", value);\n}\n/**\n *  Get a typed Uint8Array for %%value%%. If already a Uint8Array\n *  the original %%value%% is returned; if a copy is required use\n *  [[getBytesCopy]].\n *\n *  @see: getBytesCopy\n */\nexport function getBytes(value, name) {\n    return _getBytes(value, name, false);\n}\n/**\n *  Get a typed Uint8Array for %%value%%, creating a copy if necessary\n *  to prevent any modifications of the returned value from being\n *  reflected elsewhere.\n *\n *  @see: getBytes\n */\nexport function getBytesCopy(value, name) {\n    return _getBytes(value, name, true);\n}\n/**\n *  Returns true if %%value%% is a valid [[HexString]].\n *\n *  If %%length%% is ``true`` or a //number//, it also checks that\n *  %%value%% is a valid [[DataHexString]] of %%length%% (if a //number//)\n *  bytes of data (e.g. ``0x1234`` is 2 bytes).\n */\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (typeof (length) === \"number\" && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    if (length === true && (value.length % 2) !== 0) {\n        return false;\n    }\n    return true;\n}\n/**\n *  Returns true if %%value%% is a valid representation of arbitrary\n *  data (i.e. a valid [[DataHexString]] or a Uint8Array).\n */\nexport function isBytesLike(value) {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\nconst HexCharacters = \"0123456789abcdef\";\n/**\n *  Returns a [[DataHexString]] representation of %%data%%.\n */\nexport function hexlify(data) {\n    const bytes = getBytes(data);\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n/**\n *  Returns a [[DataHexString]] by concatenating all values\n *  within %%data%%.\n */\nexport function concat(datas) {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\n/**\n *  Returns the length of %%data%%, in bytes.\n */\nexport function dataLength(data) {\n    if (isHexString(data, true)) {\n        return (data.length - 2) / 2;\n    }\n    return getBytes(data).length;\n}\n/**\n *  Returns a [[DataHexString]] by slicing %%data%% from the %%start%%\n *  offset to the %%end%% offset.\n *\n *  By default %%start%% is 0 and %%end%% is the length of %%data%%.\n */\nexport function dataSlice(data, start, end) {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0 : start, (end == null) ? bytes.length : end));\n}\n/**\n *  Return the [[DataHexString]] result by stripping all **leading**\n ** zero bytes from %%data%%.\n */\nexport function stripZerosLeft(data) {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith(\"00\")) {\n        bytes = bytes.substring(2);\n    }\n    return \"0x\" + bytes;\n}\nfunction zeroPad(data, length, left) {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1\n    });\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    }\n    else {\n        result.set(bytes, 0);\n    }\n    return hexlify(result);\n}\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **left**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **values** are in Solidity\n *  (e.g. ``uint128``).\n */\nexport function zeroPadValue(data, length) {\n    return zeroPad(data, length, true);\n}\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **right**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **bytes** are in Solidity\n *  (e.g. ``bytes16``).\n */\nexport function zeroPadBytes(data, length) {\n    return zeroPad(data, length, false);\n}\n//# sourceMappingURL=data.js.map","/**\n *  Some mathematic operations.\n *\n *  @_subsection: api/utils:Math Helpers  [about-maths]\n */\nimport { hexlify, isBytesLike } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n/**\n *  Convert %%value%% from a twos-compliment representation of %%width%%\n *  bits to its value.\n *\n *  If the highest bit is ``1``, the result will be negative.\n */\nexport function fromTwos(_value, _width) {\n    const value = getUint(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n    assert((value >> width) === BN_0, \"overflow\", \"NUMERIC_FAULT\", {\n        operation: \"fromTwos\", fault: \"overflow\", value: _value\n    });\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -(((~value) & mask) + BN_1);\n    }\n    return value;\n}\n/**\n *  Convert %%value%% to a twos-compliment representation of\n *  %%width%% bits.\n *\n *  The result will always be positive.\n */\nexport function toTwos(_value, _width) {\n    let value = getBigInt(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n    const limit = (BN_1 << (width - BN_1));\n    if (value < BN_0) {\n        value = -value;\n        assert(value <= limit, \"too low\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return ((~value) & mask) + BN_1;\n    }\n    else {\n        assert(value < limit, \"too high\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n    }\n    return value;\n}\n/**\n *  Mask %%value%% with a bitmask of %%bits%% ones.\n */\nexport function mask(_value, _bits) {\n    const value = getUint(_value, \"value\");\n    const bits = BigInt(getNumber(_bits, \"bits\"));\n    return value & ((BN_1 << bits) - BN_1);\n}\n/**\n *  Gets a BigInt from %%value%%. If it is an invalid value for\n *  a BigInt, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getBigInt(value, name) {\n    switch (typeof (value)) {\n        case \"bigint\": return value;\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return BigInt(value);\n        case \"string\":\n            try {\n                if (value === \"\") {\n                    throw new Error(\"empty string\");\n                }\n                if (value[0] === \"-\" && value[1] !== \"-\") {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            }\n            catch (e) {\n                assertArgument(false, `invalid BigNumberish string: ${e.message}`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid BigNumberish value\", name || \"value\", value);\n}\n/**\n *  Returns %%value%% as a bigint, validating it is valid as a bigint\n *  value and that it is positive.\n */\nexport function getUint(value, name) {\n    const result = getBigInt(value, name);\n    assert(result >= BN_0, \"unsigned value cannot be negative\", \"NUMERIC_FAULT\", {\n        fault: \"overflow\", operation: \"getUint\", value\n    });\n    return result;\n}\nconst Nibbles = \"0123456789abcdef\";\n/*\n * Converts %%value%% to a BigInt. If %%value%% is a Uint8Array, it\n * is treated as Big Endian data.\n */\nexport function toBigInt(value) {\n    if (value instanceof Uint8Array) {\n        let result = \"0x0\";\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n    return getBigInt(value);\n}\n/**\n *  Gets a //number// from %%value%%. If it is an invalid value for\n *  a //number//, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getNumber(value, name) {\n    switch (typeof (value)) {\n        case \"bigint\":\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return Number(value);\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return value;\n        case \"string\":\n            try {\n                if (value === \"\") {\n                    throw new Error(\"empty string\");\n                }\n                return getNumber(BigInt(value), name);\n            }\n            catch (e) {\n                assertArgument(false, `invalid numeric string: ${e.message}`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid numeric value\", name || \"value\", value);\n}\n/**\n *  Converts %%value%% to a number. If %%value%% is a Uint8Array, it\n *  is treated as Big Endian data. Throws if the value is not safe.\n */\nexport function toNumber(value) {\n    return getNumber(toBigInt(value));\n}\n/**\n *  Converts %%value%% to a Big Endian hexstring, optionally padded to\n *  %%width%% bytes.\n */\nexport function toBeHex(_value, _width) {\n    const value = getUint(_value, \"value\");\n    let result = value.toString(16);\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) {\n            result = \"0\" + result;\n        }\n    }\n    else {\n        const width = getNumber(_width, \"width\");\n        assert(width * 2 >= result.length, `value exceeds width (${width} bytes)`, \"NUMERIC_FAULT\", {\n            operation: \"toBeHex\",\n            fault: \"overflow\",\n            value: _value\n        });\n        // Pad the value to the required width\n        while (result.length < (width * 2)) {\n            result = \"0\" + result;\n        }\n    }\n    return \"0x\" + result;\n}\n/**\n *  Converts %%value%% to a Big Endian Uint8Array.\n */\nexport function toBeArray(_value) {\n    const value = getUint(_value, \"value\");\n    if (value === BN_0) {\n        return new Uint8Array([]);\n    }\n    let hex = value.toString(16);\n    if (hex.length % 2) {\n        hex = \"0\" + hex;\n    }\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n    return result;\n}\n/**\n *  Returns a [[HexString]] for %%value%% safe to use as a //Quantity//.\n *\n *  A //Quantity// does not have and leading 0 values unless the value is\n *  the literal value `0x0`. This is most commonly used for JSSON-RPC\n *  numeric values.\n */\nexport function toQuantity(value) {\n    let result = hexlify(isBytesLike(value) ? value : toBeArray(value)).substring(2);\n    while (result.startsWith(\"0\")) {\n        result = result.substring(1);\n    }\n    if (result === \"\") {\n        result = \"0\";\n    }\n    return \"0x\" + result;\n}\n//# sourceMappingURL=maths.js.map","import { defineProperties, concat, getBytesCopy, getNumber, hexlify, toBeArray, toBigInt, toNumber, assert, assertArgument\n/*, isError*/\n } from \"../../utils/index.js\";\n/**\n * @_ignore:\n */\nexport const WordSize = 32;\nconst Padding = new Uint8Array(WordSize);\n// Properties used to immediate pass through to the underlying object\n// - `then` is used to detect if an object is a Promise for await\nconst passProperties = [\"then\"];\nconst _guard = {};\nconst resultNames = new WeakMap();\nfunction getNames(result) {\n    return resultNames.get(result);\n}\nfunction setNames(result, names) {\n    resultNames.set(result, names);\n}\nfunction throwError(name, error) {\n    const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${name}`);\n    wrapped.error = error;\n    throw wrapped;\n}\nfunction toObject(names, items, deep) {\n    if (names.indexOf(null) >= 0) {\n        return items.map((item, index) => {\n            if (item instanceof Result) {\n                return toObject(getNames(item), item, deep);\n            }\n            return item;\n        });\n    }\n    return names.reduce((accum, name, index) => {\n        let item = items.getValue(name);\n        if (!(name in accum)) {\n            if (deep && item instanceof Result) {\n                item = toObject(getNames(item), item, deep);\n            }\n            accum[name] = item;\n        }\n        return accum;\n    }, {});\n}\n/**\n *  A [[Result]] is a sub-class of Array, which allows accessing any\n *  of its values either positionally by its index or, if keys are\n *  provided by its name.\n *\n *  @_docloc: api/abi\n */\nexport class Result extends Array {\n    // No longer used; but cannot be removed as it will remove the\n    // #private field from the .d.ts which may break backwards\n    // compatibility\n    #names;\n    /**\n     *  @private\n     */\n    constructor(...args) {\n        // To properly sub-class Array so the other built-in\n        // functions work, the constructor has to behave fairly\n        // well. So, in the event we are created via fromItems()\n        // we build the read-only Result object we want, but on\n        // any other input, we use the default constructor\n        // constructor(guard: any, items: Array<any>, keys?: Array<null | string>);\n        const guard = args[0];\n        let items = args[1];\n        let names = (args[2] || []).slice();\n        let wrap = true;\n        if (guard !== _guard) {\n            items = args;\n            names = [];\n            wrap = false;\n        }\n        // Can't just pass in ...items since an array of length 1\n        // is a special case in the super.\n        super(items.length);\n        items.forEach((item, index) => { this[index] = item; });\n        // Find all unique keys\n        const nameCounts = names.reduce((accum, name) => {\n            if (typeof (name) === \"string\") {\n                accum.set(name, (accum.get(name) || 0) + 1);\n            }\n            return accum;\n        }, (new Map()));\n        // Remove any key thats not unique\n        setNames(this, Object.freeze(items.map((item, index) => {\n            const name = names[index];\n            if (name != null && nameCounts.get(name) === 1) {\n                return name;\n            }\n            return null;\n        })));\n        // Dummy operations to prevent TypeScript from complaining\n        this.#names = [];\n        if (this.#names == null) {\n            void (this.#names);\n        }\n        if (!wrap) {\n            return;\n        }\n        // A wrapped Result is immutable\n        Object.freeze(this);\n        // Proxy indices and names so we can trap deferred errors\n        const proxy = new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof (prop) === \"string\") {\n                    // Index accessor\n                    if (prop.match(/^[0-9]+$/)) {\n                        const index = getNumber(prop, \"%index\");\n                        if (index < 0 || index >= this.length) {\n                            throw new RangeError(\"out of result range\");\n                        }\n                        const item = target[index];\n                        if (item instanceof Error) {\n                            throwError(`index ${index}`, item);\n                        }\n                        return item;\n                    }\n                    // Pass important checks (like `then` for Promise) through\n                    if (passProperties.indexOf(prop) >= 0) {\n                        return Reflect.get(target, prop, receiver);\n                    }\n                    const value = target[prop];\n                    if (value instanceof Function) {\n                        // Make sure functions work with private variables\n                        // See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#no_private_property_forwarding\n                        return function (...args) {\n                            return value.apply((this === receiver) ? target : this, args);\n                        };\n                    }\n                    else if (!(prop in target)) {\n                        // Possible name accessor\n                        return target.getValue.apply((this === receiver) ? target : this, [prop]);\n                    }\n                }\n                return Reflect.get(target, prop, receiver);\n            }\n        });\n        setNames(proxy, getNames(this));\n        return proxy;\n    }\n    /**\n     *  Returns the Result as a normal Array. If %%deep%%, any children\n     *  which are Result objects are also converted to a normal Array.\n     *\n     *  This will throw if there are any outstanding deferred\n     *  errors.\n     */\n    toArray(deep) {\n        const result = [];\n        this.forEach((item, index) => {\n            if (item instanceof Error) {\n                throwError(`index ${index}`, item);\n            }\n            if (deep && item instanceof Result) {\n                item = item.toArray(deep);\n            }\n            result.push(item);\n        });\n        return result;\n    }\n    /**\n     *  Returns the Result as an Object with each name-value pair. If\n     *  %%deep%%, any children which are Result objects are also\n     *  converted to an Object.\n     *\n     *  This will throw if any value is unnamed, or if there are\n     *  any outstanding deferred errors.\n     */\n    toObject(deep) {\n        const names = getNames(this);\n        return names.reduce((accum, name, index) => {\n            assert(name != null, `value at index ${index} unnamed`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"toObject()\"\n            });\n            return toObject(names, this, deep);\n        }, {});\n    }\n    /**\n     *  @_ignore\n     */\n    slice(start, end) {\n        if (start == null) {\n            start = 0;\n        }\n        if (start < 0) {\n            start += this.length;\n            if (start < 0) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.length;\n        }\n        if (end < 0) {\n            end += this.length;\n            if (end < 0) {\n                end = 0;\n            }\n        }\n        if (end > this.length) {\n            end = this.length;\n        }\n        const _names = getNames(this);\n        const result = [], names = [];\n        for (let i = start; i < end; i++) {\n            result.push(this[i]);\n            names.push(_names[i]);\n        }\n        return new Result(_guard, result, names);\n    }\n    /**\n     *  @_ignore\n     */\n    filter(callback, thisArg) {\n        const _names = getNames(this);\n        const result = [], names = [];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${i}`, item);\n            }\n            if (callback.call(thisArg, item, i, this)) {\n                result.push(item);\n                names.push(_names[i]);\n            }\n        }\n        return new Result(_guard, result, names);\n    }\n    /**\n     *  @_ignore\n     */\n    map(callback, thisArg) {\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${i}`, item);\n            }\n            result.push(callback.call(thisArg, item, i, this));\n        }\n        return result;\n    }\n    /**\n     *  Returns the value for %%name%%.\n     *\n     *  Since it is possible to have a key whose name conflicts with\n     *  a method on a [[Result]] or its superclass Array, or any\n     *  JavaScript keyword, this ensures all named values are still\n     *  accessible by name.\n     */\n    getValue(name) {\n        const index = getNames(this).indexOf(name);\n        if (index === -1) {\n            return undefined;\n        }\n        const value = this[index];\n        if (value instanceof Error) {\n            throwError(`property ${JSON.stringify(name)}`, value.error);\n        }\n        return value;\n    }\n    /**\n     *  Creates a new [[Result]] for %%items%% with each entry\n     *  also accessible by its corresponding name in %%keys%%.\n     */\n    static fromItems(items, keys) {\n        return new Result(_guard, items, keys);\n    }\n}\n/**\n *  Returns all errors found in a [[Result]].\n *\n *  Since certain errors encountered when creating a [[Result]] do\n *  not impact the ability to continue parsing data, they are\n *  deferred until they are actually accessed. Hence a faulty string\n *  in an Event that is never used does not impact the program flow.\n *\n *  However, sometimes it may be useful to access, identify or\n *  validate correctness of a [[Result]].\n *\n *  @_docloc api/abi\n */\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nfunction getValue(value) {\n    let bytes = toBeArray(value);\n    assert(bytes.length <= WordSize, \"value out-of-bounds\", \"BUFFER_OVERRUN\", { buffer: bytes, length: WordSize, offset: bytes.length });\n    if (bytes.length !== WordSize) {\n        bytes = getBytesCopy(concat([Padding.slice(bytes.length % WordSize), bytes]));\n    }\n    return bytes;\n}\n/**\n *  @_ignore\n */\nexport class Coder {\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    name;\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    type;\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    localName;\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    dynamic;\n    constructor(name, type, localName, dynamic) {\n        defineProperties(this, { name, type, localName, dynamic }, {\n            name: \"string\", type: \"string\", localName: \"string\", dynamic: \"boolean\"\n        });\n    }\n    _throwError(message, value) {\n        assertArgument(false, message, this.localName, value);\n    }\n}\n/**\n *  @_ignore\n */\nexport class Writer {\n    // An array of WordSize lengthed objects to concatenation\n    #data;\n    #dataLength;\n    constructor() {\n        this.#data = [];\n        this.#dataLength = 0;\n    }\n    get data() {\n        return concat(this.#data);\n    }\n    get length() { return this.#dataLength; }\n    #writeData(data) {\n        this.#data.push(data);\n        this.#dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this.#writeData(getBytesCopy(writer.data));\n    }\n    // Arrayish item; pad on the right to *nearest* WordSize\n    writeBytes(value) {\n        let bytes = getBytesCopy(value);\n        const paddingOffset = bytes.length % WordSize;\n        if (paddingOffset) {\n            bytes = getBytesCopy(concat([bytes, Padding.slice(paddingOffset)]));\n        }\n        return this.#writeData(bytes);\n    }\n    // Numeric item; pad on the left *to* WordSize\n    writeValue(value) {\n        return this.#writeData(getValue(value));\n    }\n    // Inserts a numeric place-holder, returning a callback that can\n    // be used to asjust the value later\n    writeUpdatableValue() {\n        const offset = this.#data.length;\n        this.#data.push(Padding);\n        this.#dataLength += WordSize;\n        return (value) => {\n            this.#data[offset] = getValue(value);\n        };\n    }\n}\n/**\n *  @_ignore\n */\nexport class Reader {\n    // Allows incomplete unpadded data to be read; otherwise an error\n    // is raised if attempting to overrun the buffer. This is required\n    // to deal with an old Solidity bug, in which event data for\n    // external (not public thoguh) was tightly packed.\n    allowLoose;\n    #data;\n    #offset;\n    #bytesRead;\n    #parent;\n    #maxInflation;\n    constructor(data, allowLoose, maxInflation) {\n        defineProperties(this, { allowLoose: !!allowLoose });\n        this.#data = getBytesCopy(data);\n        this.#bytesRead = 0;\n        this.#parent = null;\n        this.#maxInflation = (maxInflation != null) ? maxInflation : 1024;\n        this.#offset = 0;\n    }\n    get data() { return hexlify(this.#data); }\n    get dataLength() { return this.#data.length; }\n    get consumed() { return this.#offset; }\n    get bytes() { return new Uint8Array(this.#data); }\n    #incrementBytesRead(count) {\n        if (this.#parent) {\n            return this.#parent.#incrementBytesRead(count);\n        }\n        this.#bytesRead += count;\n        // Check for excessive inflation (see: #4537)\n        assert(this.#maxInflation < 1 || this.#bytesRead <= this.#maxInflation * this.dataLength, `compressed ABI data exceeds inflation ratio of ${this.#maxInflation} ( see: https:/\\/github.com/ethers-io/ethers.js/issues/4537 )`, \"BUFFER_OVERRUN\", {\n            buffer: getBytesCopy(this.#data), offset: this.#offset,\n            length: count, info: {\n                bytesRead: this.#bytesRead,\n                dataLength: this.dataLength\n            }\n        });\n    }\n    #peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / WordSize) * WordSize;\n        if (this.#offset + alignedLength > this.#data.length) {\n            if (this.allowLoose && loose && this.#offset + length <= this.#data.length) {\n                alignedLength = length;\n            }\n            else {\n                assert(false, \"data out-of-bounds\", \"BUFFER_OVERRUN\", {\n                    buffer: getBytesCopy(this.#data),\n                    length: this.#data.length,\n                    offset: this.#offset + alignedLength\n                });\n            }\n        }\n        return this.#data.slice(this.#offset, this.#offset + alignedLength);\n    }\n    // Create a sub-reader with the same underlying data, but offset\n    subReader(offset) {\n        const reader = new Reader(this.#data.slice(this.#offset + offset), this.allowLoose, this.#maxInflation);\n        reader.#parent = this;\n        return reader;\n    }\n    // Read bytes\n    readBytes(length, loose) {\n        let bytes = this.#peekBytes(0, length, !!loose);\n        this.#incrementBytesRead(length);\n        this.#offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    // Read a numeric values\n    readValue() {\n        return toBigInt(this.readBytes(WordSize));\n    }\n    readIndex() {\n        return toNumber(this.readBytes(WordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/**\n *  Cryptographic hashing functions\n *\n *  @_subsection: api/crypto:Hash Functions [about-crypto-hashing]\n */\nimport { keccak_256 } from \"@noble/hashes/sha3\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\nlet locked = false;\nconst _keccak256 = function (data) {\n    return keccak_256(data);\n};\nlet __keccak256 = _keccak256;\n/**\n *  Compute the cryptographic KECCAK256 hash of %%data%%.\n *\n *  The %%data%% **must** be a data representation, to compute the\n *  hash of UTF-8 data use the [[id]] function.\n *\n *  @returns DataHexstring\n *  @example:\n *    keccak256(\"0x\")\n *    //_result:\n *\n *    keccak256(\"0x1337\")\n *    //_result:\n *\n *    keccak256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n *    // Strings are assumed to be DataHexString, otherwise it will\n *    // throw. To hash UTF-8 data, see the note above.\n *    keccak256(\"Hello World\")\n *    //_error:\n */\nexport function keccak256(_data) {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function () { locked = true; };\nkeccak256.register = function (func) {\n    if (locked) {\n        throw new TypeError(\"keccak256 is locked\");\n    }\n    __keccak256 = func;\n};\nObject.freeze(keccak256);\n//# sourceMappingURL=keccak.js.map","import { keccak256 } from \"../crypto/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\nconst BN_0 = BigInt(0);\nconst BN_36 = BigInt(36);\nfunction getChecksumAddress(address) {\n    //    if (!isHexString(address, 20)) {\n    //        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    //    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = getBytes(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\n// i.e. Math.floor(Math.log10(Number.MAX_SAFE_INTEGER));\nconst safeDigits = 15;\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nconst Base36 = (function () {\n    ;\n    const result = {};\n    for (let i = 0; i < 36; i++) {\n        const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n        result[key] = BigInt(i);\n    }\n    return result;\n})();\nfunction fromBase36(value) {\n    value = value.toLowerCase();\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n}\n/**\n *  Returns a normalized and checksumed address for %%address%%.\n *  This accepts non-checksum addresses, checksum addresses and\n *  [[getIcapAddress]] formats.\n *\n *  The checksum in Ethereum uses the capitalization (upper-case\n *  vs lower-case) of the characters within an address to encode\n *  its checksum, which offers, on average, a checksum of 15-bits.\n *\n *  If %%address%% contains both upper-case and lower-case, it is\n *  assumed to already be a checksum address and its checksum is\n *  validated, and if the address fails its expected checksum an\n *  error is thrown.\n *\n *  If you wish the checksum of %%address%% to be ignore, it should\n *  be converted to lower-case (i.e. ``.toLowercase()``) before\n *  being passed in. This should be a very rare situation though,\n *  that you wish to bypass the safegaurds in place to protect\n *  against an address that has been incorrectly copied from another\n *  source.\n *\n *  @example:\n *    // Adds the checksum (via upper-casing specific letters)\n *    getAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\")\n *    //_result:\n *\n *    // Converts ICAP address and adds checksum\n *    getAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if an address contains mixed case,\n *    // but the checksum fails\n *    getAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_error:\n */\nexport function getAddress(address) {\n    assertArgument(typeof (address) === \"string\", \"invalid address\", \"address\", address);\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (!address.startsWith(\"0x\")) {\n            address = \"0x\" + address;\n        }\n        const result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address, \"bad address checksum\", \"address\", address);\n        return result;\n    }\n    // Maybe ICAP? (we only support direct mode)\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        assertArgument(address.substring(2, 4) === ibanChecksum(address), \"bad icap checksum\", \"address\", address);\n        let result = fromBase36(address.substring(4)).toString(16);\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        return getChecksumAddress(\"0x\" + result);\n    }\n    assertArgument(false, \"invalid address\", \"address\", address);\n}\n/**\n *  The [ICAP Address format](link-icap) format is an early checksum\n *  format which attempts to be compatible with the banking\n *  industry [IBAN format](link-wiki-iban) for bank accounts.\n *\n *  It is no longer common or a recommended format.\n *\n *  @example:\n *    getIcapAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\");\n *    //_result:\n *\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if the ICAP checksum is wrong\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK37\");\n *    //_error:\n */\nexport function getIcapAddress(address) {\n    //let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    let base36 = BigInt(getAddress(address)).toString(36).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n//# sourceMappingURL=address.js.map","/**\n *  A Typed object allows a value to have its type explicitly\n *  specified.\n *\n *  For example, in Solidity, the value ``45`` could represent a\n *  ``uint8`` or a ``uint256``. The value ``0x1234`` could represent\n *  a ``bytes2`` or ``bytes``.\n *\n *  Since JavaScript has no meaningful way to explicitly inform any\n *  APIs which what the type is, this allows transparent interoperation\n *  with Soldity.\n *\n *  @_subsection: api/abi:Typed Values\n */\nimport { assertPrivate, defineProperties } from \"../utils/index.js\";\nconst _gaurd = {};\nfunction n(value, width) {\n    let signed = false;\n    if (width < 0) {\n        signed = true;\n        width *= -1;\n    }\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `${signed ? \"\" : \"u\"}int${width}`, value, { signed, width });\n}\nfunction b(value, size) {\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `bytes${(size) ? size : \"\"}`, value, { size });\n}\nconst _typedSymbol = Symbol.for(\"_ethers_typed\");\n/**\n *  The **Typed** class to wrap values providing explicit type information.\n */\nexport class Typed {\n    /**\n     *  The type, as a Solidity-compatible type.\n     */\n    type;\n    /**\n     *  The actual value.\n     */\n    value;\n    #options;\n    /**\n     *  @_ignore:\n     */\n    _typedSymbol;\n    /**\n     *  @_ignore:\n     */\n    constructor(gaurd, type, value, options) {\n        if (options == null) {\n            options = null;\n        }\n        assertPrivate(_gaurd, gaurd, \"Typed\");\n        defineProperties(this, { _typedSymbol, type, value });\n        this.#options = options;\n        // Check the value is valid\n        this.format();\n    }\n    /**\n     *  Format the type as a Human-Readable type.\n     */\n    format() {\n        if (this.type === \"array\") {\n            throw new Error(\"\");\n        }\n        else if (this.type === \"dynamicArray\") {\n            throw new Error(\"\");\n        }\n        else if (this.type === \"tuple\") {\n            return `tuple(${this.value.map((v) => v.format()).join(\",\")})`;\n        }\n        return this.type;\n    }\n    /**\n     *  The default value returned by this type.\n     */\n    defaultValue() {\n        return 0;\n    }\n    /**\n     *  The minimum value for numeric types.\n     */\n    minValue() {\n        return 0;\n    }\n    /**\n     *  The maximum value for numeric types.\n     */\n    maxValue() {\n        return 0;\n    }\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedBigInt]].\n     */\n    isBigInt() {\n        return !!(this.type.match(/^u?int[0-9]+$/));\n    }\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedData]].\n     */\n    isData() {\n        return this.type.startsWith(\"bytes\");\n    }\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedString]].\n     */\n    isString() {\n        return (this.type === \"string\");\n    }\n    /**\n     *  Returns the tuple name, if this is a tuple. Throws otherwise.\n     */\n    get tupleName() {\n        if (this.type !== \"tuple\") {\n            throw TypeError(\"not a tuple\");\n        }\n        return this.#options;\n    }\n    // Returns the length of this type as an array\n    // - `null` indicates the length is unforced, it could be dynamic\n    // - `-1` indicates the length is dynamic\n    // - any other value indicates it is a static array and is its length\n    /**\n     *  Returns the length of the array type or ``-1`` if it is dynamic.\n     *\n     *  Throws if the type is not an array.\n     */\n    get arrayLength() {\n        if (this.type !== \"array\") {\n            throw TypeError(\"not an array\");\n        }\n        if (this.#options === true) {\n            return -1;\n        }\n        if (this.#options === false) {\n            return (this.value).length;\n        }\n        return null;\n    }\n    /**\n     *  Returns a new **Typed** of %%type%% with the %%value%%.\n     */\n    static from(type, value) {\n        return new Typed(_gaurd, type, value);\n    }\n    /**\n     *  Return a new ``uint8`` type for %%v%%.\n     */\n    static uint8(v) { return n(v, 8); }\n    /**\n     *  Return a new ``uint16`` type for %%v%%.\n     */\n    static uint16(v) { return n(v, 16); }\n    /**\n     *  Return a new ``uint24`` type for %%v%%.\n     */\n    static uint24(v) { return n(v, 24); }\n    /**\n     *  Return a new ``uint32`` type for %%v%%.\n     */\n    static uint32(v) { return n(v, 32); }\n    /**\n     *  Return a new ``uint40`` type for %%v%%.\n     */\n    static uint40(v) { return n(v, 40); }\n    /**\n     *  Return a new ``uint48`` type for %%v%%.\n     */\n    static uint48(v) { return n(v, 48); }\n    /**\n     *  Return a new ``uint56`` type for %%v%%.\n     */\n    static uint56(v) { return n(v, 56); }\n    /**\n     *  Return a new ``uint64`` type for %%v%%.\n     */\n    static uint64(v) { return n(v, 64); }\n    /**\n     *  Return a new ``uint72`` type for %%v%%.\n     */\n    static uint72(v) { return n(v, 72); }\n    /**\n     *  Return a new ``uint80`` type for %%v%%.\n     */\n    static uint80(v) { return n(v, 80); }\n    /**\n     *  Return a new ``uint88`` type for %%v%%.\n     */\n    static uint88(v) { return n(v, 88); }\n    /**\n     *  Return a new ``uint96`` type for %%v%%.\n     */\n    static uint96(v) { return n(v, 96); }\n    /**\n     *  Return a new ``uint104`` type for %%v%%.\n     */\n    static uint104(v) { return n(v, 104); }\n    /**\n     *  Return a new ``uint112`` type for %%v%%.\n     */\n    static uint112(v) { return n(v, 112); }\n    /**\n     *  Return a new ``uint120`` type for %%v%%.\n     */\n    static uint120(v) { return n(v, 120); }\n    /**\n     *  Return a new ``uint128`` type for %%v%%.\n     */\n    static uint128(v) { return n(v, 128); }\n    /**\n     *  Return a new ``uint136`` type for %%v%%.\n     */\n    static uint136(v) { return n(v, 136); }\n    /**\n     *  Return a new ``uint144`` type for %%v%%.\n     */\n    static uint144(v) { return n(v, 144); }\n    /**\n     *  Return a new ``uint152`` type for %%v%%.\n     */\n    static uint152(v) { return n(v, 152); }\n    /**\n     *  Return a new ``uint160`` type for %%v%%.\n     */\n    static uint160(v) { return n(v, 160); }\n    /**\n     *  Return a new ``uint168`` type for %%v%%.\n     */\n    static uint168(v) { return n(v, 168); }\n    /**\n     *  Return a new ``uint176`` type for %%v%%.\n     */\n    static uint176(v) { return n(v, 176); }\n    /**\n     *  Return a new ``uint184`` type for %%v%%.\n     */\n    static uint184(v) { return n(v, 184); }\n    /**\n     *  Return a new ``uint192`` type for %%v%%.\n     */\n    static uint192(v) { return n(v, 192); }\n    /**\n     *  Return a new ``uint200`` type for %%v%%.\n     */\n    static uint200(v) { return n(v, 200); }\n    /**\n     *  Return a new ``uint208`` type for %%v%%.\n     */\n    static uint208(v) { return n(v, 208); }\n    /**\n     *  Return a new ``uint216`` type for %%v%%.\n     */\n    static uint216(v) { return n(v, 216); }\n    /**\n     *  Return a new ``uint224`` type for %%v%%.\n     */\n    static uint224(v) { return n(v, 224); }\n    /**\n     *  Return a new ``uint232`` type for %%v%%.\n     */\n    static uint232(v) { return n(v, 232); }\n    /**\n     *  Return a new ``uint240`` type for %%v%%.\n     */\n    static uint240(v) { return n(v, 240); }\n    /**\n     *  Return a new ``uint248`` type for %%v%%.\n     */\n    static uint248(v) { return n(v, 248); }\n    /**\n     *  Return a new ``uint256`` type for %%v%%.\n     */\n    static uint256(v) { return n(v, 256); }\n    /**\n     *  Return a new ``uint256`` type for %%v%%.\n     */\n    static uint(v) { return n(v, 256); }\n    /**\n     *  Return a new ``int8`` type for %%v%%.\n     */\n    static int8(v) { return n(v, -8); }\n    /**\n     *  Return a new ``int16`` type for %%v%%.\n     */\n    static int16(v) { return n(v, -16); }\n    /**\n     *  Return a new ``int24`` type for %%v%%.\n     */\n    static int24(v) { return n(v, -24); }\n    /**\n     *  Return a new ``int32`` type for %%v%%.\n     */\n    static int32(v) { return n(v, -32); }\n    /**\n     *  Return a new ``int40`` type for %%v%%.\n     */\n    static int40(v) { return n(v, -40); }\n    /**\n     *  Return a new ``int48`` type for %%v%%.\n     */\n    static int48(v) { return n(v, -48); }\n    /**\n     *  Return a new ``int56`` type for %%v%%.\n     */\n    static int56(v) { return n(v, -56); }\n    /**\n     *  Return a new ``int64`` type for %%v%%.\n     */\n    static int64(v) { return n(v, -64); }\n    /**\n     *  Return a new ``int72`` type for %%v%%.\n     */\n    static int72(v) { return n(v, -72); }\n    /**\n     *  Return a new ``int80`` type for %%v%%.\n     */\n    static int80(v) { return n(v, -80); }\n    /**\n     *  Return a new ``int88`` type for %%v%%.\n     */\n    static int88(v) { return n(v, -88); }\n    /**\n     *  Return a new ``int96`` type for %%v%%.\n     */\n    static int96(v) { return n(v, -96); }\n    /**\n     *  Return a new ``int104`` type for %%v%%.\n     */\n    static int104(v) { return n(v, -104); }\n    /**\n     *  Return a new ``int112`` type for %%v%%.\n     */\n    static int112(v) { return n(v, -112); }\n    /**\n     *  Return a new ``int120`` type for %%v%%.\n     */\n    static int120(v) { return n(v, -120); }\n    /**\n     *  Return a new ``int128`` type for %%v%%.\n     */\n    static int128(v) { return n(v, -128); }\n    /**\n     *  Return a new ``int136`` type for %%v%%.\n     */\n    static int136(v) { return n(v, -136); }\n    /**\n     *  Return a new ``int144`` type for %%v%%.\n     */\n    static int144(v) { return n(v, -144); }\n    /**\n     *  Return a new ``int52`` type for %%v%%.\n     */\n    static int152(v) { return n(v, -152); }\n    /**\n     *  Return a new ``int160`` type for %%v%%.\n     */\n    static int160(v) { return n(v, -160); }\n    /**\n     *  Return a new ``int168`` type for %%v%%.\n     */\n    static int168(v) { return n(v, -168); }\n    /**\n     *  Return a new ``int176`` type for %%v%%.\n     */\n    static int176(v) { return n(v, -176); }\n    /**\n     *  Return a new ``int184`` type for %%v%%.\n     */\n    static int184(v) { return n(v, -184); }\n    /**\n     *  Return a new ``int92`` type for %%v%%.\n     */\n    static int192(v) { return n(v, -192); }\n    /**\n     *  Return a new ``int200`` type for %%v%%.\n     */\n    static int200(v) { return n(v, -200); }\n    /**\n     *  Return a new ``int208`` type for %%v%%.\n     */\n    static int208(v) { return n(v, -208); }\n    /**\n     *  Return a new ``int216`` type for %%v%%.\n     */\n    static int216(v) { return n(v, -216); }\n    /**\n     *  Return a new ``int224`` type for %%v%%.\n     */\n    static int224(v) { return n(v, -224); }\n    /**\n     *  Return a new ``int232`` type for %%v%%.\n     */\n    static int232(v) { return n(v, -232); }\n    /**\n     *  Return a new ``int240`` type for %%v%%.\n     */\n    static int240(v) { return n(v, -240); }\n    /**\n     *  Return a new ``int248`` type for %%v%%.\n     */\n    static int248(v) { return n(v, -248); }\n    /**\n     *  Return a new ``int256`` type for %%v%%.\n     */\n    static int256(v) { return n(v, -256); }\n    /**\n     *  Return a new ``int256`` type for %%v%%.\n     */\n    static int(v) { return n(v, -256); }\n    /**\n     *  Return a new ``bytes1`` type for %%v%%.\n     */\n    static bytes1(v) { return b(v, 1); }\n    /**\n     *  Return a new ``bytes2`` type for %%v%%.\n     */\n    static bytes2(v) { return b(v, 2); }\n    /**\n     *  Return a new ``bytes3`` type for %%v%%.\n     */\n    static bytes3(v) { return b(v, 3); }\n    /**\n     *  Return a new ``bytes4`` type for %%v%%.\n     */\n    static bytes4(v) { return b(v, 4); }\n    /**\n     *  Return a new ``bytes5`` type for %%v%%.\n     */\n    static bytes5(v) { return b(v, 5); }\n    /**\n     *  Return a new ``bytes6`` type for %%v%%.\n     */\n    static bytes6(v) { return b(v, 6); }\n    /**\n     *  Return a new ``bytes7`` type for %%v%%.\n     */\n    static bytes7(v) { return b(v, 7); }\n    /**\n     *  Return a new ``bytes8`` type for %%v%%.\n     */\n    static bytes8(v) { return b(v, 8); }\n    /**\n     *  Return a new ``bytes9`` type for %%v%%.\n     */\n    static bytes9(v) { return b(v, 9); }\n    /**\n     *  Return a new ``bytes10`` type for %%v%%.\n     */\n    static bytes10(v) { return b(v, 10); }\n    /**\n     *  Return a new ``bytes11`` type for %%v%%.\n     */\n    static bytes11(v) { return b(v, 11); }\n    /**\n     *  Return a new ``bytes12`` type for %%v%%.\n     */\n    static bytes12(v) { return b(v, 12); }\n    /**\n     *  Return a new ``bytes13`` type for %%v%%.\n     */\n    static bytes13(v) { return b(v, 13); }\n    /**\n     *  Return a new ``bytes14`` type for %%v%%.\n     */\n    static bytes14(v) { return b(v, 14); }\n    /**\n     *  Return a new ``bytes15`` type for %%v%%.\n     */\n    static bytes15(v) { return b(v, 15); }\n    /**\n     *  Return a new ``bytes16`` type for %%v%%.\n     */\n    static bytes16(v) { return b(v, 16); }\n    /**\n     *  Return a new ``bytes17`` type for %%v%%.\n     */\n    static bytes17(v) { return b(v, 17); }\n    /**\n     *  Return a new ``bytes18`` type for %%v%%.\n     */\n    static bytes18(v) { return b(v, 18); }\n    /**\n     *  Return a new ``bytes19`` type for %%v%%.\n     */\n    static bytes19(v) { return b(v, 19); }\n    /**\n     *  Return a new ``bytes20`` type for %%v%%.\n     */\n    static bytes20(v) { return b(v, 20); }\n    /**\n     *  Return a new ``bytes21`` type for %%v%%.\n     */\n    static bytes21(v) { return b(v, 21); }\n    /**\n     *  Return a new ``bytes22`` type for %%v%%.\n     */\n    static bytes22(v) { return b(v, 22); }\n    /**\n     *  Return a new ``bytes23`` type for %%v%%.\n     */\n    static bytes23(v) { return b(v, 23); }\n    /**\n     *  Return a new ``bytes24`` type for %%v%%.\n     */\n    static bytes24(v) { return b(v, 24); }\n    /**\n     *  Return a new ``bytes25`` type for %%v%%.\n     */\n    static bytes25(v) { return b(v, 25); }\n    /**\n     *  Return a new ``bytes26`` type for %%v%%.\n     */\n    static bytes26(v) { return b(v, 26); }\n    /**\n     *  Return a new ``bytes27`` type for %%v%%.\n     */\n    static bytes27(v) { return b(v, 27); }\n    /**\n     *  Return a new ``bytes28`` type for %%v%%.\n     */\n    static bytes28(v) { return b(v, 28); }\n    /**\n     *  Return a new ``bytes29`` type for %%v%%.\n     */\n    static bytes29(v) { return b(v, 29); }\n    /**\n     *  Return a new ``bytes30`` type for %%v%%.\n     */\n    static bytes30(v) { return b(v, 30); }\n    /**\n     *  Return a new ``bytes31`` type for %%v%%.\n     */\n    static bytes31(v) { return b(v, 31); }\n    /**\n     *  Return a new ``bytes32`` type for %%v%%.\n     */\n    static bytes32(v) { return b(v, 32); }\n    /**\n     *  Return a new ``address`` type for %%v%%.\n     */\n    static address(v) { return new Typed(_gaurd, \"address\", v); }\n    /**\n     *  Return a new ``bool`` type for %%v%%.\n     */\n    static bool(v) { return new Typed(_gaurd, \"bool\", !!v); }\n    /**\n     *  Return a new ``bytes`` type for %%v%%.\n     */\n    static bytes(v) { return new Typed(_gaurd, \"bytes\", v); }\n    /**\n     *  Return a new ``string`` type for %%v%%.\n     */\n    static string(v) { return new Typed(_gaurd, \"string\", v); }\n    /**\n     *  Return a new ``array`` type for %%v%%, allowing %%dynamic%% length.\n     */\n    static array(v, dynamic) {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"array\", v, dynamic);\n    }\n    /**\n     *  Return a new ``tuple`` type for %%v%%, with the optional %%name%%.\n     */\n    static tuple(v, name) {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"tuple\", v, name);\n    }\n    /**\n     *  Return a new ``uint8`` type for %%v%%.\n     */\n    static overrides(v) {\n        return new Typed(_gaurd, \"overrides\", Object.assign({}, v));\n    }\n    /**\n     *  Returns true only if %%value%% is a [[Typed]] instance.\n     */\n    static isTyped(value) {\n        return (value\n            && typeof (value) === \"object\"\n            && \"_typedSymbol\" in value\n            && value._typedSymbol === _typedSymbol);\n    }\n    /**\n     *  If the value is a [[Typed]] instance, validates the underlying value\n     *  and returns it, otherwise returns value directly.\n     *\n     *  This is useful for functions that with to accept either a [[Typed]]\n     *  object or values.\n     */\n    static dereference(value, type) {\n        if (Typed.isTyped(value)) {\n            if (value.type !== type) {\n                throw new Error(`invalid type: expecetd ${type}, got ${value.type}`);\n            }\n            return value.value;\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=typed.js.map","import { getAddress } from \"../../address/index.js\";\nimport { toBeHex } from \"../../utils/maths.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @_ignore\n */\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, _value) {\n        let value = Typed.dereference(_value, \"string\");\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            return this._throwError(error.message, _value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(toBeHex(reader.readValue(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","import { Coder } from \"./abstract-coder.js\";\n/**\n *  Clones the functionality of an existing Coder, but without a localName\n *\n *  @_ignore\n */\nexport class AnonymousCoder extends Coder {\n    coder;\n    constructor(coder) {\n        super(coder.name, coder.type, \"_\", coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","import { defineProperties, isError, assert, assertArgument, assertArgumentCount } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, Result, WordSize, Writer } from \"./abstract-coder.js\";\nimport { AnonymousCoder } from \"./anonymous.js\";\n/**\n *  @_ignore\n */\nexport function pack(writer, coders, values) {\n    let arrayValues = [];\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            assert(name, \"cannot encode object for signature with missing names\", \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n            assert(!unique[name], \"cannot encode object for signature with duplicate names\", \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        assertArgument(false, \"invalid tuple value\", \"tuple\", values);\n    }\n    assertArgument(coders.length === arrayValues.length, \"types/value length mismatch\", \"tuple\", values);\n    let staticWriter = new Writer();\n    let dynamicWriter = new Writer();\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n/**\n *  @_ignore\n */\nexport function unpack(reader, coders) {\n    let values = [];\n    let keys = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readIndex();\n            let offsetReader = baseReader.subReader(offset);\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value == undefined) {\n            throw new Error(\"investigate\");\n        }\n        values.push(value);\n        keys.push(coder.localName || null);\n    });\n    return Result.fromItems(values, keys);\n}\n/**\n *  @_ignore\n */\nexport class ArrayCoder extends Coder {\n    coder;\n    length;\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        defineProperties(this, { coder, length });\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"array\");\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        assertArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readIndex();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            assert(count * WordSize <= reader.dataLength, \"insufficient data length\", \"BUFFER_OVERRUN\", { buffer: reader.bytes, offset: count * WordSize, length: reader.dataLength });\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return unpack(reader, coders);\n    }\n}\n//# sourceMappingURL=array.js.map","import { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @_ignore\n */\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"bool\");\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return !!reader.readValue();\n    }\n}\n//# sourceMappingURL=boolean.js.map","import { getBytesCopy, hexlify } from \"../../utils/index.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @_ignore\n */\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = getBytesCopy(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readIndex(), true);\n    }\n}\n/**\n *  @_ignore\n */\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return hexlify(super.decode(reader));\n    }\n}\n//# sourceMappingURL=bytes.js.map","import { defineProperties, getBytesCopy, hexlify } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @_ignore\n */\nexport class FixedBytesCoder extends Coder {\n    size;\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        defineProperties(this, { size }, { size: \"number\" });\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, _value) {\n        let data = getBytesCopy(Typed.dereference(_value, this.type));\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", _value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return hexlify(reader.readBytes(this.size));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","import { Coder } from \"./abstract-coder.js\";\nconst Empty = new Uint8Array([]);\n/**\n *  @_ignore\n */\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes(Empty);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return null;\n    }\n}\n//# sourceMappingURL=null.js.map","import { defineProperties, fromTwos, getBigInt, mask, toTwos } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n/**\n *  @_ignore\n */\nexport class NumberCoder extends Coder {\n    size;\n    signed;\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        defineProperties(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, _value) {\n        let value = getBigInt(Typed.dereference(_value, this.type));\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n        }\n        else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        let value = mask(reader.readValue(), this.size * 8);\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=number.js.map","/**\n *  Using strings in Ethereum (or any security-basd system) requires\n *  additional care. These utilities attempt to mitigate some of the\n *  safety issues as well as provide the ability to recover and analyse\n *  strings.\n *\n *  @_subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument, assertNormalize } from \"./errors.js\";\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    assertArgument(false, `invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === \"OVERRUN\") {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === \"OVERLONG\") {\n        assertArgument(typeof (badCodepoint) === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n/**\n *  A handful of popular, built-in UTF-8 error handling strategies.\n *\n *  **``\"error\"``** - throws on ANY illegal UTF-8 sequence or\n *  non-canonical (overlong) codepoints (this is the default)\n *\n *  **``\"ignore\"``** - silently drops any illegal UTF-8 sequence\n *  and accepts non-canonical (overlong) codepoints\n *\n *  **``\"replace\"``** - replace any illegal UTF-8 sequence with the\n *  UTF-8 replacement character (i.e. ``\"\\\\ufffd\"``) and accepts\n *  non-canonical (overlong) codepoints\n *\n *  @returns: Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    const bytes = getBytes(_bytes, \"bytes\");\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes, result);\n            }\n            else {\n                i += onError(\"BAD_PREFIX\", i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(\"OVERRUN\", i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(\"MISSING_CONTINUE\", i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(\"OVERLONG\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n/**\n *  Returns the UTF-8 byte representation of %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8Bytes(str, form) {\n    assertArgument(typeof (str) === \"string\", \"invalid string value\", \"str\", str);\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            assertArgument(i < str.length && ((c2 & 0xfc00) === 0xdc00), \"invalid surrogate pair\", \"str\", str);\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return new Uint8Array(result);\n}\n;\n//export \nfunction _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\n/**\n *  Returns the string represented by the UTF-8 data %%bytes%%.\n *\n *  When %%onError%% function is specified, it is called on UTF-8\n *  errors allowing recovery using the [[Utf8ErrorFunc]] API.\n *  (default: [error](Utf8ErrorFuncs))\n */\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n/**\n *  Returns the UTF-8 code-points for %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8CodePoints(str, form) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","import { toUtf8Bytes, toUtf8String } from \"../../utils/utf8.js\";\nimport { Typed } from \"../typed.js\";\nimport { DynamicBytesCoder } from \"./bytes.js\";\n/**\n *  @_ignore\n */\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, _value) {\n        return super.encode(writer, toUtf8Bytes(Typed.dereference(_value, \"string\")));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","import { defineProperties } from \"../../utils/properties.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\nimport { pack, unpack } from \"./array.js\";\n/**\n *  @_ignore\n */\nexport class TupleCoder extends Coder {\n    coders;\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        defineProperties(this, { coders: Object.freeze(coders.slice()) });\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"tuple\");\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return unpack(reader, this.coders);\n    }\n}\n//# sourceMappingURL=tuple.js.map","import { keccak256 } from \"../crypto/index.js\";\nimport { toUtf8Bytes } from \"../utils/index.js\";\n/**\n *  A simple hashing function which operates on UTF-8 strings to\n *  compute an 32-byte identifier.\n *\n *  This simply computes the [UTF-8 bytes](toUtf8Bytes) and computes\n *  the [[keccak256]].\n *\n *  @example:\n *    id(\"hello world\")\n *    //_result:\n */\nexport function id(value) {\n    return keccak256(toUtf8Bytes(value));\n}\n//# sourceMappingURL=id.js.map","/**\n *  A fragment is a single item from an ABI, which may represent any of:\n *\n *  - [Functions](FunctionFragment)\n *  - [Events](EventFragment)\n *  - [Constructors](ConstructorFragment)\n *  - Custom [Errors](ErrorFragment)\n *  - [Fallback or Receive](FallbackFragment) functions\n *\n *  @_subsection api/abi/abi-coder:Fragments  [about-fragments]\n */\nimport { defineProperties, getBigInt, getNumber, assert, assertPrivate, assertArgument } from \"../utils/index.js\";\nimport { id } from \"../hash/index.js\";\n;\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items) {\n    const result = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\nconst _kwVisibDeploy = \"external public payable override\";\nconst KwVisibDeploy = setify(_kwVisibDeploy.split(\" \"));\n// Visibility Keywords\nconst _kwVisib = \"constant external internal payable private public pure view override\";\nconst KwVisib = setify(_kwVisib.split(\" \"));\nconst _kwTypes = \"constructor error event fallback function receive struct\";\nconst KwTypes = setify(_kwTypes.split(\" \"));\nconst _kwModifiers = \"calldata memory storage payable indexed\";\nconst KwModifiers = setify(_kwModifiers.split(\" \"));\nconst _kwOther = \"tuple returns\";\n// All Keywords\nconst _keywords = [_kwTypes, _kwModifiers, _kwOther, _kwVisib].join(\" \");\nconst Keywords = setify(_keywords.split(\" \"));\n// Single character tokens\nconst SimpleTokens = {\n    \"(\": \"OPEN_PAREN\", \")\": \"CLOSE_PAREN\",\n    \"[\": \"OPEN_BRACKET\", \"]\": \"CLOSE_BRACKET\",\n    \",\": \"COMMA\", \"@\": \"AT\"\n};\n// Parser regexes to consume the next token\nconst regexWhitespacePrefix = new RegExp(\"^(\\\\s*)\");\nconst regexNumberPrefix = new RegExp(\"^([0-9]+)\");\nconst regexIdPrefix = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)\");\n// Parser regexs to check validity\nconst regexId = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)$\");\nconst regexType = new RegExp(\"^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$\");\nclass TokenString {\n    #offset;\n    #tokens;\n    get offset() { return this.#offset; }\n    get length() { return this.#tokens.length - this.#offset; }\n    constructor(tokens) {\n        this.#offset = 0;\n        this.#tokens = tokens.slice();\n    }\n    clone() { return new TokenString(this.#tokens); }\n    reset() { this.#offset = 0; }\n    #subTokenString(from = 0, to = 0) {\n        return new TokenString(this.#tokens.slice(from, to).map((t) => {\n            return Object.freeze(Object.assign({}, t, {\n                match: (t.match - from),\n                linkBack: (t.linkBack - from),\n                linkNext: (t.linkNext - from),\n            }));\n        }));\n    }\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed) {\n        const top = this.peek();\n        if (top.type !== \"KEYWORD\" || !allowed.has(top.text)) {\n            throw new Error(`expected keyword ${top.text}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type) {\n        if (this.peek().type !== type) {\n            const top = this.peek();\n            throw new Error(`expected ${type}; got ${top.type} ${JSON.stringify(top.text)}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen() {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n        }\n        const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n        this.#offset = top.match + 1;\n        return result;\n    }\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams() {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n        }\n        const result = [];\n        while (this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n        }\n        this.#offset = top.match + 1;\n        return result;\n    }\n    // Returns the top Token, throwing if out of tokens\n    peek() {\n        if (this.#offset >= this.#tokens.length) {\n            throw new Error(\"out-of-bounds\");\n        }\n        return this.#tokens[this.#offset];\n    }\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed) {\n        const top = this.peekType(\"KEYWORD\");\n        return (top != null && allowed.has(top)) ? top : null;\n    }\n    // Returns the value of the next token if it is `type`\n    peekType(type) {\n        if (this.length === 0) {\n            return null;\n        }\n        const top = this.peek();\n        return (top.type === type) ? top.text : null;\n    }\n    // Returns the next token; throws if out of tokens\n    pop() {\n        const result = this.peek();\n        this.#offset++;\n        return result;\n    }\n    toString() {\n        const tokens = [];\n        for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${token.type}:${token.text}`);\n        }\n        return `<TokenString ${tokens.join(\" \")}>`;\n    }\n}\nfunction lex(text) {\n    const tokens = [];\n    const throwError = (message) => {\n        const token = (offset < text.length) ? JSON.stringify(text[offset]) : \"$EOI\";\n        throw new Error(`invalid token ${token} at ${offset}: ${message}`);\n    };\n    let brackets = [];\n    let commas = [];\n    let offset = 0;\n    while (offset < text.length) {\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespacePrefix);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n        const token = { depth: brackets.length, linkBack: -1, linkNext: -1, match: -1, type: \"\", text: \"\", offset, value: -1 };\n        tokens.push(token);\n        let type = (SimpleTokens[cur[0]] || \"\");\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n            if (type === \"OPEN_PAREN\") {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n            }\n            else if (type == \"CLOSE_PAREN\") {\n                if (brackets.length === 0) {\n                    throwError(\"no matching open bracket\");\n                }\n                token.match = brackets.pop();\n                (tokens[token.match]).match = tokens.length - 1;\n                token.depth--;\n                token.linkBack = commas.pop();\n                (tokens[token.linkBack]).linkNext = tokens.length - 1;\n            }\n            else if (type === \"COMMA\") {\n                token.linkBack = commas.pop();\n                (tokens[token.linkBack]).linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n            }\n            else if (type === \"OPEN_BRACKET\") {\n                token.type = \"BRACKET\";\n            }\n            else if (type === \"CLOSE_BRACKET\") {\n                // Remove the CLOSE_BRACKET\n                let suffix = tokens.pop().text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === \"NUMBER\") {\n                    const value = tokens.pop().text;\n                    suffix = value + suffix;\n                    (tokens[tokens.length - 1]).value = getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== \"BRACKET\") {\n                    throw new Error(\"missing opening bracket\");\n                }\n                (tokens[tokens.length - 1]).text += suffix;\n            }\n            continue;\n        }\n        match = cur.match(regexIdPrefix);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n            if (Keywords.has(token.text)) {\n                token.type = \"KEYWORD\";\n                continue;\n            }\n            if (token.text.match(regexType)) {\n                token.type = \"TYPE\";\n                continue;\n            }\n            token.type = \"ID\";\n            continue;\n        }\n        match = cur.match(regexNumberPrefix);\n        if (match) {\n            token.text = match[1];\n            token.type = \"NUMBER\";\n            offset += token.text.length;\n            continue;\n        }\n        throw new Error(`unexpected token ${JSON.stringify(cur[0])} at position ${offset}`);\n    }\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set, allowed) {\n    let included = [];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) {\n            included.push(key);\n        }\n    }\n    if (included.length > 1) {\n        throw new Error(`conflicting types: ${included.join(\", \")}`);\n    }\n}\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n// ...the name with an optional type, returning the name\nfunction consumeName(type, tokens) {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${type}, got ${keyword}`);\n        }\n    }\n    return tokens.popType(\"ID\");\n}\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens, allowed) {\n    const keywords = new Set();\n    while (true) {\n        const keyword = tokens.peekType(\"KEYWORD\");\n        if (keyword == null || (allowed && !allowed.has(keyword))) {\n            break;\n        }\n        tokens.pop();\n        if (keywords.has(keyword)) {\n            throw new Error(`duplicate keywords: ${JSON.stringify(keyword)}`);\n        }\n        keywords.add(keyword);\n    }\n    return Object.freeze(keywords);\n}\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens) {\n    let modifiers = consumeKeywords(tokens, KwVisib);\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify(\"constant payable nonpayable\".split(\" \")));\n    allowSingle(modifiers, setify(\"pure view payable nonpayable\".split(\" \")));\n    // Process mutability states\n    if (modifiers.has(\"view\")) {\n        return \"view\";\n    }\n    if (modifiers.has(\"pure\")) {\n        return \"pure\";\n    }\n    if (modifiers.has(\"payable\")) {\n        return \"payable\";\n    }\n    if (modifiers.has(\"nonpayable\")) {\n        return \"nonpayable\";\n    }\n    // Process legacy `constant` last\n    if (modifiers.has(\"constant\")) {\n        return \"view\";\n    }\n    return \"nonpayable\";\n}\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens, allowIndexed) {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n}\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens) {\n    if (tokens.peekType(\"AT\")) {\n        tokens.pop();\n        if (tokens.peekType(\"NUMBER\")) {\n            return getBigInt(tokens.pop().text);\n        }\n        throw new Error(\"invalid gas\");\n    }\n    return null;\n}\nfunction consumeEoi(tokens) {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens at offset ${tokens.offset}: ${tokens.toString()}`);\n    }\n}\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nfunction verifyBasicType(type) {\n    const match = type.match(regexType);\n    assertArgument(match, \"invalid type\", \"type\", type);\n    if (type === \"uint\") {\n        return \"uint256\";\n    }\n    if (type === \"int\") {\n        return \"int256\";\n    }\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        assertArgument(length !== 0 && length <= 32, \"invalid bytes length\", \"type\", type);\n    }\n    else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3]);\n        assertArgument(size !== 0 && size <= 256 && (size % 8) === 0, \"invalid numeric width\", \"type\", type);\n    }\n    return type;\n}\n// Make the Fragment constructors effectively private\nconst _guard = {};\nconst internal = Symbol.for(\"_ethers_internal\");\nconst ParamTypeInternal = \"_ParamTypeInternal\";\nconst ErrorFragmentInternal = \"_ErrorInternal\";\nconst EventFragmentInternal = \"_EventInternal\";\nconst ConstructorFragmentInternal = \"_ConstructorInternal\";\nconst FallbackFragmentInternal = \"_FallbackInternal\";\nconst FunctionFragmentInternal = \"_FunctionInternal\";\nconst StructFragmentInternal = \"_StructInternal\";\n/**\n *  Each input and output of a [[Fragment]] is an Array of **ParamType**.\n */\nexport class ParamType {\n    /**\n     *  The local name of the parameter (or ``\"\"`` if unbound)\n     */\n    name;\n    /**\n     *  The fully qualified type (e.g. ``\"address\"``, ``\"tuple(address)\"``,\n     *  ``\"uint256[3][]\"``)\n     */\n    type;\n    /**\n     *  The base type (e.g. ``\"address\"``, ``\"tuple\"``, ``\"array\"``)\n     */\n    baseType;\n    /**\n     *  True if the parameters is indexed.\n     *\n     *  For non-indexable types this is ``null``.\n     */\n    indexed;\n    /**\n     *  The components for the tuple.\n     *\n     *  For non-tuple types this is ``null``.\n     */\n    components;\n    /**\n     *  The array length, or ``-1`` for dynamic-lengthed arrays.\n     *\n     *  For non-array types this is ``null``.\n     */\n    arrayLength;\n    /**\n     *  The type of each child in the array.\n     *\n     *  For non-array types this is ``null``.\n     */\n    arrayChildren;\n    /**\n     *  @private\n     */\n    constructor(guard, name, type, baseType, indexed, components, arrayLength, arrayChildren) {\n        assertPrivate(guard, _guard, \"ParamType\");\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n        if (components) {\n            components = Object.freeze(components.slice());\n        }\n        if (baseType === \"array\") {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error(\"\");\n            }\n        }\n        else if (arrayLength != null || arrayChildren != null) {\n            throw new Error(\"\");\n        }\n        if (baseType === \"tuple\") {\n            if (components == null) {\n                throw new Error(\"\");\n            }\n        }\n        else if (components != null) {\n            throw new Error(\"\");\n        }\n        defineProperties(this, {\n            name, type, baseType, indexed, components, arrayLength, arrayChildren\n        });\n    }\n    /**\n     *  Return a string representation of this type.\n     *\n     *  For example,\n     *\n     *  ``sighash\" => \"(uint256,address)\"``\n     *\n     *  ``\"minimal\" => \"tuple(uint256,address) indexed\"``\n     *\n     *  ``\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"``\n     */\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            const name = this.name || \"\";\n            if (this.isArray()) {\n                const result = JSON.parse(this.arrayChildren.format(\"json\"));\n                result.name = name;\n                result.type += `[${(this.arrayLength < 0 ? \"\" : String(this.arrayLength))}]`;\n                return JSON.stringify(result);\n            }\n            const result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${(this.arrayLength < 0 ? \"\" : String(this.arrayLength))}]`;\n        }\n        else {\n            if (this.isTuple()) {\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === \"full\") ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== \"sighash\") {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === \"full\" && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    /**\n     *  Returns true if %%this%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that [[arrayChildren]]\n     *  and [[arrayLength]] are non-null.\n     */\n    isArray() {\n        return (this.baseType === \"array\");\n    }\n    /**\n     *  Returns true if %%this%% is a Tuple type.\n     *\n     *  This provides a type gaurd ensuring that [[components]]\n     *  is non-null.\n     */\n    isTuple() {\n        return (this.baseType === \"tuple\");\n    }\n    /**\n     *  Returns true if %%this%% is an Indexable type.\n     *\n     *  This provides a type gaurd ensuring that [[indexed]]\n     *  is non-null.\n     */\n    isIndexable() {\n        return (this.indexed != null);\n    }\n    /**\n     *  Walks the **ParamType** with %%value%%, calling %%process%%\n     *  on each type, destructing the %%value%% recursively.\n     */\n    walk(value, process) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invalid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v) => (_this.arrayChildren.walk(v, process)));\n        }\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invalid tuple value\");\n            }\n            if (value.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v, i) => (_this.components[i].walk(v, process)));\n        }\n        return process(this.type, value);\n    }\n    #walkAsync(promises, value, process, setValue) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invalid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const childType = this.arrayChildren;\n            const result = value.slice();\n            result.forEach((value, index) => {\n                childType.#walkAsync(promises, value, process, (value) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n        if (this.isTuple()) {\n            const components = this.components;\n            // Convert the object into an array\n            let result;\n            if (Array.isArray(value)) {\n                result = value.slice();\n            }\n            else {\n                if (value == null || typeof (value) !== \"object\") {\n                    throw new Error(\"invalid tuple value\");\n                }\n                result = components.map((param) => {\n                    if (!param.name) {\n                        throw new Error(\"cannot use object value with unnamed components\");\n                    }\n                    if (!(param.name in value)) {\n                        throw new Error(`missing value for component ${param.name}`);\n                    }\n                    return value[param.name];\n                });\n            }\n            if (result.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            result.forEach((value, index) => {\n                components[index].#walkAsync(promises, value, process, (value) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n        const result = process(this.type, value);\n        if (result.then) {\n            promises.push((async function () { setValue(await result); })());\n        }\n        else {\n            setValue(result);\n        }\n    }\n    /**\n     *  Walks the **ParamType** with %%value%%, asynchronously calling\n     *  %%process%% on each type, destructing the %%value%% recursively.\n     *\n     *  This can be used to resolve ENS names by walking and resolving each\n     *  ``\"address\"`` type.\n     */\n    async walkAsync(value, process) {\n        const promises = [];\n        const result = [value];\n        this.#walkAsync(promises, value, process, (value) => {\n            result[0] = value;\n        });\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        return result[0];\n    }\n    /**\n     *  Creates a new **ParamType** for %%obj%%.\n     *\n     *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,\n     *  otherwise the ``indexed`` keyword will throw an error.\n     */\n    static from(obj, allowIndexed) {\n        if (ParamType.isParamType(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            try {\n                return ParamType.from(lex(obj), allowIndexed);\n            }\n            catch (error) {\n                assertArgument(false, \"invalid param type\", \"obj\", obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            let type = \"\", baseType = \"\";\n            let comps = null;\n            if (consumeKeywords(obj, setify([\"tuple\"])).has(\"tuple\") || obj.peekType(\"OPEN_PAREN\")) {\n                // Tuple\n                baseType = \"tuple\";\n                comps = obj.popParams().map((t) => ParamType.from(t));\n                type = `tuple(${comps.map((c) => c.format()).join(\",\")})`;\n            }\n            else {\n                // Normal\n                type = verifyBasicType(obj.popType(\"TYPE\"));\n                baseType = type;\n            }\n            // Check for Array\n            let arrayChildren = null;\n            let arrayLength = null;\n            while (obj.length && obj.peekType(\"BRACKET\")) {\n                const bracket = obj.pop(); //arrays[i];\n                arrayChildren = new ParamType(_guard, \"\", type, baseType, null, comps, arrayLength, arrayChildren);\n                arrayLength = bracket.value;\n                type += bracket.text;\n                baseType = \"array\";\n                comps = null;\n            }\n            let indexed = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has(\"indexed\")) {\n                if (!allowIndexed) {\n                    throw new Error(\"\");\n                }\n                indexed = true;\n            }\n            const name = (obj.peekType(\"ID\") ? obj.pop().text : \"\");\n            if (obj.length) {\n                throw new Error(\"leftover tokens\");\n            }\n            return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n        }\n        const name = obj.name;\n        assertArgument(!name || (typeof (name) === \"string\" && name.match(regexId)), \"invalid name\", \"obj.name\", name);\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            assertArgument(allowIndexed, \"parameter cannot be indexed\", \"obj.indexed\", obj.indexed);\n            indexed = !!indexed;\n        }\n        let type = obj.type;\n        let arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || \"-1\");\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components\n            });\n            return new ParamType(_guard, name || \"\", type, \"array\", indexed, null, arrayLength, arrayChildren);\n        }\n        if (type === \"tuple\" || type.startsWith(\"tuple(\" /* fix: ) */) || type.startsWith(\"(\" /* fix: ) */)) {\n            const comps = (obj.components != null) ? obj.components.map((c) => ParamType.from(c)) : null;\n            const tuple = new ParamType(_guard, name || \"\", type, \"tuple\", indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n        type = verifyBasicType(obj.type);\n        return new ParamType(_guard, name || \"\", type, type, indexed, null, null, null);\n    }\n    /**\n     *  Returns true if %%value%% is a **ParamType**.\n     */\n    static isParamType(value) {\n        return (value && value[internal] === ParamTypeInternal);\n    }\n}\n/**\n *  An abstract class to represent An individual fragment from a parse ABI.\n */\nexport class Fragment {\n    /**\n     *  The type of the fragment.\n     */\n    type;\n    /**\n     *  The inputs for the fragment.\n     */\n    inputs;\n    /**\n     *  @private\n     */\n    constructor(guard, type, inputs) {\n        assertPrivate(guard, _guard, \"Fragment\");\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { type, inputs });\n    }\n    /**\n     *  Creates a new **Fragment** for %%obj%%, wich can be any supported\n     *  ABI frgament type.\n     */\n    static from(obj) {\n        if (typeof (obj) === \"string\") {\n            // Try parsing JSON...\n            try {\n                Fragment.from(JSON.parse(obj));\n            }\n            catch (e) { }\n            // ...otherwise, use the human-readable lexer\n            return Fragment.from(lex(obj));\n        }\n        if (obj instanceof TokenString) {\n            // Human-readable ABI (already lexed)\n            const type = obj.peekKeyword(KwTypes);\n            switch (type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\":\n                case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n        }\n        else if (typeof (obj) === \"object\") {\n            // JSON ABI\n            switch (obj.type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\":\n                case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n            assert(false, `unsupported type: ${obj.type}`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"Fragment.from\"\n            });\n        }\n        assertArgument(false, \"unsupported frgament object\", \"obj\", obj);\n    }\n    /**\n     *  Returns true if %%value%% is a [[ConstructorFragment]].\n     */\n    static isConstructor(value) {\n        return ConstructorFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is an [[ErrorFragment]].\n     */\n    static isError(value) {\n        return ErrorFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is an [[EventFragment]].\n     */\n    static isEvent(value) {\n        return EventFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is a [[FunctionFragment]].\n     */\n    static isFunction(value) {\n        return FunctionFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is a [[StructFragment]].\n     */\n    static isStruct(value) {\n        return StructFragment.isFragment(value);\n    }\n}\n/**\n *  An abstract class to represent An individual fragment\n *  which has a name from a parse ABI.\n */\nexport class NamedFragment extends Fragment {\n    /**\n     *  The name of the fragment.\n     */\n    name;\n    /**\n     *  @private\n     */\n    constructor(guard, type, name, inputs) {\n        super(guard, type, inputs);\n        assertArgument(typeof (name) === \"string\" && name.match(regexId), \"invalid identifier\", \"name\", name);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { name });\n    }\n}\nfunction joinParams(format, params) {\n    return \"(\" + params.map((p) => p.format(format)).join((format === \"full\") ? \", \" : \",\") + \")\";\n}\n/**\n *  A Fragment which represents a //Custom Error//.\n */\nexport class ErrorFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs) {\n        super(guard, \"error\", name, inputs);\n        Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n    }\n    /**\n     *  The Custom Error selector.\n     */\n    get selector() {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n    /**\n     *  Returns a string representation of this fragment as %%format%%.\n     */\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"error\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(\" \");\n    }\n    /**\n     *  Returns a new **ErrorFragment** for %%obj%%.\n     */\n    static from(obj) {\n        if (ErrorFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return ErrorFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"error\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new ErrorFragment(_guard, name, inputs);\n        }\n        return new ErrorFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **ErrorFragment**.\n     */\n    static isFragment(value) {\n        return (value && value[internal] === ErrorFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents an Event.\n */\nexport class EventFragment extends NamedFragment {\n    /**\n     *  Whether this event is anonymous.\n     */\n    anonymous;\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs, anonymous) {\n        super(guard, \"event\", name, inputs);\n        Object.defineProperty(this, internal, { value: EventFragmentInternal });\n        defineProperties(this, { anonymous });\n    }\n    /**\n     *  The Event topic hash.\n     */\n    get topicHash() {\n        return id(this.format(\"sighash\"));\n    }\n    /**\n     *  Returns a string representation of this event as %%format%%.\n     */\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"event\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\" && this.anonymous) {\n            result.push(\"anonymous\");\n        }\n        return result.join(\" \");\n    }\n    /**\n     *  Return the topic hash for an event with %%name%% and %%params%%.\n     */\n    static getTopicHash(name, params) {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new EventFragment(_guard, name, params, false);\n        return fragment.topicHash;\n    }\n    /**\n     *  Returns a new **EventFragment** for %%obj%%.\n     */\n    static from(obj) {\n        if (EventFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            try {\n                return EventFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, \"invalid event fragment\", \"obj\", obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"event\", obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify([\"anonymous\"])).has(\"anonymous\");\n            consumeEoi(obj);\n            return new EventFragment(_guard, name, inputs, anonymous);\n        }\n        return new EventFragment(_guard, obj.name, obj.inputs ? obj.inputs.map((p) => ParamType.from(p, true)) : [], !!obj.anonymous);\n    }\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **EventFragment**.\n     */\n    static isFragment(value) {\n        return (value && value[internal] === EventFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a constructor.\n */\nexport class ConstructorFragment extends Fragment {\n    /**\n     *  Whether the constructor can receive an endowment.\n     */\n    payable;\n    /**\n     *  The recommended gas limit for deployment or ``null``.\n     */\n    gas;\n    /**\n     *  @private\n     */\n    constructor(guard, type, inputs, payable, gas) {\n        super(guard, type, inputs);\n        Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });\n        defineProperties(this, { payable, gas });\n    }\n    /**\n     *  Returns a string representation of this constructor as %%format%%.\n     */\n    format(format) {\n        assert(format != null && format !== \"sighash\", \"cannot format a constructor for sighash\", \"UNSUPPORTED_OPERATION\", { operation: \"format(sighash)\" });\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: (this.payable ? \"payable\" : \"undefined\"),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas : undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n        const result = [`constructor${joinParams(format, this.inputs)}`];\n        if (this.payable) {\n            result.push(\"payable\");\n        }\n        if (this.gas != null) {\n            result.push(`@${this.gas.toString()}`);\n        }\n        return result.join(\" \");\n    }\n    /**\n     *  Returns a new **ConstructorFragment** for %%obj%%.\n     */\n    static from(obj) {\n        if (ConstructorFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            try {\n                return ConstructorFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, \"invalid constuctor fragment\", \"obj\", obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify([\"constructor\"]));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, KwVisibDeploy).has(\"payable\");\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new ConstructorFragment(_guard, \"constructor\", inputs, payable, gas);\n        }\n        return new ConstructorFragment(_guard, \"constructor\", obj.inputs ? obj.inputs.map(ParamType.from) : [], !!obj.payable, (obj.gas != null) ? obj.gas : null);\n    }\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **ConstructorFragment**.\n     */\n    static isFragment(value) {\n        return (value && value[internal] === ConstructorFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a method.\n */\nexport class FallbackFragment extends Fragment {\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    payable;\n    constructor(guard, inputs, payable) {\n        super(guard, \"fallback\", inputs);\n        Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n        defineProperties(this, { payable });\n    }\n    /**\n     *  Returns a string representation of this fallback as %%format%%.\n     */\n    format(format) {\n        const type = ((this.inputs.length === 0) ? \"receive\" : \"fallback\");\n        if (format === \"json\") {\n            const stateMutability = (this.payable ? \"payable\" : \"nonpayable\");\n            return JSON.stringify({ type, stateMutability });\n        }\n        return `${type}()${this.payable ? \" payable\" : \"\"}`;\n    }\n    /**\n     *  Returns a new **FallbackFragment** for %%obj%%.\n     */\n    static from(obj) {\n        if (FallbackFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            try {\n                return FallbackFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, \"invalid fallback fragment\", \"obj\", obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n            const topIsValid = obj.peekKeyword(setify([\"fallback\", \"receive\"]));\n            assertArgument(topIsValid, \"type must be fallback or receive\", \"obj\", errorObj);\n            const type = obj.popKeyword(setify([\"fallback\", \"receive\"]));\n            // receive()\n            if (type === \"receive\") {\n                const inputs = consumeParams(obj);\n                assertArgument(inputs.length === 0, `receive cannot have arguments`, \"obj.inputs\", inputs);\n                consumeKeywords(obj, setify([\"payable\"]));\n                consumeEoi(obj);\n                return new FallbackFragment(_guard, [], true);\n            }\n            // fallback() [payable]\n            // fallback(bytes) [payable] returns (bytes)\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n                assertArgument(inputs.length === 1 && inputs[0].type === \"bytes\", \"invalid fallback inputs\", \"obj.inputs\", inputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n            else {\n                inputs = [ParamType.from(\"bytes\")];\n            }\n            const mutability = consumeMutability(obj);\n            assertArgument(mutability === \"nonpayable\" || mutability === \"payable\", \"fallback cannot be constants\", \"obj.stateMutability\", mutability);\n            if (consumeKeywords(obj, setify([\"returns\"])).has(\"returns\")) {\n                const outputs = consumeParams(obj);\n                assertArgument(outputs.length === 1 && outputs[0].type === \"bytes\", \"invalid fallback outputs\", \"obj.outputs\", outputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n            consumeEoi(obj);\n            return new FallbackFragment(_guard, inputs, mutability === \"payable\");\n        }\n        if (obj.type === \"receive\") {\n            return new FallbackFragment(_guard, [], true);\n        }\n        if (obj.type === \"fallback\") {\n            const inputs = [ParamType.from(\"bytes\")];\n            const payable = (obj.stateMutability === \"payable\");\n            return new FallbackFragment(_guard, inputs, payable);\n        }\n        assertArgument(false, \"invalid fallback description\", \"obj\", obj);\n    }\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FallbackFragment**.\n     */\n    static isFragment(value) {\n        return (value && value[internal] === FallbackFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a method.\n */\nexport class FunctionFragment extends NamedFragment {\n    /**\n     *  If the function is constant (e.g. ``pure`` or ``view`` functions).\n     */\n    constant;\n    /**\n     *  The returned types for the result of calling this function.\n     */\n    outputs;\n    /**\n     *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``\n     *  or ``pure``)\n     */\n    stateMutability;\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    payable;\n    /**\n     *  The recommended gas limit to send when calling this function.\n     */\n    gas;\n    /**\n     *  @private\n     */\n    constructor(guard, name, stateMutability, inputs, outputs, gas) {\n        super(guard, \"function\", name, inputs);\n        Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n        outputs = Object.freeze(outputs.slice());\n        const constant = (stateMutability === \"view\" || stateMutability === \"pure\");\n        const payable = (stateMutability === \"payable\");\n        defineProperties(this, { constant, gas, outputs, payable, stateMutability });\n    }\n    /**\n     *  The Function selector.\n     */\n    get selector() {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n    /**\n     *  Returns a string representation of this function as %%format%%.\n     */\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas : undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"function\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\") {\n            if (this.stateMutability !== \"nonpayable\") {\n                result.push(this.stateMutability);\n            }\n            if (this.outputs && this.outputs.length) {\n                result.push(\"returns\");\n                result.push(joinParams(format, this.outputs));\n            }\n            if (this.gas != null) {\n                result.push(`@${this.gas.toString()}`);\n            }\n        }\n        return result.join(\" \");\n    }\n    /**\n     *  Return the selector for a function with %%name%% and %%params%%.\n     */\n    static getSelector(name, params) {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new FunctionFragment(_guard, name, \"view\", params, [], null);\n        return fragment.selector;\n    }\n    /**\n     *  Returns a new **FunctionFragment** for %%obj%%.\n     */\n    static from(obj) {\n        if (FunctionFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            try {\n                return FunctionFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, \"invalid function fragment\", \"obj\", obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"function\", obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n            let outputs = [];\n            if (consumeKeywords(obj, setify([\"returns\"])).has(\"returns\")) {\n                outputs = consumeParams(obj);\n            }\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n        }\n        let stateMutability = obj.stateMutability;\n        // Use legacy Solidity ABI logic if stateMutability is missing\n        if (stateMutability == null) {\n            stateMutability = \"payable\";\n            if (typeof (obj.constant) === \"boolean\") {\n                stateMutability = \"view\";\n                if (!obj.constant) {\n                    stateMutability = \"payable\";\n                    if (typeof (obj.payable) === \"boolean\" && !obj.payable) {\n                        stateMutability = \"nonpayable\";\n                    }\n                }\n            }\n            else if (typeof (obj.payable) === \"boolean\" && !obj.payable) {\n                stateMutability = \"nonpayable\";\n            }\n        }\n        // @TODO: verifyState for stateMutability (e.g. throw if\n        //        payable: false but stateMutability is \"nonpayable\")\n        return new FunctionFragment(_guard, obj.name, stateMutability, obj.inputs ? obj.inputs.map(ParamType.from) : [], obj.outputs ? obj.outputs.map(ParamType.from) : [], (obj.gas != null) ? obj.gas : null);\n    }\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FunctionFragment**.\n     */\n    static isFragment(value) {\n        return (value && value[internal] === FunctionFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a structure.\n */\nexport class StructFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs) {\n        super(guard, \"struct\", name, inputs);\n        Object.defineProperty(this, internal, { value: StructFragmentInternal });\n    }\n    /**\n     *  Returns a string representation of this struct as %%format%%.\n     */\n    format() {\n        throw new Error(\"@TODO\");\n    }\n    /**\n     *  Returns a new **StructFragment** for %%obj%%.\n     */\n    static from(obj) {\n        if (typeof (obj) === \"string\") {\n            try {\n                return StructFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, \"invalid struct fragment\", \"obj\", obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"struct\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new StructFragment(_guard, name, inputs);\n        }\n        return new StructFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n    // @TODO: fix this return type\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **StructFragment**.\n     */\n    static isFragment(value) {\n        return (value && value[internal] === StructFragmentInternal);\n    }\n}\n//# sourceMappingURL=fragments.js.map","/**\n *  When sending values to or receiving values from a [[Contract]], the\n *  data is generally encoded using the [ABI standard](link-solc-abi).\n *\n *  The AbiCoder provides a utility to encode values to ABI data and\n *  decode values from ABI data.\n *\n *  Most of the time, developers should favour the [[Contract]] class,\n *  which further abstracts a lot of the finer details of ABI data.\n *\n *  @_section api/abi/abi-coder:ABI Encoding\n */\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { assertArgumentCount, assertArgument } from \"../utils/index.js\";\nimport { Reader, Writer } from \"./coders/abstract-coder.js\";\nimport { AddressCoder } from \"./coders/address.js\";\nimport { ArrayCoder } from \"./coders/array.js\";\nimport { BooleanCoder } from \"./coders/boolean.js\";\nimport { BytesCoder } from \"./coders/bytes.js\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes.js\";\nimport { NullCoder } from \"./coders/null.js\";\nimport { NumberCoder } from \"./coders/number.js\";\nimport { StringCoder } from \"./coders/string.js\";\nimport { TupleCoder } from \"./coders/tuple.js\";\nimport { ParamType } from \"./fragments.js\";\nimport { getAddress } from \"../address/index.js\";\nimport { getBytes, hexlify, makeError } from \"../utils/index.js\";\n// https://docs.soliditylang.org/en/v0.8.17/control-structures.html\nconst PanicReasons = new Map();\nPanicReasons.set(0x00, \"GENERIC_PANIC\");\nPanicReasons.set(0x01, \"ASSERT_FALSE\");\nPanicReasons.set(0x11, \"OVERFLOW\");\nPanicReasons.set(0x12, \"DIVIDE_BY_ZERO\");\nPanicReasons.set(0x21, \"ENUM_RANGE_ERROR\");\nPanicReasons.set(0x22, \"BAD_STORAGE_DATA\");\nPanicReasons.set(0x31, \"STACK_UNDERFLOW\");\nPanicReasons.set(0x32, \"ARRAY_RANGE_ERROR\");\nPanicReasons.set(0x41, \"OUT_OF_MEMORY\");\nPanicReasons.set(0x51, \"UNINITIALIZED_FUNCTION_CALL\");\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nlet defaultCoder = null;\nlet defaultMaxInflation = 1024;\nfunction getBuiltinCallException(action, tx, data, abiCoder) {\n    let message = \"missing revert data\";\n    let reason = null;\n    const invocation = null;\n    let revert = null;\n    if (data) {\n        message = \"execution reverted\";\n        const bytes = getBytes(data);\n        data = hexlify(data);\n        if (bytes.length === 0) {\n            message += \" (no data present; likely require(false) occurred\";\n            reason = \"require(false)\";\n        }\n        else if (bytes.length % 32 !== 4) {\n            message += \" (could not decode reason; invalid data length)\";\n        }\n        else if (hexlify(bytes.slice(0, 4)) === \"0x08c379a0\") {\n            // Error(string)\n            try {\n                reason = abiCoder.decode([\"string\"], bytes.slice(4))[0];\n                revert = {\n                    signature: \"Error(string)\",\n                    name: \"Error\",\n                    args: [reason]\n                };\n                message += `: ${JSON.stringify(reason)}`;\n            }\n            catch (error) {\n                message += \" (could not decode reason; invalid string data)\";\n            }\n        }\n        else if (hexlify(bytes.slice(0, 4)) === \"0x4e487b71\") {\n            // Panic(uint256)\n            try {\n                const code = Number(abiCoder.decode([\"uint256\"], bytes.slice(4))[0]);\n                revert = {\n                    signature: \"Panic(uint256)\",\n                    name: \"Panic\",\n                    args: [code]\n                };\n                reason = `Panic due to ${PanicReasons.get(code) || \"UNKNOWN\"}(${code})`;\n                message += `: ${reason}`;\n            }\n            catch (error) {\n                message += \" (could not decode panic code)\";\n            }\n        }\n        else {\n            message += \" (unknown custom error)\";\n        }\n    }\n    const transaction = {\n        to: (tx.to ? getAddress(tx.to) : null),\n        data: (tx.data || \"0x\")\n    };\n    if (tx.from) {\n        transaction.from = getAddress(tx.from);\n    }\n    return makeError(message, \"CALL_EXCEPTION\", {\n        action, data, reason, transaction, invocation, revert\n    });\n}\n/**\n *  The **AbiCoder** is a low-level class responsible for encoding JavaScript\n *  values into binary data and decoding binary data into JavaScript values.\n */\nexport class AbiCoder {\n    #getCoder(param) {\n        if (param.isArray()) {\n            return new ArrayCoder(this.#getCoder(param.arrayChildren), param.arrayLength, param.name);\n        }\n        if (param.isTuple()) {\n            return new TupleCoder(param.components.map((c) => this.#getCoder(c)), param.name);\n        }\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            assertArgument(size !== 0 && size <= 256 && (size % 8) === 0, \"invalid \" + match[1] + \" bit length\", \"param\", param);\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            assertArgument(size !== 0 && size <= 32, \"invalid bytes length\", \"param\", param);\n            return new FixedBytesCoder(size, param.name);\n        }\n        assertArgument(false, \"invalid type\", \"type\", param.type);\n    }\n    /**\n     *  Get the default values for the given %%types%%.\n     *\n     *  For example, a ``uint`` is by default ``0`` and ``bool``\n     *  is by default ``false``.\n     */\n    getDefaultValue(types) {\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    /**\n     *  Encode the %%values%% as the %%types%% into ABI data.\n     *\n     *  @returns DataHexstring\n     */\n    encode(types, values) {\n        assertArgumentCount(values.length, types.length, \"types/values length mismatch\");\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = new Writer();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    /**\n     *  Decode the ABI %%data%% as the %%types%% into values.\n     *\n     *  If %%loose%% decoding is enabled, then strict padding is\n     *  not enforced. Some older versions of Solidity incorrectly\n     *  padded event data emitted from ``external`` functions.\n     */\n    decode(types, data, loose) {\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(new Reader(data, loose, defaultMaxInflation));\n    }\n    static _setDefaultMaxInflation(value) {\n        assertArgument(typeof (value) === \"number\" && Number.isInteger(value), \"invalid defaultMaxInflation factor\", \"value\", value);\n        defaultMaxInflation = value;\n    }\n    /**\n     *  Returns the shared singleton instance of a default [[AbiCoder]].\n     *\n     *  On the first call, the instance is created internally.\n     */\n    static defaultAbiCoder() {\n        if (defaultCoder == null) {\n            defaultCoder = new AbiCoder();\n        }\n        return defaultCoder;\n    }\n    /**\n     *  Returns an ethers-compatible [[CallExceptionError]] Error for the given\n     *  result %%data%% for the [[CallExceptionAction]] %%action%% against\n     *  the Transaction %%tx%%.\n     */\n    static getBuiltinCallException(action, tx, data) {\n        return getBuiltinCallException(action, tx, data, AbiCoder.defaultAbiCoder());\n    }\n}\n//# sourceMappingURL=abi-coder.js.map","import { assert, assertArgument } from \"../utils/index.js\";\nimport { getAddress } from \"./address.js\";\n/**\n *  Returns true if %%value%% is an object which implements the\n *  [[Addressable]] interface.\n *\n *  @example:\n *    // Wallets and AbstractSigner sub-classes\n *    isAddressable(Wallet.createRandom())\n *    //_result:\n *\n *    // Contracts\n *    contract = new Contract(\"dai.tokens.ethers.eth\", [ ], provider)\n *    isAddressable(contract)\n *    //_result:\n */\nexport function isAddressable(value) {\n    return (value && typeof (value.getAddress) === \"function\");\n}\n/**\n *  Returns true if %%value%% is a valid address.\n *\n *  @example:\n *    // Valid address\n *    isAddress(\"0x8ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Valid ICAP address\n *    isAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\")\n *    //_result:\n *\n *    // Invalid checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBa72\")\n *    //_result:\n *\n *    // Invalid ICAP checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Not an address (an ENS name requires a provided and an\n *    // asynchronous API to access)\n *    isAddress(\"ricmoo.eth\")\n *    //_result:\n */\nexport function isAddress(value) {\n    try {\n        getAddress(value);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nasync function checkAddress(target, promise) {\n    const result = await promise;\n    if (result == null || result === \"0x0000000000000000000000000000000000000000\") {\n        assert(typeof (target) !== \"string\", \"unconfigured name\", \"UNCONFIGURED_NAME\", { value: target });\n        assertArgument(false, \"invalid AddressLike value; did not resolve to a value address\", \"target\", target);\n    }\n    return getAddress(result);\n}\n/**\n *  Resolves to an address for the %%target%%, which may be any\n *  supported address type, an [[Addressable]] or a Promise which\n *  resolves to an address.\n *\n *  If an ENS name is provided, but that name has not been correctly\n *  configured a [[UnconfiguredNameError]] is thrown.\n *\n *  @example:\n *    addr = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n *\n *    // Addresses are return synchronously\n *    resolveAddress(addr, provider)\n *    //_result:\n *\n *    // Address promises are resolved asynchronously\n *    resolveAddress(Promise.resolve(addr))\n *    //_result:\n *\n *    // ENS names are resolved asynchronously\n *    resolveAddress(\"dai.tokens.ethers.eth\", provider)\n *    //_result:\n *\n *    // Addressable objects are resolved asynchronously\n *    contract = new Contract(addr, [ ])\n *    resolveAddress(contract, provider)\n *    //_result:\n *\n *    // Unconfigured ENS names reject\n *    resolveAddress(\"nothing-here.ricmoo.eth\", provider)\n *    //_error:\n *\n *    // ENS names require a NameResolver object passed in\n *    // (notice the provider was omitted)\n *    resolveAddress(\"nothing-here.ricmoo.eth\")\n *    //_error:\n */\nexport function resolveAddress(target, resolver) {\n    if (typeof (target) === \"string\") {\n        if (target.match(/^0x[0-9a-f]{40}$/i)) {\n            return getAddress(target);\n        }\n        assert(resolver != null, \"ENS resolution requires a provider\", \"UNSUPPORTED_OPERATION\", { operation: \"resolveName\" });\n        return checkAddress(target, resolver.resolveName(target));\n    }\n    else if (isAddressable(target)) {\n        return checkAddress(target, target.getAddress());\n    }\n    else if (target && typeof (target.then) === \"function\") {\n        return checkAddress(target, target);\n    }\n    assertArgument(false, \"unsupported addressable value\", \"target\", target);\n}\n//# sourceMappingURL=checks.js.map","//import { TypedDataDomain, TypedDataField } from \"@ethersproject/providerabstract-signer\";\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256 } from \"../crypto/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport { concat, defineProperties, getBigInt, getBytes, hexlify, isHexString, mask, toBeHex, toQuantity, toTwos, zeroPadValue, assertArgument } from \"../utils/index.js\";\nimport { id } from \"./id.js\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n;\n;\nfunction hexPadRight(value) {\n    const bytes = getBytes(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return concat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = toBeHex(BN_1, 32);\nconst hexFalse = toBeHex(BN_0, 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        assertArgument(typeof (value) === \"string\", `invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (_value) {\n        const value = getBigInt(_value, \"domain.chainId\");\n        assertArgument(value >= 0, \"invalid chain ID\", \"domain.chainId\", _value);\n        if (Number.isSafeInteger(value)) {\n            return Number(value);\n        }\n        return toQuantity(value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        assertArgument(false, `invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        const bytes = getBytes(value, \"domain.salt\");\n        assertArgument(bytes.length === 32, `invalid domain value \"salt\"`, \"domain.salt\", value);\n        return hexlify(bytes);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d+)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2]);\n            assertArgument(width % 8 === 0 && width !== 0 && width <= 256 && match[2] === String(width), \"invalid numeric width\", \"type\", type);\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? (width - 1) : width);\n            const boundsLower = signed ? ((boundsUpper + BN_1) * BN__1) : BN_0;\n            return function (_value) {\n                const value = getBigInt(_value, \"value\");\n                assertArgument(value >= boundsLower && value <= boundsUpper, `value out-of-bounds for ${type}`, \"value\", value);\n                return toBeHex(signed ? toTwos(value, 256) : value, 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            assertArgument(width !== 0 && width <= 32 && match[1] === String(width), \"invalid bytes width\", \"type\", type);\n            return function (value) {\n                const bytes = getBytes(value);\n                assertArgument(bytes.length === width, `invalid length for ${type}`, \"value\", value);\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return zeroPadValue(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\n// foo[][3] => { base: \"foo\", index: \"[][3]\", array: {\n//     base: \"foo\", prefix: \"foo[]\", count: 3 } }\nfunction splitArray(type) {\n    const match = type.match(/^([^\\x5b]*)((\\x5b\\d*\\x5d)*)(\\x5b(\\d*)\\x5d)$/);\n    if (match) {\n        return {\n            base: match[1],\n            index: (match[2] + match[4]),\n            array: {\n                base: match[1],\n                prefix: (match[1] + match[2]),\n                count: (match[5] ? parseInt(match[5]) : -1),\n            }\n        };\n    }\n    return { base: type };\n}\n/**\n *  A **TypedDataEncode** prepares and encodes [[link-eip-712]] payloads\n *  for signed typed data.\n *\n *  This is useful for those that wish to compute various components of a\n *  typed data hash, primary types, or sub-components, but generally the\n *  higher level [[Signer-signTypedData]] is more useful.\n */\nexport class TypedDataEncoder {\n    /**\n     *  The primary type for the structured [[types]].\n     *\n     *  This is derived automatically from the [[types]], since no\n     *  recursion is possible, once the DAG for the types is consturcted\n     *  internally, the primary type must be the only remaining type with\n     *  no parent nodes.\n     */\n    primaryType;\n    #types;\n    /**\n     *  The types.\n     */\n    get types() {\n        return JSON.parse(this.#types);\n    }\n    #fullTypes;\n    #encoderCache;\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     *\n     *  This performs all necessary checking that types are valid and\n     *  do not violate the [[link-eip-712]] structural constraints as\n     *  well as computes the [[primaryType]].\n     */\n    constructor(_types) {\n        this.#fullTypes = new Map();\n        this.#encoderCache = new Map();\n        // Link struct types to their direct child structs\n        const links = new Map();\n        // Link structs to structs which contain them as a child\n        const parents = new Map();\n        // Link all subtypes within a given struct\n        const subtypes = new Map();\n        const types = {};\n        Object.keys(_types).forEach((type) => {\n            types[type] = _types[type].map(({ name, type }) => {\n                // Normalize the base type (unless name conflict)\n                let { base, index } = splitArray(type);\n                if (base === \"int\" && !_types[\"int\"]) {\n                    base = \"int256\";\n                }\n                if (base === \"uint\" && !_types[\"uint\"]) {\n                    base = \"uint256\";\n                }\n                return { name, type: (base + (index || \"\")) };\n            });\n            links.set(type, new Set());\n            parents.set(type, []);\n            subtypes.set(type, new Set());\n        });\n        this.#types = JSON.stringify(types);\n        for (const name in types) {\n            const uniqueNames = new Set();\n            for (const field of types[name]) {\n                // Check each field has a unique name\n                assertArgument(!uniqueNames.has(field.name), `duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", _types);\n                uniqueNames.add(field.name);\n                // Get the base type (drop any array specifiers)\n                const baseType = splitArray(field.type).base;\n                assertArgument(baseType !== name, `circular type reference to ${JSON.stringify(baseType)}`, \"types\", _types);\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    continue;\n                }\n                assertArgument(parents.has(baseType), `unknown type ${JSON.stringify(baseType)}`, \"types\", _types);\n                // Add linkage\n                parents.get(baseType).push(name);\n                links.get(name).add(baseType);\n            }\n        }\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => (parents.get(n).length === 0));\n        assertArgument(primaryTypes.length !== 0, \"missing primary type\", \"types\", _types);\n        assertArgument(primaryTypes.length === 1, `ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", _types);\n        defineProperties(this, { primaryType: primaryTypes[0] });\n        // Check for circular type references\n        function checkCircular(type, found) {\n            assertArgument(!found.has(type), `circular type reference to ${JSON.stringify(type)}`, \"types\", _types);\n            found.add(type);\n            for (const child of links.get(type)) {\n                if (!parents.has(child)) {\n                    continue;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    subtypes.get(subtype).add(child);\n                }\n            }\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n        // Compute each fully describe type\n        for (const [name, set] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\"));\n        }\n    }\n    /**\n     *  Returnthe encoder for the specific %%type%%.\n     */\n    getEncoder(type) {\n        let encoder = this.#encoderCache.get(type);\n        if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n        }\n        return encoder;\n    }\n    #getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const array = splitArray(type).array;\n        if (array) {\n            const subtype = array.prefix;\n            const subEncoder = this.getEncoder(subtype);\n            return (value) => {\n                assertArgument(array.count === -1 || array.count === value.length, `array length mismatch; expected length ${array.count}`, \"value\", value);\n                let result = value.map(subEncoder);\n                if (this.#fullTypes.has(subtype)) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(concat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this.#fullTypes.get(type));\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this.#fullTypes.has(type)) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return concat(values);\n            };\n        }\n        assertArgument(false, `unknown type: ${type}`, \"type\", type);\n    }\n    /**\n     *  Return the full type for %%name%%.\n     */\n    encodeType(name) {\n        const result = this.#fullTypes.get(name);\n        assertArgument(result, `unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        return result;\n    }\n    /**\n     *  Return the encoded %%value%% for the %%type%%.\n     */\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    /**\n     *  Returns the hash of %%value%% for the type of %%name%%.\n     */\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    /**\n     *  Return the fulled encoded %%value%% for the [[types]].\n     */\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    /**\n     *  Return the hash of the fully encoded %%value%% for the [[types]].\n     */\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    /**\n     *  @_ignore:\n     */\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const array = splitArray(type).array;\n        if (array) {\n            assertArgument(array.count === -1 || array.count === value.length, `array length mismatch; expected length ${array.count}`, \"value\", value);\n            return value.map((v) => this._visit(array.prefix, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        assertArgument(false, `unknown type: ${type}`, \"type\", type);\n    }\n    /**\n     *  Call %%calback%% for each value in %%value%%, passing the type and\n     *  component within %%value%%.\n     *\n     *  This is useful for replacing addresses or other transformation that\n     *  may be desired on each component, based on its type.\n     */\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     */\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    /**\n     *  Return the primary type for %%types%%.\n     */\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    /**\n     *  Return the hashed struct for %%value%% using %%types%% and %%name%%.\n     */\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    /**\n     *  Return the domain hash for %%domain%%.\n     */\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            if (domain[name] == null) {\n                continue;\n            }\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    /**\n     *  Return the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static encode(domain, types, value) {\n        return concat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    /**\n     *  Return the hash of the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    /**\n     * Resolves to the value from resolving all addresses in %%value%% for\n     * %%types%% and the %%domain%%.\n     */\n    static async resolveNames(domain, types, value, resolveName) {\n        // Make a copy to isolate it from the object passed in\n        domain = Object.assign({}, domain);\n        // Allow passing null to ignore value\n        for (const key in domain) {\n            if (domain[key] == null) {\n                delete domain[key];\n            }\n        }\n        // Look up all ENS names\n        const ensCache = {};\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n        // Get a list of all the addresses\n        encoder.visit(value, (type, value) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type, value) => {\n            if (type === \"address\" && ensCache[value]) {\n                return ensCache[value];\n            }\n            return value;\n        });\n        return { domain, value };\n    }\n    /**\n     *  Returns the JSON-encoded payload expected by nodes which implement\n     *  the JSON-RPC [[link-eip-712]] method.\n     */\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        // Get the normalized types\n        types = encoder.types;\n        const typesWithDomain = Object.assign({}, types);\n        assertArgument(typesWithDomain.EIP712Domain == null, \"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        typesWithDomain.EIP712Domain = domainTypes;\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(getBytes(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return getBigInt(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        assertArgument(typeof (value) === \"string\", \"invalid string\", \"value\", value);\n                        return value;\n                }\n                assertArgument(false, \"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n/**\n *  Compute the address used to sign the typed data for the %%signature%%.\n */\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=typed-data.js.map","import { getAddress } from \"../address/index.js\";\nimport { assertArgument, isHexString } from \"../utils/index.js\";\nfunction accessSetify(addr, storageKeys) {\n    return {\n        address: getAddress(addr),\n        storageKeys: storageKeys.map((storageKey, index) => {\n            assertArgument(isHexString(storageKey, 32), \"invalid slot\", `storageKeys[${index}]`, storageKey);\n            return storageKey.toLowerCase();\n        })\n    };\n}\n/**\n *  Returns a [[AccessList]] from any ethers-supported access-list structure.\n */\nexport function accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map((set, index) => {\n            if (Array.isArray(set)) {\n                assertArgument(set.length === 2, \"invalid slot set\", `value[${index}]`, set);\n                return accessSetify(set[0], set[1]);\n            }\n            assertArgument(set != null && typeof (set) === \"object\", \"invalid address-slot set\", \"value\", value);\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    assertArgument(value != null && typeof (value) === \"object\", \"invalid access list\", \"value\", value);\n    const result = Object.keys(value).map((addr) => {\n        const storageKeys = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n//# sourceMappingURL=accesslist.js.map","import { assert, makeError } from \"./errors.js\";\nexport function createGetUrl(options) {\n    async function getUrl(req, _signal) {\n        assert(_signal == null || !_signal.cancelled, \"request cancelled before sending\", \"CANCELLED\");\n        const protocol = req.url.split(\":\")[0].toLowerCase();\n        assert(protocol === \"http\" || protocol === \"https\", `unsupported protocol ${protocol}`, \"UNSUPPORTED_OPERATION\", {\n            info: { protocol },\n            operation: \"request\"\n        });\n        assert(protocol === \"https\" || !req.credentials || req.allowInsecureAuthentication, \"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"request\"\n        });\n        let error = null;\n        const controller = new AbortController();\n        const timer = setTimeout(() => {\n            error = makeError(\"request timeout\", \"TIMEOUT\");\n            controller.abort();\n        }, req.timeout);\n        if (_signal) {\n            _signal.addListener(() => {\n                error = makeError(\"request cancelled\", \"CANCELLED\");\n                controller.abort();\n            });\n        }\n        const init = {\n            method: req.method,\n            headers: new Headers(Array.from(req)),\n            body: req.body || undefined,\n            signal: controller.signal\n        };\n        let resp;\n        try {\n            resp = await fetch(req.url, init);\n        }\n        catch (_error) {\n            clearTimeout(timer);\n            if (error) {\n                throw error;\n            }\n            throw _error;\n        }\n        clearTimeout(timer);\n        const headers = {};\n        resp.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n        const respBody = await resp.arrayBuffer();\n        const body = (respBody == null) ? null : new Uint8Array(respBody);\n        return {\n            statusCode: resp.status,\n            statusMessage: resp.statusText,\n            headers, body\n        };\n    }\n    return getUrl;\n}\n// @TODO: remove in v7; provided for backwards compat\nconst defaultGetUrl = createGetUrl({});\nexport async function getUrl(req, _signal) {\n    return defaultGetUrl(req, _signal);\n}\n//# sourceMappingURL=geturl-browser.js.map","/**\n *  Fetching content from the web is environment-specific, so Ethers\n *  provides an abstraction that each environment can implement to provide\n *  this service.\n *\n *  On [Node.js](link-node), the ``http`` and ``https`` libs are used to\n *  create a request object, register event listeners and process data\n *  and populate the [[FetchResponse]].\n *\n *  In a browser, the [DOM fetch](link-js-fetch) is used, and the resulting\n *  ``Promise`` is waited on to retrieve the payload.\n *\n *  The [[FetchRequest]] is responsible for handling many common situations,\n *  such as redirects, server throttling, authentication, etc.\n *\n *  It also handles common gateways, such as IPFS and data URIs.\n *\n *  @_section api/utils/fetching:Fetching Web Content  [about-fetch]\n */\nimport { decodeBase64, encodeBase64 } from \"./base64.js\";\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { defineProperties } from \"./properties.js\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8.js\";\nimport { createGetUrl } from \"./geturl.js\";\nconst MAX_ATTEMPTS = 12;\nconst SLOT_INTERVAL = 250;\n// The global FetchGetUrlFunc implementation.\nlet defaultGetUrlFunc = createGetUrl();\nconst reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\nconst reIpfs = new RegExp(\"^ipfs:/\\/(ipfs/)?(.*)$\", \"i\");\n// If locked, new Gateways cannot be added\nlet locked = false;\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\nasync function dataGatewayFunc(url, signal) {\n    try {\n        const match = url.match(reData);\n        if (!match) {\n            throw new Error(\"invalid data\");\n        }\n        return new FetchResponse(200, \"OK\", {\n            \"content-type\": (match[1] || \"text/plain\"),\n        }, (match[2] ? decodeBase64(match[3]) : unpercent(match[3])));\n    }\n    catch (error) {\n        return new FetchResponse(599, \"BAD REQUEST (invalid data: URI)\", {}, null, new FetchRequest(url));\n    }\n}\n/**\n *  Returns a [[FetchGatewayFunc]] for fetching content from a standard\n *  IPFS gateway hosted at %%baseUrl%%.\n */\nfunction getIpfsGatewayFunc(baseUrl) {\n    async function gatewayIpfs(url, signal) {\n        try {\n            const match = url.match(reIpfs);\n            if (!match) {\n                throw new Error(\"invalid link\");\n            }\n            return new FetchRequest(`${baseUrl}${match[2]}`);\n        }\n        catch (error) {\n            return new FetchResponse(599, \"BAD REQUEST (invalid IPFS URI)\", {}, null, new FetchRequest(url));\n        }\n    }\n    return gatewayIpfs;\n}\nconst Gateways = {\n    \"data\": dataGatewayFunc,\n    \"ipfs\": getIpfsGatewayFunc(\"https:/\\/gateway.ipfs.io/ipfs/\")\n};\nconst fetchSignals = new WeakMap();\n/**\n *  @_ignore\n */\nexport class FetchCancelSignal {\n    #listeners;\n    #cancelled;\n    constructor(request) {\n        this.#listeners = [];\n        this.#cancelled = false;\n        fetchSignals.set(request, () => {\n            if (this.#cancelled) {\n                return;\n            }\n            this.#cancelled = true;\n            for (const listener of this.#listeners) {\n                setTimeout(() => { listener(); }, 0);\n            }\n            this.#listeners = [];\n        });\n    }\n    addListener(listener) {\n        assert(!this.#cancelled, \"singal already cancelled\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fetchCancelSignal.addCancelListener\"\n        });\n        this.#listeners.push(listener);\n    }\n    get cancelled() { return this.#cancelled; }\n    checkSignal() {\n        assert(!this.cancelled, \"cancelled\", \"CANCELLED\", {});\n    }\n}\n// Check the signal, throwing if it is cancelled\nfunction checkSignal(signal) {\n    if (signal == null) {\n        throw new Error(\"missing signal; should not happen\");\n    }\n    signal.checkSignal();\n    return signal;\n}\n/**\n *  Represents a request for a resource using a URI.\n *\n *  By default, the supported schemes are ``HTTP``, ``HTTPS``, ``data:``,\n *  and ``IPFS:``.\n *\n *  Additional schemes can be added globally using [[registerGateway]].\n *\n *  @example:\n *    req = new FetchRequest(\"https://www.ricmoo.com\")\n *    resp = await req.send()\n *    resp.body.length\n *    //_result:\n */\nexport class FetchRequest {\n    #allowInsecure;\n    #gzip;\n    #headers;\n    #method;\n    #timeout;\n    #url;\n    #body;\n    #bodyType;\n    #creds;\n    // Hooks\n    #preflight;\n    #process;\n    #retry;\n    #signal;\n    #throttle;\n    #getUrlFunc;\n    /**\n     *  The fetch URL to request.\n     */\n    get url() { return this.#url; }\n    set url(url) {\n        this.#url = String(url);\n    }\n    /**\n     *  The fetch body, if any, to send as the request body. //(default: null)//\n     *\n     *  When setting a body, the intrinsic ``Content-Type`` is automatically\n     *  set and will be used if **not overridden** by setting a custom\n     *  header.\n     *\n     *  If %%body%% is null, the body is cleared (along with the\n     *  intrinsic ``Content-Type``).\n     *\n     *  If %%body%% is a string, the intrinsic ``Content-Type`` is set to\n     *  ``text/plain``.\n     *\n     *  If %%body%% is a Uint8Array, the intrinsic ``Content-Type`` is set to\n     *  ``application/octet-stream``.\n     *\n     *  If %%body%% is any other object, the intrinsic ``Content-Type`` is\n     *  set to ``application/json``.\n     */\n    get body() {\n        if (this.#body == null) {\n            return null;\n        }\n        return new Uint8Array(this.#body);\n    }\n    set body(body) {\n        if (body == null) {\n            this.#body = undefined;\n            this.#bodyType = undefined;\n        }\n        else if (typeof (body) === \"string\") {\n            this.#body = toUtf8Bytes(body);\n            this.#bodyType = \"text/plain\";\n        }\n        else if (body instanceof Uint8Array) {\n            this.#body = body;\n            this.#bodyType = \"application/octet-stream\";\n        }\n        else if (typeof (body) === \"object\") {\n            this.#body = toUtf8Bytes(JSON.stringify(body));\n            this.#bodyType = \"application/json\";\n        }\n        else {\n            throw new Error(\"invalid body\");\n        }\n    }\n    /**\n     *  Returns true if the request has a body.\n     */\n    hasBody() {\n        return (this.#body != null);\n    }\n    /**\n     *  The HTTP method to use when requesting the URI. If no method\n     *  has been explicitly set, then ``GET`` is used if the body is\n     *  null and ``POST`` otherwise.\n     */\n    get method() {\n        if (this.#method) {\n            return this.#method;\n        }\n        if (this.hasBody()) {\n            return \"POST\";\n        }\n        return \"GET\";\n    }\n    set method(method) {\n        if (method == null) {\n            method = \"\";\n        }\n        this.#method = String(method).toUpperCase();\n    }\n    /**\n     *  The headers that will be used when requesting the URI. All\n     *  keys are lower-case.\n     *\n     *  This object is a copy, so any changes will **NOT** be reflected\n     *  in the ``FetchRequest``.\n     *\n     *  To set a header entry, use the ``setHeader`` method.\n     */\n    get headers() {\n        const headers = Object.assign({}, this.#headers);\n        if (this.#creds) {\n            headers[\"authorization\"] = `Basic ${encodeBase64(toUtf8Bytes(this.#creds))}`;\n        }\n        ;\n        if (this.allowGzip) {\n            headers[\"accept-encoding\"] = \"gzip\";\n        }\n        if (headers[\"content-type\"] == null && this.#bodyType) {\n            headers[\"content-type\"] = this.#bodyType;\n        }\n        if (this.body) {\n            headers[\"content-length\"] = String(this.body.length);\n        }\n        return headers;\n    }\n    /**\n     *  Get the header for %%key%%, ignoring case.\n     */\n    getHeader(key) {\n        return this.headers[key.toLowerCase()];\n    }\n    /**\n     *  Set the header for %%key%% to %%value%%. All values are coerced\n     *  to a string.\n     */\n    setHeader(key, value) {\n        this.#headers[String(key).toLowerCase()] = String(value);\n    }\n    /**\n     *  Clear all headers, resetting all intrinsic headers.\n     */\n    clearHeaders() {\n        this.#headers = {};\n    }\n    [Symbol.iterator]() {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [key, headers[key]], done: false\n                    };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    /**\n     *  The value that will be sent for the ``Authorization`` header.\n     *\n     *  To set the credentials, use the ``setCredentials`` method.\n     */\n    get credentials() {\n        return this.#creds || null;\n    }\n    /**\n     *  Sets an ``Authorization`` for %%username%% with %%password%%.\n     */\n    setCredentials(username, password) {\n        assertArgument(!username.match(/:/), \"invalid basic authentication username\", \"username\", \"[REDACTED]\");\n        this.#creds = `${username}:${password}`;\n    }\n    /**\n     *  Enable and request gzip-encoded responses. The response will\n     *  automatically be decompressed. //(default: true)//\n     */\n    get allowGzip() {\n        return this.#gzip;\n    }\n    set allowGzip(value) {\n        this.#gzip = !!value;\n    }\n    /**\n     *  Allow ``Authentication`` credentials to be sent over insecure\n     *  channels. //(default: false)//\n     */\n    get allowInsecureAuthentication() {\n        return !!this.#allowInsecure;\n    }\n    set allowInsecureAuthentication(value) {\n        this.#allowInsecure = !!value;\n    }\n    /**\n     *  The timeout (in milliseconds) to wait for a complete response.\n     *  //(default: 5 minutes)//\n     */\n    get timeout() { return this.#timeout; }\n    set timeout(timeout) {\n        assertArgument(timeout >= 0, \"timeout must be non-zero\", \"timeout\", timeout);\n        this.#timeout = timeout;\n    }\n    /**\n     *  This function is called prior to each request, for example\n     *  during a redirection or retry in case of server throttling.\n     *\n     *  This offers an opportunity to populate headers or update\n     *  content before sending a request.\n     */\n    get preflightFunc() {\n        return this.#preflight || null;\n    }\n    set preflightFunc(preflight) {\n        this.#preflight = preflight;\n    }\n    /**\n     *  This function is called after each response, offering an\n     *  opportunity to provide client-level throttling or updating\n     *  response data.\n     *\n     *  Any error thrown in this causes the ``send()`` to throw.\n     *\n     *  To schedule a retry attempt (assuming the maximum retry limit\n     *  has not been reached), use [[response.throwThrottleError]].\n     */\n    get processFunc() {\n        return this.#process || null;\n    }\n    set processFunc(process) {\n        this.#process = process;\n    }\n    /**\n     *  This function is called on each retry attempt.\n     */\n    get retryFunc() {\n        return this.#retry || null;\n    }\n    set retryFunc(retry) {\n        this.#retry = retry;\n    }\n    /**\n     *  This function is called to fetch content from HTTP and\n     *  HTTPS URLs and is platform specific (e.g. nodejs vs\n     *  browsers).\n     *\n     *  This is by default the currently registered global getUrl\n     *  function, which can be changed using [[registerGetUrl]].\n     *  If this has been set, setting is to ``null`` will cause\n     *  this FetchRequest (and any future clones) to revert back to\n     *  using the currently registered global getUrl function.\n     *\n     *  Setting this is generally not necessary, but may be useful\n     *  for developers that wish to intercept requests or to\n     *  configurege a proxy or other agent.\n     */\n    get getUrlFunc() {\n        return this.#getUrlFunc || defaultGetUrlFunc;\n    }\n    set getUrlFunc(value) {\n        this.#getUrlFunc = value;\n    }\n    /**\n     *  Create a new FetchRequest instance with default values.\n     *\n     *  Once created, each property may be set before issuing a\n     *  ``.send()`` to make the request.\n     */\n    constructor(url) {\n        this.#url = String(url);\n        this.#allowInsecure = false;\n        this.#gzip = true;\n        this.#headers = {};\n        this.#method = \"\";\n        this.#timeout = 300000;\n        this.#throttle = {\n            slotInterval: SLOT_INTERVAL,\n            maxAttempts: MAX_ATTEMPTS\n        };\n        this.#getUrlFunc = null;\n    }\n    toString() {\n        return `<FetchRequest method=${JSON.stringify(this.method)} url=${JSON.stringify(this.url)} headers=${JSON.stringify(this.headers)} body=${this.#body ? hexlify(this.#body) : \"null\"}>`;\n    }\n    /**\n     *  Update the throttle parameters used to determine maximum\n     *  attempts and exponential-backoff properties.\n     */\n    setThrottleParams(params) {\n        if (params.slotInterval != null) {\n            this.#throttle.slotInterval = params.slotInterval;\n        }\n        if (params.maxAttempts != null) {\n            this.#throttle.maxAttempts = params.maxAttempts;\n        }\n    }\n    async #send(attempt, expires, delay, _request, _response) {\n        if (attempt >= this.#throttle.maxAttempts) {\n            return _response.makeServerError(\"exceeded maximum retry limit\");\n        }\n        assert(getTime() <= expires, \"timeout\", \"TIMEOUT\", {\n            operation: \"request.send\", reason: \"timeout\", request: _request\n        });\n        if (delay > 0) {\n            await wait(delay);\n        }\n        let req = this.clone();\n        const scheme = (req.url.split(\":\")[0] || \"\").toLowerCase();\n        // Process any Gateways\n        if (scheme in Gateways) {\n            const result = await Gateways[scheme](req.url, checkSignal(_request.#signal));\n            if (result instanceof FetchResponse) {\n                let response = result;\n                if (this.processFunc) {\n                    checkSignal(_request.#signal);\n                    try {\n                        response = await this.processFunc(req, response);\n                    }\n                    catch (error) {\n                        // Something went wrong during processing; throw a 5xx server error\n                        if (error.throttle == null || typeof (error.stall) !== \"number\") {\n                            response.makeServerError(\"error in post-processing function\", error).assertOk();\n                        }\n                        // Ignore throttling\n                    }\n                }\n                return response;\n            }\n            req = result;\n        }\n        // We have a preflight function; update the request\n        if (this.preflightFunc) {\n            req = await this.preflightFunc(req);\n        }\n        const resp = await this.getUrlFunc(req, checkSignal(_request.#signal));\n        let response = new FetchResponse(resp.statusCode, resp.statusMessage, resp.headers, resp.body, _request);\n        if (response.statusCode === 301 || response.statusCode === 302) {\n            // Redirect\n            try {\n                const location = response.headers.location || \"\";\n                return req.redirect(location).#send(attempt + 1, expires, 0, _request, response);\n            }\n            catch (error) { }\n            // Things won't get any better on another attempt; abort\n            return response;\n        }\n        else if (response.statusCode === 429) {\n            // Throttle\n            if (this.retryFunc == null || (await this.retryFunc(req, response, attempt))) {\n                const retryAfter = response.headers[\"retry-after\"];\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n                if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                    delay = parseInt(retryAfter);\n                }\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n        if (this.processFunc) {\n            checkSignal(_request.#signal);\n            try {\n                response = await this.processFunc(req, response);\n            }\n            catch (error) {\n                // Something went wrong during processing; throw a 5xx server error\n                if (error.throttle == null || typeof (error.stall) !== \"number\") {\n                    response.makeServerError(\"error in post-processing function\", error).assertOk();\n                }\n                // Throttle\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n                ;\n                if (error.stall >= 0) {\n                    delay = error.stall;\n                }\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n        return response;\n    }\n    /**\n     *  Resolves to the response by sending the request.\n     */\n    send() {\n        assert(this.#signal == null, \"request already sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.send\" });\n        this.#signal = new FetchCancelSignal(this);\n        return this.#send(0, getTime() + this.timeout, 0, this, new FetchResponse(0, \"\", {}, null, this));\n    }\n    /**\n     *  Cancels the inflight response, causing a ``CANCELLED``\n     *  error to be rejected from the [[send]].\n     */\n    cancel() {\n        assert(this.#signal != null, \"request has not been sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.cancel\" });\n        const signal = fetchSignals.get(this);\n        if (!signal) {\n            throw new Error(\"missing signal; should not happen\");\n        }\n        signal();\n    }\n    /**\n     *  Returns a new [[FetchRequest]] that represents the redirection\n     *  to %%location%%.\n     */\n    redirect(location) {\n        // Redirection; for now we only support absolute locations\n        const current = this.url.split(\":\")[0].toLowerCase();\n        const target = location.split(\":\")[0].toLowerCase();\n        // Don't allow redirecting:\n        // - non-GET requests\n        // - downgrading the security (e.g. https => http)\n        // - to non-HTTP (or non-HTTPS) protocols [this could be relaxed?]\n        assert(this.method === \"GET\" && (current !== \"https\" || target !== \"http\") && location.match(/^https?:/), `unsupported redirect`, \"UNSUPPORTED_OPERATION\", {\n            operation: `redirect(${this.method} ${JSON.stringify(this.url)} => ${JSON.stringify(location)})`\n        });\n        // Create a copy of this request, with a new URL\n        const req = new FetchRequest(location);\n        req.method = \"GET\";\n        req.allowGzip = this.allowGzip;\n        req.timeout = this.timeout;\n        req.#headers = Object.assign({}, this.#headers);\n        if (this.#body) {\n            req.#body = new Uint8Array(this.#body);\n        }\n        req.#bodyType = this.#bodyType;\n        // Do not forward credentials unless on the same domain; only absolute\n        //req.allowInsecure = false;\n        // paths are currently supported; may want a way to specify to forward?\n        //setStore(req.#props, \"creds\", getStore(this.#pros, \"creds\"));\n        return req;\n    }\n    /**\n     *  Create a new copy of this request.\n     */\n    clone() {\n        const clone = new FetchRequest(this.url);\n        // Preserve \"default method\" (i.e. null)\n        clone.#method = this.#method;\n        // Preserve \"default body\" with type, copying the Uint8Array is present\n        if (this.#body) {\n            clone.#body = this.#body;\n        }\n        clone.#bodyType = this.#bodyType;\n        // Preserve \"default headers\"\n        clone.#headers = Object.assign({}, this.#headers);\n        // Credentials is readonly, so we copy internally\n        clone.#creds = this.#creds;\n        if (this.allowGzip) {\n            clone.allowGzip = true;\n        }\n        clone.timeout = this.timeout;\n        if (this.allowInsecureAuthentication) {\n            clone.allowInsecureAuthentication = true;\n        }\n        clone.#preflight = this.#preflight;\n        clone.#process = this.#process;\n        clone.#retry = this.#retry;\n        clone.#throttle = Object.assign({}, this.#throttle);\n        clone.#getUrlFunc = this.#getUrlFunc;\n        return clone;\n    }\n    /**\n     *  Locks all static configuration for gateways and FetchGetUrlFunc\n     *  registration.\n     */\n    static lockConfig() {\n        locked = true;\n    }\n    /**\n     *  Get the current Gateway function for %%scheme%%.\n     */\n    static getGateway(scheme) {\n        return Gateways[scheme.toLowerCase()] || null;\n    }\n    /**\n     *  Use the %%func%% when fetching URIs using %%scheme%%.\n     *\n     *  This method affects all requests globally.\n     *\n     *  If [[lockConfig]] has been called, no change is made and this\n     *  throws.\n     */\n    static registerGateway(scheme, func) {\n        scheme = scheme.toLowerCase();\n        if (scheme === \"http\" || scheme === \"https\") {\n            throw new Error(`cannot intercept ${scheme}; use registerGetUrl`);\n        }\n        if (locked) {\n            throw new Error(\"gateways locked\");\n        }\n        Gateways[scheme] = func;\n    }\n    /**\n     *  Use %%getUrl%% when fetching URIs over HTTP and HTTPS requests.\n     *\n     *  This method affects all requests globally.\n     *\n     *  If [[lockConfig]] has been called, no change is made and this\n     *  throws.\n     */\n    static registerGetUrl(getUrl) {\n        if (locked) {\n            throw new Error(\"gateways locked\");\n        }\n        defaultGetUrlFunc = getUrl;\n    }\n    /**\n     *  Creates a getUrl function that fetches content from HTTP and\n     *  HTTPS URLs.\n     *\n     *  The available %%options%% are dependent on the platform\n     *  implementation of the default getUrl function.\n     *\n     *  This is not generally something that is needed, but is useful\n     *  when trying to customize simple behaviour when fetching HTTP\n     *  content.\n     */\n    static createGetUrlFunc(options) {\n        return createGetUrl(options);\n    }\n    /**\n     *  Creates a function that can \"fetch\" data URIs.\n     *\n     *  Note that this is automatically done internally to support\n     *  data URIs, so it is not necessary to register it.\n     *\n     *  This is not generally something that is needed, but may\n     *  be useful in a wrapper to perfom custom data URI functionality.\n     */\n    static createDataGateway() {\n        return dataGatewayFunc;\n    }\n    /**\n     *  Creates a function that will fetch IPFS (unvalidated) from\n     *  a custom gateway baseUrl.\n     *\n     *  The default IPFS gateway used internally is\n     *  ``\"https:/\\/gateway.ipfs.io/ipfs/\"``.\n     */\n    static createIpfsGatewayFunc(baseUrl) {\n        return getIpfsGatewayFunc(baseUrl);\n    }\n}\n;\n/**\n *  The response for a FetchRequest.\n */\nexport class FetchResponse {\n    #statusCode;\n    #statusMessage;\n    #headers;\n    #body;\n    #request;\n    #error;\n    toString() {\n        return `<FetchResponse status=${this.statusCode} body=${this.#body ? hexlify(this.#body) : \"null\"}>`;\n    }\n    /**\n     *  The response status code.\n     */\n    get statusCode() { return this.#statusCode; }\n    /**\n     *  The response status message.\n     */\n    get statusMessage() { return this.#statusMessage; }\n    /**\n     *  The response headers. All keys are lower-case.\n     */\n    get headers() { return Object.assign({}, this.#headers); }\n    /**\n     *  The response body, or ``null`` if there was no body.\n     */\n    get body() {\n        return (this.#body == null) ? null : new Uint8Array(this.#body);\n    }\n    /**\n     *  The response body as a UTF-8 encoded string, or the empty\n     *  string (i.e. ``\"\"``) if there was no body.\n     *\n     *  An error is thrown if the body is invalid UTF-8 data.\n     */\n    get bodyText() {\n        try {\n            return (this.#body == null) ? \"\" : toUtf8String(this.#body);\n        }\n        catch (error) {\n            assert(false, \"response body is not valid UTF-8 data\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyText\", info: { response: this }\n            });\n        }\n    }\n    /**\n     *  The response body, decoded as JSON.\n     *\n     *  An error is thrown if the body is invalid JSON-encoded data\n     *  or if there was no body.\n     */\n    get bodyJson() {\n        try {\n            return JSON.parse(this.bodyText);\n        }\n        catch (error) {\n            assert(false, \"response body is not valid JSON\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyJson\", info: { response: this }\n            });\n        }\n    }\n    [Symbol.iterator]() {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [key, headers[key]], done: false\n                    };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    constructor(statusCode, statusMessage, headers, body, request) {\n        this.#statusCode = statusCode;\n        this.#statusMessage = statusMessage;\n        this.#headers = Object.keys(headers).reduce((accum, k) => {\n            accum[k.toLowerCase()] = String(headers[k]);\n            return accum;\n        }, {});\n        this.#body = ((body == null) ? null : new Uint8Array(body));\n        this.#request = (request || null);\n        this.#error = { message: \"\" };\n    }\n    /**\n     *  Return a Response with matching headers and body, but with\n     *  an error status code (i.e. 599) and %%message%% with an\n     *  optional %%error%%.\n     */\n    makeServerError(message, error) {\n        let statusMessage;\n        if (!message) {\n            message = `${this.statusCode} ${this.statusMessage}`;\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${message})`;\n        }\n        else {\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${this.statusCode} ${this.statusMessage}; ${message})`;\n        }\n        const response = new FetchResponse(599, statusMessage, this.headers, this.body, this.#request || undefined);\n        response.#error = { message, error };\n        return response;\n    }\n    /**\n     *  If called within a [request.processFunc](FetchRequest-processFunc)\n     *  call, causes the request to retry as if throttled for %%stall%%\n     *  milliseconds.\n     */\n    throwThrottleError(message, stall) {\n        if (stall == null) {\n            stall = -1;\n        }\n        else {\n            assertArgument(Number.isInteger(stall) && stall >= 0, \"invalid stall timeout\", \"stall\", stall);\n        }\n        const error = new Error(message || \"throttling requests\");\n        defineProperties(error, { stall, throttle: true });\n        throw error;\n    }\n    /**\n     *  Get the header value for %%key%%, ignoring case.\n     */\n    getHeader(key) {\n        return this.headers[key.toLowerCase()];\n    }\n    /**\n     *  Returns true if the response has a body.\n     */\n    hasBody() {\n        return (this.#body != null);\n    }\n    /**\n     *  The request made for this response.\n     */\n    get request() { return this.#request; }\n    /**\n     *  Returns true if this response was a success statusCode.\n     */\n    ok() {\n        return (this.#error.message === \"\" && this.statusCode >= 200 && this.statusCode < 300);\n    }\n    /**\n     *  Throws a ``SERVER_ERROR`` if this response is not ok.\n     */\n    assertOk() {\n        if (this.ok()) {\n            return;\n        }\n        let { message, error } = this.#error;\n        if (message === \"\") {\n            message = `server response ${this.statusCode} ${this.statusMessage}`;\n        }\n        let requestUrl = null;\n        if (this.request) {\n            requestUrl = this.request.url;\n        }\n        let responseBody = null;\n        try {\n            if (this.#body) {\n                responseBody = toUtf8String(this.#body);\n            }\n        }\n        catch (e) { }\n        assert(false, message, \"SERVER_ERROR\", {\n            request: (this.request || \"unknown request\"), response: this, error,\n            info: {\n                requestUrl, responseBody,\n                responseStatus: `${this.statusCode} ${this.statusMessage}`\n            }\n        });\n    }\n}\nfunction getTime() { return (new Date()).getTime(); }\nfunction unpercent(value) {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\nfunction wait(delay) {\n    return new Promise((resolve) => setTimeout(resolve, delay));\n}\n//# sourceMappingURL=fetch.js.map","// utils/base64-browser\nimport { getBytes } from \"./data.js\";\nexport function decodeBase64(textData) {\n    textData = atob(textData);\n    const data = new Uint8Array(textData.length);\n    for (let i = 0; i < textData.length; i++) {\n        data[i] = textData.charCodeAt(i);\n    }\n    return getBytes(data);\n}\nexport function encodeBase64(_data) {\n    const data = getBytes(_data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64-browser.js.map","/**\n *  A constant for the zero address.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000\"``)\n */\nexport const ZeroAddress = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map","/**\n *  The Interface class is a low-level class that accepts an\n *  ABI and provides all the necessary functionality to encode\n *  and decode paramaters to and results from methods, events\n *  and errors.\n *\n *  It also provides several convenience methods to automatically\n *  search and find matching transactions and events to parse them.\n *\n *  @_subsection api/abi:Interfaces  [interfaces]\n */\nimport { keccak256 } from \"../crypto/index.js\";\nimport { id } from \"../hash/index.js\";\nimport { concat, dataSlice, getBigInt, getBytes, getBytesCopy, hexlify, zeroPadBytes, zeroPadValue, isHexString, defineProperties, assertArgument, toBeHex, assert } from \"../utils/index.js\";\nimport { AbiCoder } from \"./abi-coder.js\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder.js\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, Fragment, FunctionFragment, ParamType } from \"./fragments.js\";\nimport { Typed } from \"./typed.js\";\nexport { checkResultErrors, Result };\n/**\n *  When using the [[Interface-parseLog]] to automatically match a Log to its event\n *  for parsing, a **LogDescription** is returned.\n */\nexport class LogDescription {\n    /**\n     *  The matching fragment for the ``topic0``.\n     */\n    fragment;\n    /**\n     *  The name of the Event.\n     */\n    name;\n    /**\n     *  The full Event signature.\n     */\n    signature;\n    /**\n     *  The topic hash for the Event.\n     */\n    topic;\n    /**\n     *  The arguments passed into the Event with ``emit``.\n     */\n    args;\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment, topic, args) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, signature, topic, args\n        });\n    }\n}\n/**\n *  When using the [[Interface-parseTransaction]] to automatically match\n *  a transaction data to its function for parsing,\n *  a **TransactionDescription** is returned.\n */\nexport class TransactionDescription {\n    /**\n     *  The matching fragment from the transaction ``data``.\n     */\n    fragment;\n    /**\n     *  The name of the Function from the transaction ``data``.\n     */\n    name;\n    /**\n     *  The arguments passed to the Function from the transaction ``data``.\n     */\n    args;\n    /**\n     *  The full Function signature from the transaction ``data``.\n     */\n    signature;\n    /**\n     *  The selector for the Function from the transaction ``data``.\n     */\n    selector;\n    /**\n     *  The ``value`` (in wei) from the transaction.\n     */\n    value;\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment, selector, args, value) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, args, signature, selector, value\n        });\n    }\n}\n/**\n *  When using the [[Interface-parseError]] to automatically match an\n *  error for a call result for parsing, an **ErrorDescription** is returned.\n */\nexport class ErrorDescription {\n    /**\n     *  The matching fragment.\n     */\n    fragment;\n    /**\n     *  The name of the Error.\n     */\n    name;\n    /**\n     *  The arguments passed to the Error with ``revert``.\n     */\n    args;\n    /**\n     *  The full Error signature.\n     */\n    signature;\n    /**\n     *  The selector for the Error.\n     */\n    selector;\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment, selector, args) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, args, signature, selector\n        });\n    }\n}\n/**\n *  An **Indexed** is used as a value when a value that does not\n *  fit within a topic (i.e. not a fixed-length, 32-byte type). It\n *  is the ``keccak256`` of the value, and used for types such as\n *  arrays, tuples, bytes and strings.\n */\nexport class Indexed {\n    /**\n     *  The ``keccak256`` of the value logged.\n     */\n    hash;\n    /**\n     *  @_ignore:\n     */\n    _isIndexed;\n    /**\n     *  Returns ``true`` if %%value%% is an **Indexed**.\n     *\n     *  This provides a Type Guard for property access.\n     */\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n    /**\n     *  @_ignore:\n     */\n    constructor(hash) {\n        defineProperties(this, { hash, _isIndexed: true });\n    }\n}\n// https://docs.soliditylang.org/en/v0.8.13/control-structures.html?highlight=panic#panic-via-assert-and-error-via-require\nconst PanicReasons = {\n    \"0\": \"generic panic\",\n    \"1\": \"assert(false)\",\n    \"17\": \"arithmetic overflow\",\n    \"18\": \"division or modulo by zero\",\n    \"33\": \"enum overflow\",\n    \"34\": \"invalid encoded storage byte array accessed\",\n    \"49\": \"out-of-bounds array access; popping on an empty array\",\n    \"50\": \"out-of-bounds access of an array or bytesN\",\n    \"65\": \"out of memory\",\n    \"81\": \"uninitialized function\",\n};\nconst BuiltinErrors = {\n    \"0x08c379a0\": {\n        signature: \"Error(string)\",\n        name: \"Error\",\n        inputs: [\"string\"],\n        reason: (message) => {\n            return `reverted with reason string ${JSON.stringify(message)}`;\n        }\n    },\n    \"0x4e487b71\": {\n        signature: \"Panic(uint256)\",\n        name: \"Panic\",\n        inputs: [\"uint256\"],\n        reason: (code) => {\n            let reason = \"unknown panic code\";\n            if (code >= 0 && code <= 0xff && PanicReasons[code.toString()]) {\n                reason = PanicReasons[code.toString()];\n            }\n            return `reverted with panic code 0x${code.toString(16)} (${reason})`;\n        }\n    }\n};\n/**\n *  An Interface abstracts many of the low-level details for\n *  encoding and decoding the data on the blockchain.\n *\n *  An ABI provides information on how to encode data to send to\n *  a Contract, how to decode the results and events and how to\n *  interpret revert errors.\n *\n *  The ABI can be specified by [any supported format](InterfaceAbi).\n */\nexport class Interface {\n    /**\n     *  All the Contract ABI members (i.e. methods, events, errors, etc).\n     */\n    fragments;\n    /**\n     *  The Contract constructor.\n     */\n    deploy;\n    /**\n     *  The Fallback method, if any.\n     */\n    fallback;\n    /**\n     *  If receiving ether is supported.\n     */\n    receive;\n    #errors;\n    #events;\n    #functions;\n    //    #structs: Map<string, StructFragment>;\n    #abiCoder;\n    /**\n     *  Create a new Interface for the %%fragments%%.\n     */\n    constructor(fragments) {\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        this.#functions = new Map();\n        this.#errors = new Map();\n        this.#events = new Map();\n        //        this.#structs = new Map();\n        const frags = [];\n        for (const a of abi) {\n            try {\n                frags.push(Fragment.from(a));\n            }\n            catch (error) {\n                console.log(`[Warning] Invalid Fragment ${JSON.stringify(a)}:`, error.message);\n            }\n        }\n        defineProperties(this, {\n            fragments: Object.freeze(frags)\n        });\n        let fallback = null;\n        let receive = false;\n        this.#abiCoder = this.getAbiCoder();\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment, index) => {\n            let bucket;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        console.log(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineProperties(this, { deploy: fragment });\n                    return;\n                case \"fallback\":\n                    if (fragment.inputs.length === 0) {\n                        receive = true;\n                    }\n                    else {\n                        assertArgument(!fallback || fragment.payable !== fallback.payable, \"conflicting fallback fragments\", `fragments[${index}]`, fragment);\n                        fallback = fragment;\n                        receive = fallback.payable;\n                    }\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.#functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.#events;\n                    break;\n                case \"error\":\n                    bucket = this.#errors;\n                    break;\n                default:\n                    return;\n            }\n            // Two identical entries; ignore it\n            const signature = fragment.format();\n            if (bucket.has(signature)) {\n                return;\n            }\n            bucket.set(signature, fragment);\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineProperties(this, {\n                deploy: ConstructorFragment.from(\"constructor()\")\n            });\n        }\n        defineProperties(this, { fallback, receive });\n    }\n    /**\n     *  Returns the entire Human-Readable ABI, as an array of\n     *  signatures, optionally as %%minimal%% strings, which\n     *  removes parameter names and unneceesary spaces.\n     */\n    format(minimal) {\n        const format = (minimal ? \"minimal\" : \"full\");\n        const abi = this.fragments.map((f) => f.format(format));\n        return abi;\n    }\n    /**\n     *  Return the JSON-encoded ABI. This is the format Solidiy\n     *  returns.\n     */\n    formatJson() {\n        const abi = this.fragments.map((f) => f.format(\"json\"));\n        // We need to re-bundle the JSON fragments a bit\n        return JSON.stringify(abi.map((j) => JSON.parse(j)));\n    }\n    /**\n     *  The ABI coder that will be used to encode and decode binary\n     *  data.\n     */\n    getAbiCoder() {\n        return AbiCoder.defaultAbiCoder();\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    #getFunction(key, values, forceUnique) {\n        // Selector\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of this.#functions.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#functions) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (values) {\n                const lastValue = (values.length > 0) ? values[values.length - 1] : null;\n                let valueLength = values.length;\n                let allowOptions = true;\n                if (Typed.isTyped(lastValue) && lastValue.type === \"overrides\") {\n                    allowOptions = false;\n                    valueLength--;\n                }\n                // Remove all matches that don't have a compatible length. The args\n                // may contain an overrides, so the match may have n or n - 1 parameters\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs.length;\n                    if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                        matching.splice(i, 1);\n                    }\n                }\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n                        // We are past the inputs\n                        if (j >= inputs.length) {\n                            if (values[j].type === \"overrides\") {\n                                continue;\n                            }\n                            matching.splice(i, 1);\n                            break;\n                        }\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            // We found a single matching signature with an overrides, but the\n            // last value is something that cannot possibly be an options\n            if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n                const lastArg = values[values.length - 1];\n                if (lastArg == null || Array.isArray(lastArg) || typeof (lastArg) !== \"object\") {\n                    matching.splice(0, 1);\n                }\n            }\n            if (matching.length === 0) {\n                return null;\n            }\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous function description (i.e. matches ${matchStr})`, \"key\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.#functions.get(FunctionFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     *  Get the function name for %%key%%, which may be a function selector,\n     *  function name or function signature that belongs to the ABI.\n     */\n    getFunctionName(key) {\n        const fragment = this.#getFunction(key, null, false);\n        assertArgument(fragment, \"no matching function\", \"key\", key);\n        return fragment.name;\n    }\n    /**\n     *  Returns true if %%key%% (a function selector, function name or\n     *  function signature) is present in the ABI.\n     *\n     *  In the case of a function name, the name may be ambiguous, so\n     *  accessing the [[FunctionFragment]] may require refinement.\n     */\n    hasFunction(key) {\n        return !!this.#getFunction(key, null, false);\n    }\n    /**\n     *  Get the [[FunctionFragment]] for %%key%%, which may be a function\n     *  selector, function name or function signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple functions match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single function in\n     *  the ABI, this will throw.\n     */\n    getFunction(key, values) {\n        return this.#getFunction(key, values || null, true);\n    }\n    /**\n     *  Iterate over all functions, calling %%callback%%, sorted by their name.\n     */\n    forEachFunction(callback) {\n        const names = Array.from(this.#functions.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback((this.#functions.get(name)), i);\n        }\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    #getEvent(key, values, forceUnique) {\n        // EventTopic\n        if (isHexString(key)) {\n            const eventTopic = key.toLowerCase();\n            for (const fragment of this.#events.values()) {\n                if (eventTopic === fragment.topicHash) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#events) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (values) {\n                // Remove all matches that don't have a compatible length.\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    if (matching[i].inputs.length < values.length) {\n                        matching.splice(i, 1);\n                    }\n                }\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (matching.length === 0) {\n                return null;\n            }\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous event description (i.e. matches ${matchStr})`, \"key\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.#events.get(EventFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     *  Get the event name for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     */\n    getEventName(key) {\n        const fragment = this.#getEvent(key, null, false);\n        assertArgument(fragment, \"no matching event\", \"key\", key);\n        return fragment.name;\n    }\n    /**\n     *  Returns true if %%key%% (an event topic hash, event name or\n     *  event signature) is present in the ABI.\n     *\n     *  In the case of an event name, the name may be ambiguous, so\n     *  accessing the [[EventFragment]] may require refinement.\n     */\n    hasEvent(key) {\n        return !!this.#getEvent(key, null, false);\n    }\n    /**\n     *  Get the [[EventFragment]] for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple events match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single event in\n     *  the ABI, this will throw.\n     */\n    getEvent(key, values) {\n        return this.#getEvent(key, values || null, true);\n    }\n    /**\n     *  Iterate over all events, calling %%callback%%, sorted by their name.\n     */\n    forEachEvent(callback) {\n        const names = Array.from(this.#events.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback((this.#events.get(name)), i);\n        }\n    }\n    /**\n     *  Get the [[ErrorFragment]] for %%key%%, which may be an error\n     *  selector, error name or error signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple errors match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single error in\n     *  the ABI, this will throw.\n     */\n    getError(key, values) {\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            if (BuiltinErrors[selector]) {\n                return ErrorFragment.from(BuiltinErrors[selector].signature);\n            }\n            for (const fragment of this.#errors.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#errors) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (matching.length === 0) {\n                if (key === \"Error\") {\n                    return ErrorFragment.from(\"error Error(string)\");\n                }\n                if (key === \"Panic\") {\n                    return ErrorFragment.from(\"error Panic(uint256)\");\n                }\n                return null;\n            }\n            else if (matching.length > 1) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous error description (i.e. ${matchStr})`, \"name\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        key = ErrorFragment.from(key).format();\n        if (key === \"Error(string)\") {\n            return ErrorFragment.from(\"error Error(string)\");\n        }\n        if (key === \"Panic(uint256)\") {\n            return ErrorFragment.from(\"error Panic(uint256)\");\n        }\n        const result = this.#errors.get(key);\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     *  Iterate over all errors, calling %%callback%%, sorted by their name.\n     */\n    forEachError(callback) {\n        const names = Array.from(this.#errors.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback((this.#errors.get(name)), i);\n        }\n    }\n    // Get the 4-byte selector used by Solidity to identify a function\n    /*\ngetSelector(fragment: ErrorFragment | FunctionFragment): string {\n    if (typeof(fragment) === \"string\") {\n        const matches: Array<Fragment> = [ ];\n\n        try { matches.push(this.getFunction(fragment)); } catch (error) { }\n        try { matches.push(this.getError(<string>fragment)); } catch (_) { }\n\n        if (matches.length === 0) {\n            logger.throwArgumentError(\"unknown fragment\", \"key\", fragment);\n        } else if (matches.length > 1) {\n            logger.throwArgumentError(\"ambiguous fragment matches function and error\", \"key\", fragment);\n        }\n\n        fragment = matches[0];\n    }\n\n    return dataSlice(id(fragment.format()), 0, 4);\n}\n    */\n    // Get the 32-byte topic hash used by Solidity to identify an event\n    /*\n    getEventTopic(fragment: EventFragment): string {\n        //if (typeof(fragment) === \"string\") { fragment = this.getEvent(eventFragment); }\n        return id(fragment.format());\n    }\n    */\n    _decodeParams(params, data) {\n        return this.#abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this.#abiCoder.encode(params, values);\n    }\n    /**\n     *  Encodes a ``tx.data`` object for deploying the Contract with\n     *  the %%values%% as the constructor arguments.\n     */\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified error (see [[getError]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match error ${fragment.name}.`, \"data\", data);\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n    /**\n     *  Encodes the transaction revert data for a call result that\n     *  reverted from the the Contract with the sepcified %%error%%\n     *  (see [[getError]] for valid values for %%fragment%%) with the %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [])\n        ]);\n    }\n    /**\n     *  Decodes the %%data%% from a transaction ``tx.data`` for\n     *  the function specified (see [[getFunction]] for valid values\n     *  for %%fragment%%).\n     *\n     *  Most developers should prefer the [[parseTransaction]] method\n     *  instead, which will automatically detect the fragment.\n     */\n    decodeFunctionData(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match function ${fragment.name}.`, \"data\", data);\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n    /**\n     *  Encodes the ``tx.data`` for a transaction that calls the function\n     *  specified (see [[getFunction]] for valid values for %%fragment%%) with\n     *  the %%values%%.\n     */\n    encodeFunctionData(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [])\n        ]);\n    }\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeFunctionResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        let message = \"invalid length for result data\";\n        const bytes = getBytesCopy(data);\n        if ((bytes.length % 32) === 0) {\n            try {\n                return this.#abiCoder.decode(fragment.outputs, bytes);\n            }\n            catch (error) {\n                message = \"could not decode result data\";\n            }\n        }\n        // Call returned data with no error, but the data is junk\n        assert(false, message, \"BAD_DATA\", {\n            value: hexlify(bytes),\n            info: { method: fragment.name, signature: fragment.format() }\n        });\n    }\n    makeError(_data, tx) {\n        const data = getBytes(_data, \"data\");\n        const error = AbiCoder.getBuiltinCallException(\"call\", tx, data);\n        // Not a built-in error; try finding a custom error\n        const customPrefix = \"execution reverted (unknown custom error)\";\n        if (error.message.startsWith(customPrefix)) {\n            const selector = hexlify(data.slice(0, 4));\n            const ef = this.getError(selector);\n            if (ef) {\n                try {\n                    const args = this.#abiCoder.decode(ef.inputs, data.slice(4));\n                    error.revert = {\n                        name: ef.name, signature: ef.format(), args\n                    };\n                    error.reason = error.revert.signature;\n                    error.message = `execution reverted: ${error.reason}`;\n                }\n                catch (e) {\n                    error.message = `execution reverted (coult not decode custom error)`;\n                }\n            }\n        }\n        // Add the invocation, if available\n        const parsed = this.parseTransaction(tx);\n        if (parsed) {\n            error.invocation = {\n                method: parsed.name,\n                signature: parsed.signature,\n                args: parsed.args\n            };\n        }\n        return error;\n    }\n    /**\n     *  Encodes the result data (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values\n     *  for %%fragment%%) with %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeFunctionResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return hexlify(this.#abiCoder.encode(fragment.outputs, values || []));\n    }\n    /*\n        spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {\n            const promises: Array<Promise<>> = [ ];\n            const process = function(type: ParamType, value: any): any {\n                if (type.baseType === \"array\") {\n                    return descend(type.child\n                }\n                if (type. === \"address\") {\n                }\n            };\n    \n            const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {\n                if (inputs.length !== values.length) { throw new Error(\"length mismatch\"); }\n                \n            };\n    \n            const result: Array<any> = [ ];\n            values.forEach((value, index) => {\n                if (value == null) {\n                    topics.push(null);\n                } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                    logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n                } else if (Array.isArray(value)) {\n                    topics.push(value.map((value) => encodeTopic(param, value)));\n                } else {\n                    topics.push(encodeTopic(param, value));\n                }\n            });\n        }\n    */\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n        assert(values.length <= fragment.inputs.length, `too many arguments for ${fragment.format()}`, \"UNEXPECTED_ARGUMENT\", { count: values.length, expectedCount: fragment.inputs.length });\n        const topics = [];\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n        // @TODO: Use the coders for this; to properly support tuples, etc.\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            if (param.type === \"bool\" && typeof (value) === \"boolean\") {\n                value = (value ? \"0x01\" : \"0x00\");\n            }\n            else if (param.type.match(/^u?int/)) {\n                value = toBeHex(value); // @TODO: Should this toTwos??\n            }\n            else if (param.type.match(/^bytes/)) {\n                value = zeroPadBytes(value, 32);\n            }\n            else if (param.type === \"address\") {\n                // Check addresses are valid\n                this.#abiCoder.encode([\"address\"], [value]);\n            }\n            return zeroPadValue(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            const param = fragment.inputs[index];\n            if (!param.indexed) {\n                assertArgument(value == null, \"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                assertArgument(false, \"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n        assertArgument(values.length === fragment.inputs.length, \"event arguments/values mismatch\", \"values\", values);\n        fragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this.#abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this.#abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(fragment, data, topics) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n        if (topics != null && !fragment.anonymous) {\n            const eventTopic = fragment.topicHash;\n            assertArgument(isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic, \"fragment/topic mismatch\", \"topics[0]\", topics[0]);\n            topics = topics.slice(1);\n        }\n        const indexed = [];\n        const nonIndexed = [];\n        const dynamic = [];\n        fragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.from({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        const resultIndexed = (topics != null) ? this.#abiCoder.decode(indexed, concat(topics)) : null;\n        const resultNonIndexed = this.#abiCoder.decode(nonIndexed, data, true);\n        //const result: (Array<any> & { [ key: string ]: any }) = [ ];\n        const values = [];\n        const keys = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        fragment.inputs.forEach((param, index) => {\n            let value = null;\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    value = new Indexed(null);\n                }\n                else if (dynamic[index]) {\n                    value = new Indexed(resultIndexed[indexedIndex++]);\n                }\n                else {\n                    try {\n                        value = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        value = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    value = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    value = error;\n                }\n            }\n            values.push(value);\n            keys.push(param.name || null);\n        });\n        return Result.fromItems(values, keys);\n    }\n    /**\n     *  Parses a transaction, finding the matching function and extracts\n     *  the parameter values along with other useful function details.\n     *\n     *  If the matching function cannot be found, return null.\n     */\n    parseTransaction(tx) {\n        const data = getBytes(tx.data, \"tx.data\");\n        const value = getBigInt((tx.value != null) ? tx.value : 0, \"tx.value\");\n        const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n        if (!fragment) {\n            return null;\n        }\n        const args = this.#abiCoder.decode(fragment.inputs, data.slice(4));\n        return new TransactionDescription(fragment, fragment.selector, args, value);\n    }\n    parseCallResult(data) {\n        throw new Error(\"@TODO\");\n    }\n    /**\n     *  Parses a receipt log, finding the matching event and extracts\n     *  the parameter values along with other useful event details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseLog(log) {\n        const fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));\n    }\n    /**\n     *  Parses a revert data, finding the matching error and extracts\n     *  the parameter values along with other useful error details.\n     *\n     *  If the matching error cannot be found, returns null.\n     */\n    parseError(data) {\n        const hexData = hexlify(data);\n        const fragment = this.getError(dataSlice(hexData, 0, 4));\n        if (!fragment) {\n            return null;\n        }\n        const args = this.#abiCoder.decode(fragment.inputs, dataSlice(hexData, 4));\n        return new ErrorDescription(fragment, fragment.selector, args);\n    }\n    /**\n     *  Creates a new [[Interface]] from the ABI %%value%%.\n     *\n     *  The %%value%% may be provided as an existing [[Interface]] object,\n     *  a JSON-encoded ABI or any Human-Readable ABI format.\n     */\n    static from(value) {\n        // Already an Interface, which is immutable\n        if (value instanceof Interface) {\n            return value;\n        }\n        // JSON\n        if (typeof (value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        // An Interface; possibly from another v6 instance\n        if (typeof (value.formatJson) === \"function\") {\n            return new Interface(value.formatJson());\n        }\n        // A legacy Interface; from an older version\n        if (typeof (value.format) === \"function\") {\n            return new Interface(value.format(\"json\"));\n        }\n        // Array of fragments\n        return new Interface(value);\n    }\n}\n//# sourceMappingURL=interface.js.map","//import { resolveAddress } from \"@ethersproject/address\";\nimport { defineProperties, getBigInt, getNumber, hexlify, isBytesLike, resolveProperties, assert, assertArgument, isError, makeError } from \"../utils/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\nconst BN_0 = BigInt(0);\n// -----------------------\nfunction getValue(value) {\n    if (value == null) {\n        return null;\n    }\n    return value;\n}\nfunction toJson(value) {\n    if (value == null) {\n        return null;\n    }\n    return value.toString();\n}\n// @TODO? <T extends FeeData = { }> implements Required<T>\n/**\n *  A **FeeData** wraps all the fee-related values associated with\n *  the network.\n */\nexport class FeeData {\n    /**\n     *  The gas price for legacy networks.\n     */\n    gasPrice;\n    /**\n     *  The maximum fee to pay per gas.\n     *\n     *  The base fee per gas is defined by the network and based on\n     *  congestion, increasing the cost during times of heavy load\n     *  and lowering when less busy.\n     *\n     *  The actual fee per gas will be the base fee for the block\n     *  and the priority fee, up to the max fee per gas.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    maxFeePerGas;\n    /**\n     *  The additional amout to pay per gas to encourage a validator\n     *  to include the transaction.\n     *\n     *  The purpose of this is to compensate the validator for the\n     *  adjusted risk for including a given transaction.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    maxPriorityFeePerGas;\n    /**\n     *  Creates a new FeeData for %%gasPrice%%, %%maxFeePerGas%% and\n     *  %%maxPriorityFeePerGas%%.\n     */\n    constructor(gasPrice, maxFeePerGas, maxPriorityFeePerGas) {\n        defineProperties(this, {\n            gasPrice: getValue(gasPrice),\n            maxFeePerGas: getValue(maxFeePerGas),\n            maxPriorityFeePerGas: getValue(maxPriorityFeePerGas)\n        });\n    }\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON() {\n        const { gasPrice, maxFeePerGas, maxPriorityFeePerGas } = this;\n        return {\n            _type: \"FeeData\",\n            gasPrice: toJson(gasPrice),\n            maxFeePerGas: toJson(maxFeePerGas),\n            maxPriorityFeePerGas: toJson(maxPriorityFeePerGas),\n        };\n    }\n}\n;\n/**\n *  Returns a copy of %%req%% with all properties coerced to their strict\n *  types.\n */\nexport function copyRequest(req) {\n    const result = {};\n    // These could be addresses, ENS names or Addressables\n    if (req.to) {\n        result.to = req.to;\n    }\n    if (req.from) {\n        result.from = req.from;\n    }\n    if (req.data) {\n        result.data = hexlify(req.data);\n    }\n    const bigIntKeys = \"chainId,gasLimit,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,value\".split(/,/);\n    for (const key of bigIntKeys) {\n        if (!(key in req) || req[key] == null) {\n            continue;\n        }\n        result[key] = getBigInt(req[key], `request.${key}`);\n    }\n    const numberKeys = \"type,nonce\".split(/,/);\n    for (const key of numberKeys) {\n        if (!(key in req) || req[key] == null) {\n            continue;\n        }\n        result[key] = getNumber(req[key], `request.${key}`);\n    }\n    if (req.accessList) {\n        result.accessList = accessListify(req.accessList);\n    }\n    if (\"blockTag\" in req) {\n        result.blockTag = req.blockTag;\n    }\n    if (\"enableCcipRead\" in req) {\n        result.enableCcipRead = !!req.enableCcipRead;\n    }\n    if (\"customData\" in req) {\n        result.customData = req.customData;\n    }\n    if (\"blobVersionedHashes\" in req && req.blobVersionedHashes) {\n        result.blobVersionedHashes = req.blobVersionedHashes.slice();\n    }\n    if (\"kzg\" in req) {\n        result.kzg = req.kzg;\n    }\n    if (\"blobs\" in req && req.blobs) {\n        result.blobs = req.blobs.map((b) => {\n            if (isBytesLike(b)) {\n                return hexlify(b);\n            }\n            return Object.assign({}, b);\n        });\n    }\n    return result;\n}\n/**\n *  A **Block** represents the data associated with a full block on\n *  Ethereum.\n */\nexport class Block {\n    /**\n     *  The provider connected to the block used to fetch additional details\n     *  if necessary.\n     */\n    provider;\n    /**\n     *  The block number, sometimes called the block height. This is a\n     *  sequential number that is one higher than the parent block.\n     */\n    number;\n    /**\n     *  The block hash.\n     *\n     *  This hash includes all properties, so can be safely used to identify\n     *  an exact set of block properties.\n     */\n    hash;\n    /**\n     *  The timestamp for this block, which is the number of seconds since\n     *  epoch that this block was included.\n     */\n    timestamp;\n    /**\n     *  The block hash of the parent block.\n     */\n    parentHash;\n    /**\n     *  The hash tree root of the parent beacon block for the given\n     *  execution block. See [[link-eip-4788]].\n     */\n    parentBeaconBlockRoot;\n    /**\n     *  The nonce.\n     *\n     *  On legacy networks, this is the random number inserted which\n     *  permitted the difficulty target to be reached.\n     */\n    nonce;\n    /**\n     *  The difficulty target.\n     *\n     *  On legacy networks, this is the proof-of-work target required\n     *  for a block to meet the protocol rules to be included.\n     *\n     *  On modern networks, this is a random number arrived at using\n     *  randao.  @TODO: Find links?\n     */\n    difficulty;\n    /**\n     *  The total gas limit for this block.\n     */\n    gasLimit;\n    /**\n     *  The total gas used in this block.\n     */\n    gasUsed;\n    /**\n     *  The root hash for the global state after applying changes\n     *  in this block.\n     */\n    stateRoot;\n    /**\n     *  The hash of the transaction receipts trie.\n     */\n    receiptsRoot;\n    /**\n     *  The total amount of blob gas consumed by the transactions\n     *  within the block. See [[link-eip-4844]].\n     */\n    blobGasUsed;\n    /**\n     *  The running total of blob gas consumed in excess of the\n     *  target, prior to the block. See [[link-eip-4844]].\n     */\n    excessBlobGas;\n    /**\n     *  The miner coinbase address, wihch receives any subsidies for\n     *  including this block.\n     */\n    miner;\n    /**\n     *  The latest RANDAO mix of the post beacon state of\n     *  the previous block.\n     */\n    prevRandao;\n    /**\n     *  Any extra data the validator wished to include.\n     */\n    extraData;\n    /**\n     *  The base fee per gas that all transactions in this block were\n     *  charged.\n     *\n     *  This adjusts after each block, depending on how congested the network\n     *  is.\n     */\n    baseFeePerGas;\n    #transactions;\n    /**\n     *  Create a new **Block** object.\n     *\n     *  This should generally not be necessary as the unless implementing a\n     *  low-level library.\n     */\n    constructor(block, provider) {\n        this.#transactions = block.transactions.map((tx) => {\n            if (typeof (tx) !== \"string\") {\n                return new TransactionResponse(tx, provider);\n            }\n            return tx;\n        });\n        defineProperties(this, {\n            provider,\n            hash: getValue(block.hash),\n            number: block.number,\n            timestamp: block.timestamp,\n            parentHash: block.parentHash,\n            parentBeaconBlockRoot: block.parentBeaconBlockRoot,\n            nonce: block.nonce,\n            difficulty: block.difficulty,\n            gasLimit: block.gasLimit,\n            gasUsed: block.gasUsed,\n            blobGasUsed: block.blobGasUsed,\n            excessBlobGas: block.excessBlobGas,\n            miner: block.miner,\n            prevRandao: getValue(block.prevRandao),\n            extraData: block.extraData,\n            baseFeePerGas: getValue(block.baseFeePerGas),\n            stateRoot: block.stateRoot,\n            receiptsRoot: block.receiptsRoot,\n        });\n    }\n    /**\n     *  Returns the list of transaction hashes, in the order\n     *  they were executed within the block.\n     */\n    get transactions() {\n        return this.#transactions.map((tx) => {\n            if (typeof (tx) === \"string\") {\n                return tx;\n            }\n            return tx.hash;\n        });\n    }\n    /**\n     *  Returns the complete transactions, in the order they\n     *  were executed within the block.\n     *\n     *  This is only available for blocks which prefetched\n     *  transactions, by passing ``true`` to %%prefetchTxs%%\n     *  into [[Provider-getBlock]].\n     */\n    get prefetchedTransactions() {\n        const txs = this.#transactions.slice();\n        // Doesn't matter...\n        if (txs.length === 0) {\n            return [];\n        }\n        // Make sure we prefetched the transactions\n        assert(typeof (txs[0]) === \"object\", \"transactions were not prefetched with block request\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"transactionResponses()\"\n        });\n        return txs;\n    }\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON() {\n        const { baseFeePerGas, difficulty, extraData, gasLimit, gasUsed, hash, miner, prevRandao, nonce, number, parentHash, parentBeaconBlockRoot, stateRoot, receiptsRoot, timestamp, transactions } = this;\n        return {\n            _type: \"Block\",\n            baseFeePerGas: toJson(baseFeePerGas),\n            difficulty: toJson(difficulty),\n            extraData,\n            gasLimit: toJson(gasLimit),\n            gasUsed: toJson(gasUsed),\n            blobGasUsed: toJson(this.blobGasUsed),\n            excessBlobGas: toJson(this.excessBlobGas),\n            hash, miner, prevRandao, nonce, number, parentHash, timestamp,\n            parentBeaconBlockRoot, stateRoot, receiptsRoot,\n            transactions,\n        };\n    }\n    [Symbol.iterator]() {\n        let index = 0;\n        const txs = this.transactions;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return {\n                        value: txs[index++], done: false\n                    };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    /**\n     *  The number of transactions in this block.\n     */\n    get length() { return this.#transactions.length; }\n    /**\n     *  The [[link-js-date]] this block was included at.\n     */\n    get date() {\n        if (this.timestamp == null) {\n            return null;\n        }\n        return new Date(this.timestamp * 1000);\n    }\n    /**\n     *  Get the transaction at %%indexe%% within this block.\n     */\n    async getTransaction(indexOrHash) {\n        // Find the internal value by its index or hash\n        let tx = undefined;\n        if (typeof (indexOrHash) === \"number\") {\n            tx = this.#transactions[indexOrHash];\n        }\n        else {\n            const hash = indexOrHash.toLowerCase();\n            for (const v of this.#transactions) {\n                if (typeof (v) === \"string\") {\n                    if (v !== hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                }\n                else {\n                    if (v.hash === hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                }\n            }\n        }\n        if (tx == null) {\n            throw new Error(\"no such tx\");\n        }\n        if (typeof (tx) === \"string\") {\n            return (await this.provider.getTransaction(tx));\n        }\n        else {\n            return tx;\n        }\n    }\n    /**\n     *  If a **Block** was fetched with a request to include the transactions\n     *  this will allow synchronous access to those transactions.\n     *\n     *  If the transactions were not prefetched, this will throw.\n     */\n    getPrefetchedTransaction(indexOrHash) {\n        const txs = this.prefetchedTransactions;\n        if (typeof (indexOrHash) === \"number\") {\n            return txs[indexOrHash];\n        }\n        indexOrHash = indexOrHash.toLowerCase();\n        for (const tx of txs) {\n            if (tx.hash === indexOrHash) {\n                return tx;\n            }\n        }\n        assertArgument(false, \"no matching transaction\", \"indexOrHash\", indexOrHash);\n    }\n    /**\n     *  Returns true if this block been mined. This provides a type guard\n     *  for all properties on a [[MinedBlock]].\n     */\n    isMined() { return !!this.hash; }\n    /**\n     *  Returns true if this block is an [[link-eip-2930]] block.\n     */\n    isLondon() {\n        return !!this.baseFeePerGas;\n    }\n    /**\n     *  @_ignore:\n     */\n    orphanedEvent() {\n        if (!this.isMined()) {\n            throw new Error(\"\");\n        }\n        return createOrphanedBlockFilter(this);\n    }\n}\n//////////////////////\n// Log\n/**\n *  A **Log** in Ethereum represents an event that has been included in a\n *  transaction using the ``LOG*`` opcodes, which are most commonly used by\n *  Solidity's emit for announcing events.\n */\nexport class Log {\n    /**\n     *  The provider connected to the log used to fetch additional details\n     *  if necessary.\n     */\n    provider;\n    /**\n     *  The transaction hash of the transaction this log occurred in. Use the\n     *  [[Log-getTransaction]] to get the [[TransactionResponse]].\n     */\n    transactionHash;\n    /**\n     *  The block hash of the block this log occurred in. Use the\n     *  [[Log-getBlock]] to get the [[Block]].\n     */\n    blockHash;\n    /**\n     *  The block number of the block this log occurred in. It is preferred\n     *  to use the [[Block-hash]] when fetching the related [[Block]],\n     *  since in the case of an orphaned block, the block at that height may\n     *  have changed.\n     */\n    blockNumber;\n    /**\n     *  If the **Log** represents a block that was removed due to an orphaned\n     *  block, this will be true.\n     *\n     *  This can only happen within an orphan event listener.\n     */\n    removed;\n    /**\n     *  The address of the contract that emitted this log.\n     */\n    address;\n    /**\n     *  The data included in this log when it was emitted.\n     */\n    data;\n    /**\n     *  The indexed topics included in this log when it was emitted.\n     *\n     *  All topics are included in the bloom filters, so they can be\n     *  efficiently filtered using the [[Provider-getLogs]] method.\n     */\n    topics;\n    /**\n     *  The index within the block this log occurred at. This is generally\n     *  not useful to developers, but can be used with the various roots\n     *  to proof inclusion within a block.\n     */\n    index;\n    /**\n     *  The index within the transaction of this log.\n     */\n    transactionIndex;\n    /**\n     *  @_ignore:\n     */\n    constructor(log, provider) {\n        this.provider = provider;\n        const topics = Object.freeze(log.topics.slice());\n        defineProperties(this, {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n            removed: log.removed,\n            address: log.address,\n            data: log.data,\n            topics,\n            index: log.index,\n            transactionIndex: log.transactionIndex,\n        });\n    }\n    /**\n     *  Returns a JSON-compatible object.\n     */\n    toJSON() {\n        const { address, blockHash, blockNumber, data, index, removed, topics, transactionHash, transactionIndex } = this;\n        return {\n            _type: \"log\",\n            address, blockHash, blockNumber, data, index,\n            removed, topics, transactionHash, transactionIndex\n        };\n    }\n    /**\n     *  Returns the block that this log occurred in.\n     */\n    async getBlock() {\n        const block = await this.provider.getBlock(this.blockHash);\n        assert(!!block, \"failed to find transaction\", \"UNKNOWN_ERROR\", {});\n        return block;\n    }\n    /**\n     *  Returns the transaction that this log occurred in.\n     */\n    async getTransaction() {\n        const tx = await this.provider.getTransaction(this.transactionHash);\n        assert(!!tx, \"failed to find transaction\", \"UNKNOWN_ERROR\", {});\n        return tx;\n    }\n    /**\n     *  Returns the transaction receipt fot the transaction that this\n     *  log occurred in.\n     */\n    async getTransactionReceipt() {\n        const receipt = await this.provider.getTransactionReceipt(this.transactionHash);\n        assert(!!receipt, \"failed to find transaction receipt\", \"UNKNOWN_ERROR\", {});\n        return receipt;\n    }\n    /**\n     *  @_ignore:\n     */\n    removedEvent() {\n        return createRemovedLogFilter(this);\n    }\n}\n//////////////////////\n// Transaction Receipt\n/*\nexport interface LegacyTransactionReceipt {\n    byzantium: false;\n    status: null;\n    root: string;\n}\n\nexport interface ByzantiumTransactionReceipt {\n    byzantium: true;\n    status: number;\n    root: null;\n}\n*/\n/**\n *  A **TransactionReceipt** includes additional information about a\n *  transaction that is only available after it has been mined.\n */\nexport class TransactionReceipt {\n    /**\n     *  The provider connected to the log used to fetch additional details\n     *  if necessary.\n     */\n    provider;\n    /**\n     *  The address the transaction was sent to.\n     */\n    to;\n    /**\n     *  The sender of the transaction.\n     */\n    from;\n    /**\n     *  The address of the contract if the transaction was directly\n     *  responsible for deploying one.\n     *\n     *  This is non-null **only** if the ``to`` is empty and the ``data``\n     *  was successfully executed as initcode.\n     */\n    contractAddress;\n    /**\n     *  The transaction hash.\n     */\n    hash;\n    /**\n     *  The index of this transaction within the block transactions.\n     */\n    index;\n    /**\n     *  The block hash of the [[Block]] this transaction was included in.\n     */\n    blockHash;\n    /**\n     *  The block number of the [[Block]] this transaction was included in.\n     */\n    blockNumber;\n    /**\n     *  The bloom filter bytes that represent all logs that occurred within\n     *  this transaction. This is generally not useful for most developers,\n     *  but can be used to validate the included logs.\n     */\n    logsBloom;\n    /**\n     *  The actual amount of gas used by this transaction.\n     *\n     *  When creating a transaction, the amount of gas that will be used can\n     *  only be approximated, but the sender must pay the gas fee for the\n     *  entire gas limit. After the transaction, the difference is refunded.\n     */\n    gasUsed;\n    /**\n     *  The gas used for BLObs. See [[link-eip-4844]].\n     */\n    blobGasUsed;\n    /**\n     *  The amount of gas used by all transactions within the block for this\n     *  and all transactions with a lower ``index``.\n     *\n     *  This is generally not useful for developers but can be used to\n     *  validate certain aspects of execution.\n     */\n    cumulativeGasUsed;\n    /**\n     *  The actual gas price used during execution.\n     *\n     *  Due to the complexity of [[link-eip-1559]] this value can only\n     *  be caluclated after the transaction has been mined, snce the base\n     *  fee is protocol-enforced.\n     */\n    gasPrice;\n    /**\n     *  The price paid per BLOB in gas. See [[link-eip-4844]].\n     */\n    blobGasPrice;\n    /**\n     *  The [[link-eip-2718]] transaction type.\n     */\n    type;\n    //readonly byzantium!: boolean;\n    /**\n     *  The status of this transaction, indicating success (i.e. ``1``) or\n     *  a revert (i.e. ``0``).\n     *\n     *  This is available in post-byzantium blocks, but some backends may\n     *  backfill this value.\n     */\n    status;\n    /**\n     *  The root hash of this transaction.\n     *\n     *  This is no present and was only included in pre-byzantium blocks, but\n     *  could be used to validate certain parts of the receipt.\n     */\n    root;\n    #logs;\n    /**\n     *  @_ignore:\n     */\n    constructor(tx, provider) {\n        this.#logs = Object.freeze(tx.logs.map((log) => {\n            return new Log(log, provider);\n        }));\n        let gasPrice = BN_0;\n        if (tx.effectiveGasPrice != null) {\n            gasPrice = tx.effectiveGasPrice;\n        }\n        else if (tx.gasPrice != null) {\n            gasPrice = tx.gasPrice;\n        }\n        defineProperties(this, {\n            provider,\n            to: tx.to,\n            from: tx.from,\n            contractAddress: tx.contractAddress,\n            hash: tx.hash,\n            index: tx.index,\n            blockHash: tx.blockHash,\n            blockNumber: tx.blockNumber,\n            logsBloom: tx.logsBloom,\n            gasUsed: tx.gasUsed,\n            cumulativeGasUsed: tx.cumulativeGasUsed,\n            blobGasUsed: tx.blobGasUsed,\n            gasPrice,\n            blobGasPrice: tx.blobGasPrice,\n            type: tx.type,\n            //byzantium: tx.byzantium,\n            status: tx.status,\n            root: tx.root\n        });\n    }\n    /**\n     *  The logs for this transaction.\n     */\n    get logs() { return this.#logs; }\n    /**\n     *  Returns a JSON-compatible representation.\n     */\n    toJSON() {\n        const { to, from, contractAddress, hash, index, blockHash, blockNumber, logsBloom, logs, //byzantium, \n        status, root } = this;\n        return {\n            _type: \"TransactionReceipt\",\n            blockHash, blockNumber,\n            //byzantium, \n            contractAddress,\n            cumulativeGasUsed: toJson(this.cumulativeGasUsed),\n            from,\n            gasPrice: toJson(this.gasPrice),\n            blobGasUsed: toJson(this.blobGasUsed),\n            blobGasPrice: toJson(this.blobGasPrice),\n            gasUsed: toJson(this.gasUsed),\n            hash, index, logs, logsBloom, root, status, to\n        };\n    }\n    /**\n     *  @_ignore:\n     */\n    get length() { return this.logs.length; }\n    [Symbol.iterator]() {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return { value: this.logs[index++], done: false };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    /**\n     *  The total fee for this transaction, in wei.\n     */\n    get fee() {\n        return this.gasUsed * this.gasPrice;\n    }\n    /**\n     *  Resolves to the block this transaction occurred in.\n     */\n    async getBlock() {\n        const block = await this.provider.getBlock(this.blockHash);\n        if (block == null) {\n            throw new Error(\"TODO\");\n        }\n        return block;\n    }\n    /**\n     *  Resolves to the transaction this transaction occurred in.\n     */\n    async getTransaction() {\n        const tx = await this.provider.getTransaction(this.hash);\n        if (tx == null) {\n            throw new Error(\"TODO\");\n        }\n        return tx;\n    }\n    /**\n     *  Resolves to the return value of the execution of this transaction.\n     *\n     *  Support for this feature is limited, as it requires an archive node\n     *  with the ``debug_`` or ``trace_`` API enabled.\n     */\n    async getResult() {\n        return (await this.provider.getTransactionResult(this.hash));\n    }\n    /**\n     *  Resolves to the number of confirmations this transaction has.\n     */\n    async confirmations() {\n        return (await this.provider.getBlockNumber()) - this.blockNumber + 1;\n    }\n    /**\n     *  @_ignore:\n     */\n    removedEvent() {\n        return createRemovedTransactionFilter(this);\n    }\n    /**\n     *  @_ignore:\n     */\n    reorderedEvent(other) {\n        assert(!other || other.isMined(), \"unmined 'other' transction cannot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"reorderedEvent(other)\" });\n        return createReorderedTransactionFilter(this, other);\n    }\n}\n/**\n *  A **TransactionResponse** includes all properties about a transaction\n *  that was sent to the network, which may or may not be included in a\n *  block.\n *\n *  The [[TransactionResponse-isMined]] can be used to check if the\n *  transaction has been mined as well as type guard that the otherwise\n *  possibly ``null`` properties are defined.\n */\nexport class TransactionResponse {\n    /**\n     *  The provider this is connected to, which will influence how its\n     *  methods will resolve its async inspection methods.\n     */\n    provider;\n    /**\n     *  The block number of the block that this transaction was included in.\n     *\n     *  This is ``null`` for pending transactions.\n     */\n    blockNumber;\n    /**\n     *  The blockHash of the block that this transaction was included in.\n     *\n     *  This is ``null`` for pending transactions.\n     */\n    blockHash;\n    /**\n     *  The index within the block that this transaction resides at.\n     */\n    index;\n    /**\n     *  The transaction hash.\n     */\n    hash;\n    /**\n     *  The [[link-eip-2718]] transaction envelope type. This is\n     *  ``0`` for legacy transactions types.\n     */\n    type;\n    /**\n     *  The receiver of this transaction.\n     *\n     *  If ``null``, then the transaction is an initcode transaction.\n     *  This means the result of executing the [[data]] will be deployed\n     *  as a new contract on chain (assuming it does not revert) and the\n     *  address may be computed using [[getCreateAddress]].\n     */\n    to;\n    /**\n     *  The sender of this transaction. It is implicitly computed\n     *  from the transaction pre-image hash (as the digest) and the\n     *  [[signature]] using ecrecover.\n     */\n    from;\n    /**\n     *  The nonce, which is used to prevent replay attacks and offer\n     *  a method to ensure transactions from a given sender are explicitly\n     *  ordered.\n     *\n     *  When sending a transaction, this must be equal to the number of\n     *  transactions ever sent by [[from]].\n     */\n    nonce;\n    /**\n     *  The maximum units of gas this transaction can consume. If execution\n     *  exceeds this, the entries transaction is reverted and the sender\n     *  is charged for the full amount, despite not state changes being made.\n     */\n    gasLimit;\n    /**\n     *  The gas price can have various values, depending on the network.\n     *\n     *  In modern networks, for transactions that are included this is\n     *  the //effective gas price// (the fee per gas that was actually\n     *  charged), while for transactions that have not been included yet\n     *  is the [[maxFeePerGas]].\n     *\n     *  For legacy transactions, or transactions on legacy networks, this\n     *  is the fee that will be charged per unit of gas the transaction\n     *  consumes.\n     */\n    gasPrice;\n    /**\n     *  The maximum priority fee (per unit of gas) to allow a\n     *  validator to charge the sender. This is inclusive of the\n     *  [[maxFeeFeePerGas]].\n     */\n    maxPriorityFeePerGas;\n    /**\n     *  The maximum fee (per unit of gas) to allow this transaction\n     *  to charge the sender.\n     */\n    maxFeePerGas;\n    /**\n     *  The [[link-eip-4844]] max fee per BLOb gas.\n     */\n    maxFeePerBlobGas;\n    /**\n     *  The data.\n     */\n    data;\n    /**\n     *  The value, in wei. Use [[formatEther]] to format this value\n     *  as ether.\n     */\n    value;\n    /**\n     *  The chain ID.\n     */\n    chainId;\n    /**\n     *  The signature.\n     */\n    signature;\n    /**\n     *  The [[link-eip-2930]] access list for transaction types that\n     *  support it, otherwise ``null``.\n     */\n    accessList;\n    /**\n     *  The [[link-eip-4844]] BLOb versioned hashes.\n     */\n    blobVersionedHashes;\n    #startBlock;\n    /**\n     *  @_ignore:\n     */\n    constructor(tx, provider) {\n        this.provider = provider;\n        this.blockNumber = (tx.blockNumber != null) ? tx.blockNumber : null;\n        this.blockHash = (tx.blockHash != null) ? tx.blockHash : null;\n        this.hash = tx.hash;\n        this.index = tx.index;\n        this.type = tx.type;\n        this.from = tx.from;\n        this.to = tx.to || null;\n        this.gasLimit = tx.gasLimit;\n        this.nonce = tx.nonce;\n        this.data = tx.data;\n        this.value = tx.value;\n        this.gasPrice = tx.gasPrice;\n        this.maxPriorityFeePerGas = (tx.maxPriorityFeePerGas != null) ? tx.maxPriorityFeePerGas : null;\n        this.maxFeePerGas = (tx.maxFeePerGas != null) ? tx.maxFeePerGas : null;\n        this.maxFeePerBlobGas = (tx.maxFeePerBlobGas != null) ? tx.maxFeePerBlobGas : null;\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n        this.accessList = (tx.accessList != null) ? tx.accessList : null;\n        this.blobVersionedHashes = (tx.blobVersionedHashes != null) ? tx.blobVersionedHashes : null;\n        this.#startBlock = -1;\n    }\n    /**\n     *  Returns a JSON-compatible representation of this transaction.\n     */\n    toJSON() {\n        const { blockNumber, blockHash, index, hash, type, to, from, nonce, data, signature, accessList, blobVersionedHashes } = this;\n        return {\n            _type: \"TransactionResponse\",\n            accessList, blockNumber, blockHash,\n            blobVersionedHashes,\n            chainId: toJson(this.chainId),\n            data, from,\n            gasLimit: toJson(this.gasLimit),\n            gasPrice: toJson(this.gasPrice),\n            hash,\n            maxFeePerGas: toJson(this.maxFeePerGas),\n            maxPriorityFeePerGas: toJson(this.maxPriorityFeePerGas),\n            maxFeePerBlobGas: toJson(this.maxFeePerBlobGas),\n            nonce, signature, to, index, type,\n            value: toJson(this.value),\n        };\n    }\n    /**\n     *  Resolves to the Block that this transaction was included in.\n     *\n     *  This will return null if the transaction has not been included yet.\n     */\n    async getBlock() {\n        let blockNumber = this.blockNumber;\n        if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) {\n                blockNumber = tx.blockNumber;\n            }\n        }\n        if (blockNumber == null) {\n            return null;\n        }\n        const block = this.provider.getBlock(blockNumber);\n        if (block == null) {\n            throw new Error(\"TODO\");\n        }\n        return block;\n    }\n    /**\n     *  Resolves to this transaction being re-requested from the\n     *  provider. This can be used if you have an unmined transaction\n     *  and wish to get an up-to-date populated instance.\n     */\n    async getTransaction() {\n        return this.provider.getTransaction(this.hash);\n    }\n    /**\n     *  Resolve to the number of confirmations this transaction has.\n     */\n    async confirmations() {\n        if (this.blockNumber == null) {\n            const { tx, blockNumber } = await resolveProperties({\n                tx: this.getTransaction(),\n                blockNumber: this.provider.getBlockNumber()\n            });\n            // Not mined yet...\n            if (tx == null || tx.blockNumber == null) {\n                return 0;\n            }\n            return blockNumber - tx.blockNumber + 1;\n        }\n        const blockNumber = await this.provider.getBlockNumber();\n        return blockNumber - this.blockNumber + 1;\n    }\n    /**\n     *  Resolves once this transaction has been mined and has\n     *  %%confirms%% blocks including it (default: ``1``) with an\n     *  optional %%timeout%%.\n     *\n     *  This can resolve to ``null`` only if %%confirms%% is ``0``\n     *  and the transaction has not been mined, otherwise this will\n     *  wait until enough confirmations have completed.\n     */\n    async wait(_confirms, _timeout) {\n        const confirms = (_confirms == null) ? 1 : _confirms;\n        const timeout = (_timeout == null) ? 0 : _timeout;\n        let startBlock = this.#startBlock;\n        let nextScan = -1;\n        let stopScanning = (startBlock === -1) ? true : false;\n        const checkReplacement = async () => {\n            // Get the current transaction count for this sender\n            if (stopScanning) {\n                return null;\n            }\n            const { blockNumber, nonce } = await resolveProperties({\n                blockNumber: this.provider.getBlockNumber(),\n                nonce: this.provider.getTransactionCount(this.from)\n            });\n            // No transaction or our nonce has not been mined yet; but we\n            // can start scanning later when we do start\n            if (nonce < this.nonce) {\n                startBlock = blockNumber;\n                return;\n            }\n            // We were mined; no replacement\n            if (stopScanning) {\n                return null;\n            }\n            const mined = await this.getTransaction();\n            if (mined && mined.blockNumber != null) {\n                return;\n            }\n            // We were replaced; start scanning for that transaction\n            // Starting to scan; look back a few extra blocks for safety\n            if (nextScan === -1) {\n                nextScan = startBlock - 3;\n                if (nextScan < this.#startBlock) {\n                    nextScan = this.#startBlock;\n                }\n            }\n            while (nextScan <= blockNumber) {\n                // Get the next block to scan\n                if (stopScanning) {\n                    return null;\n                }\n                const block = await this.provider.getBlock(nextScan, true);\n                // This should not happen; but we'll try again shortly\n                if (block == null) {\n                    return;\n                }\n                // We were mined; no replacement\n                for (const hash of block) {\n                    if (hash === this.hash) {\n                        return;\n                    }\n                }\n                // Search for the transaction that replaced us\n                for (let i = 0; i < block.length; i++) {\n                    const tx = await block.getTransaction(i);\n                    if (tx.from === this.from && tx.nonce === this.nonce) {\n                        // Get the receipt\n                        if (stopScanning) {\n                            return null;\n                        }\n                        const receipt = await this.provider.getTransactionReceipt(tx.hash);\n                        // This should not happen; but we'll try again shortly\n                        if (receipt == null) {\n                            return;\n                        }\n                        // We will retry this on the next block (this case could be optimized)\n                        if ((blockNumber - receipt.blockNumber + 1) < confirms) {\n                            return;\n                        }\n                        // The reason we were replaced\n                        let reason = \"replaced\";\n                        if (tx.data === this.data && tx.to === this.to && tx.value === this.value) {\n                            reason = \"repriced\";\n                        }\n                        else if (tx.data === \"0x\" && tx.from === tx.to && tx.value === BN_0) {\n                            reason = \"cancelled\";\n                        }\n                        assert(false, \"transaction was replaced\", \"TRANSACTION_REPLACED\", {\n                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                            reason,\n                            replacement: tx.replaceableTransaction(startBlock),\n                            hash: tx.hash,\n                            receipt\n                        });\n                    }\n                }\n                nextScan++;\n            }\n            return;\n        };\n        const checkReceipt = (receipt) => {\n            if (receipt == null || receipt.status !== 0) {\n                return receipt;\n            }\n            assert(false, \"transaction execution reverted\", \"CALL_EXCEPTION\", {\n                action: \"sendTransaction\",\n                data: null, reason: null, invocation: null, revert: null,\n                transaction: {\n                    to: receipt.to,\n                    from: receipt.from,\n                    data: \"\" // @TODO: in v7, split out sendTransaction properties\n                }, receipt\n            });\n        };\n        const receipt = await this.provider.getTransactionReceipt(this.hash);\n        if (confirms === 0) {\n            return checkReceipt(receipt);\n        }\n        if (receipt) {\n            if ((await receipt.confirmations()) >= confirms) {\n                return checkReceipt(receipt);\n            }\n        }\n        else {\n            // Check for a replacement; throws if a replacement was found\n            await checkReplacement();\n            // Allow null only when the confirms is 0\n            if (confirms === 0) {\n                return null;\n            }\n        }\n        const waiter = new Promise((resolve, reject) => {\n            // List of things to cancel when we have a result (one way or the other)\n            const cancellers = [];\n            const cancel = () => { cancellers.forEach((c) => c()); };\n            // On cancel, stop scanning for replacements\n            cancellers.push(() => { stopScanning = true; });\n            // Set up any timeout requested\n            if (timeout > 0) {\n                const timer = setTimeout(() => {\n                    cancel();\n                    reject(makeError(\"wait for transaction timeout\", \"TIMEOUT\"));\n                }, timeout);\n                cancellers.push(() => { clearTimeout(timer); });\n            }\n            const txListener = async (receipt) => {\n                // Done; return it!\n                if ((await receipt.confirmations()) >= confirms) {\n                    cancel();\n                    try {\n                        resolve(checkReceipt(receipt));\n                    }\n                    catch (error) {\n                        reject(error);\n                    }\n                }\n            };\n            cancellers.push(() => { this.provider.off(this.hash, txListener); });\n            this.provider.on(this.hash, txListener);\n            // We support replacement detection; start checking\n            if (startBlock >= 0) {\n                const replaceListener = async () => {\n                    try {\n                        // Check for a replacement; this throws only if one is found\n                        await checkReplacement();\n                    }\n                    catch (error) {\n                        // We were replaced (with enough confirms); re-throw the error\n                        if (isError(error, \"TRANSACTION_REPLACED\")) {\n                            cancel();\n                            reject(error);\n                            return;\n                        }\n                    }\n                    // Rescheudle a check on the next block\n                    if (!stopScanning) {\n                        this.provider.once(\"block\", replaceListener);\n                    }\n                };\n                cancellers.push(() => { this.provider.off(\"block\", replaceListener); });\n                this.provider.once(\"block\", replaceListener);\n            }\n        });\n        return await waiter;\n    }\n    /**\n     *  Returns ``true`` if this transaction has been included.\n     *\n     *  This is effective only as of the time the TransactionResponse\n     *  was instantiated. To get up-to-date information, use\n     *  [[getTransaction]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  non-null property values for properties that are null for\n     *  unmined transactions.\n     */\n    isMined() {\n        return (this.blockHash != null);\n    }\n    /**\n     *  Returns true if the transaction is a legacy (i.e. ``type == 0``)\n     *  transaction.\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isLegacy() {\n        return (this.type === 0);\n    }\n    /**\n     *  Returns true if the transaction is a Berlin (i.e. ``type == 1``)\n     *  transaction. See [[link-eip-2070]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isBerlin() {\n        return (this.type === 1);\n    }\n    /**\n     *  Returns true if the transaction is a London (i.e. ``type == 2``)\n     *  transaction. See [[link-eip-1559]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isLondon() {\n        return (this.type === 2);\n    }\n    /**\n     *  Returns true if hte transaction is a Cancun (i.e. ``type == 3``)\n     *  transaction. See [[link-eip-4844]].\n     */\n    isCancun() {\n        return (this.type === 3);\n    }\n    /**\n     *  Returns a filter which can be used to listen for orphan events\n     *  that evict this transaction.\n     */\n    removedEvent() {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        return createRemovedTransactionFilter(this);\n    }\n    /**\n     *  Returns a filter which can be used to listen for orphan events\n     *  that re-order this event against %%other%%.\n     */\n    reorderedEvent(other) {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        assert(!other || other.isMined(), \"unmined 'other' transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        return createReorderedTransactionFilter(this, other);\n    }\n    /**\n     *  Returns a new TransactionResponse instance which has the ability to\n     *  detect (and throw an error) if the transaction is replaced, which\n     *  will begin scanning at %%startBlock%%.\n     *\n     *  This should generally not be used by developers and is intended\n     *  primarily for internal use. Setting an incorrect %%startBlock%% can\n     *  have devastating performance consequences if used incorrectly.\n     */\n    replaceableTransaction(startBlock) {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, \"invalid startBlock\", \"startBlock\", startBlock);\n        const tx = new TransactionResponse(this, this.provider);\n        tx.#startBlock = startBlock;\n        return tx;\n    }\n}\nfunction createOrphanedBlockFilter(block) {\n    return { orphan: \"drop-block\", hash: block.hash, number: block.number };\n}\nfunction createReorderedTransactionFilter(tx, other) {\n    return { orphan: \"reorder-transaction\", tx, other };\n}\nfunction createRemovedTransactionFilter(tx) {\n    return { orphan: \"drop-transaction\", tx };\n}\nfunction createRemovedLogFilter(log) {\n    return { orphan: \"drop-log\", log: {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n            address: log.address,\n            data: log.data,\n            topics: Object.freeze(log.topics.slice()),\n            index: log.index\n        } };\n}\n//# sourceMappingURL=provider.js.map","/**\n *  Events allow for applications to use the observer pattern, which\n *  allows subscribing and publishing events, outside the normal\n *  execution paths.\n *\n *  @_section api/utils/events:Events  [about-events]\n */\nimport { defineProperties } from \"./properties.js\";\n/**\n *  When an [[EventEmitterable]] triggers a [[Listener]], the\n *  callback always ahas one additional argument passed, which is\n *  an **EventPayload**.\n */\nexport class EventPayload {\n    /**\n     *  The event filter.\n     */\n    filter;\n    /**\n     *  The **EventEmitterable**.\n     */\n    emitter;\n    #listener;\n    /**\n     *  Create a new **EventPayload** for %%emitter%% with\n     *  the %%listener%% and for %%filter%%.\n     */\n    constructor(emitter, listener, filter) {\n        this.#listener = listener;\n        defineProperties(this, { emitter, filter });\n    }\n    /**\n     *  Unregister the triggered listener for future events.\n     */\n    async removeListener() {\n        if (this.#listener == null) {\n            return;\n        }\n        await this.emitter.off(this.filter, this.#listener);\n    }\n}\n//# sourceMappingURL=events.js.map","// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport { Log, TransactionReceipt, TransactionResponse } from \"../providers/provider.js\";\nimport { defineProperties, EventPayload } from \"../utils/index.js\";\n/**\n *  An **EventLog** contains additional properties parsed from the [[Log]].\n */\nexport class EventLog extends Log {\n    /**\n     *  The Contract Interface.\n     */\n    interface;\n    /**\n     *  The matching event.\n     */\n    fragment;\n    /**\n     *  The parsed arguments passed to the event by ``emit``.\n     */\n    args;\n    /**\n     * @_ignore:\n     */\n    constructor(log, iface, fragment) {\n        super(log, log.provider);\n        const args = iface.decodeEventLog(fragment, log.data, log.topics);\n        defineProperties(this, { args, fragment, interface: iface });\n    }\n    /**\n     *  The name of the event.\n     */\n    get eventName() { return this.fragment.name; }\n    /**\n     *  The signature of the event.\n     */\n    get eventSignature() { return this.fragment.format(); }\n}\n/**\n *  An **EventLog** contains additional properties parsed from the [[Log]].\n */\nexport class UndecodedEventLog extends Log {\n    /**\n     *  The error encounted when trying to decode the log.\n     */\n    error;\n    /**\n     * @_ignore:\n     */\n    constructor(log, error) {\n        super(log, log.provider);\n        defineProperties(this, { error });\n    }\n}\n/**\n *  A **ContractTransactionReceipt** includes the parsed logs from a\n *  [[TransactionReceipt]].\n */\nexport class ContractTransactionReceipt extends TransactionReceipt {\n    #iface;\n    /**\n     *  @_ignore:\n     */\n    constructor(iface, provider, tx) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n    /**\n     *  The parsed logs for any [[Log]] which has a matching event in the\n     *  Contract ABI.\n     */\n    get logs() {\n        return super.logs.map((log) => {\n            const fragment = log.topics.length ? this.#iface.getEvent(log.topics[0]) : null;\n            if (fragment) {\n                try {\n                    return new EventLog(log, this.#iface, fragment);\n                }\n                catch (error) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n            return log;\n        });\n    }\n}\n/**\n *  A **ContractTransactionResponse** will return a\n *  [[ContractTransactionReceipt]] when waited on.\n */\nexport class ContractTransactionResponse extends TransactionResponse {\n    #iface;\n    /**\n     *  @_ignore:\n     */\n    constructor(iface, provider, tx) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n    /**\n     *  Resolves once this transaction has been mined and has\n     *  %%confirms%% blocks including it (default: ``1``) with an\n     *  optional %%timeout%%.\n     *\n     *  This can resolve to ``null`` only if %%confirms%% is ``0``\n     *  and the transaction has not been mined, otherwise this will\n     *  wait until enough confirmations have completed.\n     */\n    async wait(confirms, timeout) {\n        const receipt = await super.wait(confirms, timeout);\n        if (receipt == null) {\n            return null;\n        }\n        return new ContractTransactionReceipt(this.#iface, this.provider, receipt);\n    }\n}\n/**\n *  A **ContractUnknownEventPayload** is included as the last parameter to\n *  Contract Events when the event does not match any events in the ABI.\n */\nexport class ContractUnknownEventPayload extends EventPayload {\n    /**\n     *  The log with no matching events.\n     */\n    log;\n    /**\n     *  @_event:\n     */\n    constructor(contract, listener, filter, log) {\n        super(contract, listener, filter);\n        defineProperties(this, { log });\n    }\n    /**\n     *  Resolves to the block the event occured in.\n     */\n    async getBlock() {\n        return await this.log.getBlock();\n    }\n    /**\n     *  Resolves to the transaction the event occured in.\n     */\n    async getTransaction() {\n        return await this.log.getTransaction();\n    }\n    /**\n     *  Resolves to the transaction receipt the event occured in.\n     */\n    async getTransactionReceipt() {\n        return await this.log.getTransactionReceipt();\n    }\n}\n/**\n *  A **ContractEventPayload** is included as the last parameter to\n *  Contract Events when the event is known.\n */\nexport class ContractEventPayload extends ContractUnknownEventPayload {\n    /**\n     *  @_ignore:\n     */\n    constructor(contract, listener, filter, fragment, _log) {\n        super(contract, listener, filter, new EventLog(_log, contract.interface, fragment));\n        const args = contract.interface.decodeEventLog(fragment, this.log.data, this.log.topics);\n        defineProperties(this, { args, fragment });\n    }\n    /**\n     *  The event name.\n     */\n    get eventName() {\n        return this.fragment.name;\n    }\n    /**\n     *  The event signature.\n     */\n    get eventSignature() {\n        return this.fragment.format();\n    }\n}\n//# sourceMappingURL=wrappers.js.map","import { Interface, Typed } from \"../abi/index.js\";\nimport { isAddressable, resolveAddress } from \"../address/index.js\";\n// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport { copyRequest, Log } from \"../providers/provider.js\";\nimport { defineProperties, getBigInt, isCallException, isHexString, resolveProperties, isError, makeError, assert, assertArgument } from \"../utils/index.js\";\nimport { ContractEventPayload, ContractUnknownEventPayload, ContractTransactionResponse, EventLog, UndecodedEventLog } from \"./wrappers.js\";\nconst BN_0 = BigInt(0);\nfunction canCall(value) {\n    return (value && typeof (value.call) === \"function\");\n}\nfunction canEstimate(value) {\n    return (value && typeof (value.estimateGas) === \"function\");\n}\nfunction canResolve(value) {\n    return (value && typeof (value.resolveName) === \"function\");\n}\nfunction canSend(value) {\n    return (value && typeof (value.sendTransaction) === \"function\");\n}\nfunction getResolver(value) {\n    if (value != null) {\n        if (canResolve(value)) {\n            return value;\n        }\n        if (value.provider) {\n            return value.provider;\n        }\n    }\n    return undefined;\n}\nclass PreparedTopicFilter {\n    #filter;\n    fragment;\n    constructor(contract, fragment, args) {\n        defineProperties(this, { fragment });\n        if (fragment.inputs.length < args.length) {\n            throw new Error(\"too many arguments\");\n        }\n        // Recursively descend into args and resolve any addresses\n        const runner = getRunner(contract.runner, \"resolveName\");\n        const resolver = canResolve(runner) ? runner : null;\n        this.#filter = (async function () {\n            const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n                const arg = args[index];\n                if (arg == null) {\n                    return null;\n                }\n                return param.walkAsync(args[index], (type, value) => {\n                    if (type === \"address\") {\n                        if (Array.isArray(value)) {\n                            return Promise.all(value.map((v) => resolveAddress(v, resolver)));\n                        }\n                        return resolveAddress(value, resolver);\n                    }\n                    return value;\n                });\n            }));\n            return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n        })();\n    }\n    getTopicFilter() {\n        return this.#filter;\n    }\n}\n// A = Arguments passed in as a tuple\n// R = The result type of the call (i.e. if only one return type,\n//     the qualified type, otherwise Result)\n// D = The type the default call will return (i.e. R for view/pure,\n//     TransactionResponse otherwise)\n//export interface ContractMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse> {\nfunction getRunner(value, feature) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value[feature]) === \"function\") {\n        return value;\n    }\n    if (value.provider && typeof (value.provider[feature]) === \"function\") {\n        return value.provider;\n    }\n    return null;\n}\nfunction getProvider(value) {\n    if (value == null) {\n        return null;\n    }\n    return value.provider || null;\n}\n/**\n *  @_ignore:\n */\nexport async function copyOverrides(arg, allowed) {\n    // Make sure the overrides passed in are a valid overrides object\n    const _overrides = Typed.dereference(arg, \"overrides\");\n    assertArgument(typeof (_overrides) === \"object\", \"invalid overrides parameter\", \"overrides\", arg);\n    // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n    const overrides = copyRequest(_overrides);\n    assertArgument(overrides.to == null || (allowed || []).indexOf(\"to\") >= 0, \"cannot override to\", \"overrides.to\", overrides.to);\n    assertArgument(overrides.data == null || (allowed || []).indexOf(\"data\") >= 0, \"cannot override data\", \"overrides.data\", overrides.data);\n    // Resolve any from\n    if (overrides.from) {\n        overrides.from = overrides.from;\n    }\n    return overrides;\n}\n/**\n *  @_ignore:\n */\nexport async function resolveArgs(_runner, inputs, args) {\n    // Recursively descend into args and resolve any addresses\n    const runner = getRunner(_runner, \"resolveName\");\n    const resolver = canResolve(runner) ? runner : null;\n    return await Promise.all(inputs.map((param, index) => {\n        return param.walkAsync(args[index], (type, value) => {\n            value = Typed.dereference(value, type);\n            if (type === \"address\") {\n                return resolveAddress(value, resolver);\n            }\n            return value;\n        });\n    }));\n}\nfunction buildWrappedFallback(contract) {\n    const populateTransaction = async function (overrides) {\n        // If an overrides was passed in, copy it and normalize the values\n        const tx = (await copyOverrides(overrides, [\"data\"]));\n        tx.to = await contract.getAddress();\n        if (tx.from) {\n            tx.from = await resolveAddress(tx.from, getResolver(contract.runner));\n        }\n        const iface = contract.interface;\n        const noValue = (getBigInt((tx.value || BN_0), \"overrides.value\") === BN_0);\n        const noData = ((tx.data || \"0x\") === \"0x\");\n        if (iface.fallback && !iface.fallback.payable && iface.receive && !noData && !noValue) {\n            assertArgument(false, \"cannot send data to receive or send value to non-payable fallback\", \"overrides\", overrides);\n        }\n        assertArgument(iface.fallback || noData, \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n        // Only allow payable contracts to set non-zero value\n        const payable = iface.receive || (iface.fallback && iface.fallback.payable);\n        assertArgument(payable || noValue, \"cannot send value to non-payable fallback\", \"overrides.value\", tx.value);\n        // Only allow fallback contracts to set non-empty data\n        assertArgument(iface.fallback || noData, \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n        return tx;\n    };\n    const staticCall = async function (overrides) {\n        const runner = getRunner(contract.runner, \"call\");\n        assert(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n        const tx = await populateTransaction(overrides);\n        try {\n            return await runner.call(tx);\n        }\n        catch (error) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n    };\n    const send = async function (overrides) {\n        const runner = contract.runner;\n        assert(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n        const tx = await runner.sendTransaction(await populateTransaction(overrides));\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, provider, tx);\n    };\n    const estimateGas = async function (overrides) {\n        const runner = getRunner(contract.runner, \"estimateGas\");\n        assert(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n        return await runner.estimateGas(await populateTransaction(overrides));\n    };\n    const method = async (overrides) => {\n        return await send(overrides);\n    };\n    defineProperties(method, {\n        _contract: contract,\n        estimateGas,\n        populateTransaction,\n        send, staticCall\n    });\n    return method;\n}\nfunction buildWrappedMethod(contract, key) {\n    const getFragment = function (...args) {\n        const fragment = contract.interface.getFunction(key, args);\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\",\n            info: { key, args }\n        });\n        return fragment;\n    };\n    const populateTransaction = async function (...args) {\n        const fragment = getFragment(...args);\n        // If an overrides was passed in, copy it and normalize the values\n        let overrides = {};\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n            if (overrides.from) {\n                overrides.from = await resolveAddress(overrides.from, getResolver(contract.runner));\n            }\n        }\n        if (fragment.inputs.length !== args.length) {\n            throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n        }\n        const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);\n        return Object.assign({}, overrides, await resolveProperties({\n            to: contract.getAddress(),\n            data: contract.interface.encodeFunctionData(fragment, resolvedArgs)\n        }));\n    };\n    const staticCall = async function (...args) {\n        const result = await staticCallResult(...args);\n        if (result.length === 1) {\n            return result[0];\n        }\n        return result;\n    };\n    const send = async function (...args) {\n        const runner = contract.runner;\n        assert(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n        const tx = await runner.sendTransaction(await populateTransaction(...args));\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, provider, tx);\n    };\n    const estimateGas = async function (...args) {\n        const runner = getRunner(contract.runner, \"estimateGas\");\n        assert(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n        return await runner.estimateGas(await populateTransaction(...args));\n    };\n    const staticCallResult = async function (...args) {\n        const runner = getRunner(contract.runner, \"call\");\n        assert(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n        const tx = await populateTransaction(...args);\n        let result = \"0x\";\n        try {\n            result = await runner.call(tx);\n        }\n        catch (error) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n        const fragment = getFragment(...args);\n        return contract.interface.decodeFunctionResult(fragment, result);\n    };\n    const method = async (...args) => {\n        const fragment = getFragment(...args);\n        if (fragment.constant) {\n            return await staticCall(...args);\n        }\n        return await send(...args);\n    };\n    defineProperties(method, {\n        name: contract.interface.getFunctionName(key),\n        _contract: contract, _key: key,\n        getFragment,\n        estimateGas,\n        populateTransaction,\n        send, staticCall, staticCallResult,\n    });\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, \"fragment\", {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getFunction(key);\n            assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"fragment\",\n                info: { key }\n            });\n            return fragment;\n        }\n    });\n    return method;\n}\nfunction buildWrappedEvent(contract, key) {\n    const getFragment = function (...args) {\n        const fragment = contract.interface.getEvent(key, args);\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\",\n            info: { key, args }\n        });\n        return fragment;\n    };\n    const method = function (...args) {\n        return new PreparedTopicFilter(contract, getFragment(...args), args);\n    };\n    defineProperties(method, {\n        name: contract.interface.getEventName(key),\n        _contract: contract, _key: key,\n        getFragment\n    });\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, \"fragment\", {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getEvent(key);\n            assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"fragment\",\n                info: { key }\n            });\n            return fragment;\n        }\n    });\n    return method;\n}\n// The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\nconst internal = Symbol.for(\"_ethersInternal_contract\");\nconst internalValues = new WeakMap();\nfunction setInternal(contract, values) {\n    internalValues.set(contract[internal], values);\n}\nfunction getInternal(contract) {\n    return internalValues.get(contract[internal]);\n}\nfunction isDeferred(value) {\n    return (value && typeof (value) === \"object\" && (\"getTopicFilter\" in value) &&\n        (typeof (value.getTopicFilter) === \"function\") && value.fragment);\n}\nasync function getSubInfo(contract, event) {\n    let topics;\n    let fragment = null;\n    // Convert named events to topicHash and get the fragment for\n    // events which need deconstructing.\n    if (Array.isArray(event)) {\n        const topicHashify = function (name) {\n            if (isHexString(name, 32)) {\n                return name;\n            }\n            const fragment = contract.interface.getEvent(name);\n            assertArgument(fragment, \"unknown fragment\", \"name\", name);\n            return fragment.topicHash;\n        };\n        // Array of Topics and Names; e.g. `[ \"0x1234...89ab\", \"Transfer(address)\" ]`\n        topics = event.map((e) => {\n            if (e == null) {\n                return null;\n            }\n            if (Array.isArray(e)) {\n                return e.map(topicHashify);\n            }\n            return topicHashify(e);\n        });\n    }\n    else if (event === \"*\") {\n        topics = [null];\n    }\n    else if (typeof (event) === \"string\") {\n        if (isHexString(event, 32)) {\n            // Topic Hash\n            topics = [event];\n        }\n        else {\n            // Name or Signature; e.g. `\"Transfer\", `\"Transfer(address)\"`\n            fragment = contract.interface.getEvent(event);\n            assertArgument(fragment, \"unknown fragment\", \"event\", event);\n            topics = [fragment.topicHash];\n        }\n    }\n    else if (isDeferred(event)) {\n        // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n        topics = await event.getTopicFilter();\n    }\n    else if (\"fragment\" in event) {\n        // ContractEvent; e.g. `contract.filter.Transfer`\n        fragment = event.fragment;\n        topics = [fragment.topicHash];\n    }\n    else {\n        assertArgument(false, \"unknown event name\", \"event\", event);\n    }\n    // Normalize topics and sort TopicSets\n    topics = topics.map((t) => {\n        if (t == null) {\n            return null;\n        }\n        if (Array.isArray(t)) {\n            const items = Array.from(new Set(t.map((t) => t.toLowerCase())).values());\n            if (items.length === 1) {\n                return items[0];\n            }\n            items.sort();\n            return items;\n        }\n        return t.toLowerCase();\n    });\n    const tag = topics.map((t) => {\n        if (t == null) {\n            return \"null\";\n        }\n        if (Array.isArray(t)) {\n            return t.join(\"|\");\n        }\n        return t;\n    }).join(\"&\");\n    return { fragment, tag, topics };\n}\nasync function hasSub(contract, event) {\n    const { subs } = getInternal(contract);\n    return subs.get((await getSubInfo(contract, event)).tag) || null;\n}\nasync function getSub(contract, operation, event) {\n    // Make sure our runner can actually subscribe to events\n    const provider = getProvider(contract.runner);\n    assert(provider, \"contract runner does not support subscribing\", \"UNSUPPORTED_OPERATION\", { operation });\n    const { fragment, tag, topics } = await getSubInfo(contract, event);\n    const { addr, subs } = getInternal(contract);\n    let sub = subs.get(tag);\n    if (!sub) {\n        const address = (addr ? addr : contract);\n        const filter = { address, topics };\n        const listener = (log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = contract.interface.getEvent(log.topics[0]);\n                }\n                catch (error) { }\n            }\n            // If fragment is null, we do not deconstruct the args to emit\n            if (foundFragment) {\n                const _foundFragment = foundFragment;\n                const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics) : [];\n                emit(contract, event, args, (listener) => {\n                    return new ContractEventPayload(contract, listener, event, _foundFragment, log);\n                });\n            }\n            else {\n                emit(contract, event, [], (listener) => {\n                    return new ContractUnknownEventPayload(contract, listener, event, log);\n                });\n            }\n        };\n        let starting = [];\n        const start = () => {\n            if (starting.length) {\n                return;\n            }\n            starting.push(provider.on(filter, listener));\n        };\n        const stop = async () => {\n            if (starting.length == 0) {\n                return;\n            }\n            let started = starting;\n            starting = [];\n            await Promise.all(started);\n            provider.off(filter, listener);\n        };\n        sub = { tag, listeners: [], start, stop };\n        subs.set(tag, sub);\n    }\n    return sub;\n}\n// We use this to ensure one emit resolves before firing the next to\n// ensure correct ordering (note this cannot throw and just adds the\n// notice to the event queu using setTimeout).\nlet lastEmit = Promise.resolve();\nasync function _emit(contract, event, args, payloadFunc) {\n    await lastEmit;\n    const sub = await hasSub(contract, event);\n    if (!sub) {\n        return false;\n    }\n    const count = sub.listeners.length;\n    sub.listeners = sub.listeners.filter(({ listener, once }) => {\n        const passArgs = Array.from(args);\n        if (payloadFunc) {\n            passArgs.push(payloadFunc(once ? null : listener));\n        }\n        try {\n            listener.call(contract, ...passArgs);\n        }\n        catch (error) { }\n        return !once;\n    });\n    if (sub.listeners.length === 0) {\n        sub.stop();\n        getInternal(contract).subs.delete(sub.tag);\n    }\n    return (count > 0);\n}\nasync function emit(contract, event, args, payloadFunc) {\n    try {\n        await lastEmit;\n    }\n    catch (error) { }\n    const resultPromise = _emit(contract, event, args, payloadFunc);\n    lastEmit = resultPromise;\n    return await resultPromise;\n}\nconst passProperties = [\"then\"];\nexport class BaseContract {\n    /**\n     *  The target to connect to.\n     *\n     *  This can be an address, ENS name or any [[Addressable]], such as\n     *  another contract. To get the resovled address, use the ``getAddress``\n     *  method.\n     */\n    target;\n    /**\n     *  The contract Interface.\n     */\n    interface;\n    /**\n     *  The connected runner. This is generally a [[Provider]] or a\n     *  [[Signer]], which dictates what operations are supported.\n     *\n     *  For example, a **Contract** connected to a [[Provider]] may\n     *  only execute read-only operations.\n     */\n    runner;\n    /**\n     *  All the Events available on this contract.\n     */\n    filters;\n    /**\n     *  @_ignore:\n     */\n    [internal];\n    /**\n     *  The fallback or receive function if any.\n     */\n    fallback;\n    /**\n     *  Creates a new contract connected to %%target%% with the %%abi%% and\n     *  optionally connected to a %%runner%% to perform operations on behalf\n     *  of.\n     */\n    constructor(target, abi, runner, _deployTx) {\n        assertArgument(typeof (target) === \"string\" || isAddressable(target), \"invalid value for Contract target\", \"target\", target);\n        if (runner == null) {\n            runner = null;\n        }\n        const iface = Interface.from(abi);\n        defineProperties(this, { target, runner, interface: iface });\n        Object.defineProperty(this, internal, { value: {} });\n        let addrPromise;\n        let addr = null;\n        let deployTx = null;\n        if (_deployTx) {\n            const provider = getProvider(runner);\n            // @TODO: the provider can be null; make a custom dummy provider that will throw a\n            // meaningful error\n            deployTx = new ContractTransactionResponse(this.interface, provider, _deployTx);\n        }\n        let subs = new Map();\n        // Resolve the target as the address\n        if (typeof (target) === \"string\") {\n            if (isHexString(target)) {\n                addr = target;\n                addrPromise = Promise.resolve(target);\n            }\n            else {\n                const resolver = getRunner(runner, \"resolveName\");\n                if (!canResolve(resolver)) {\n                    throw makeError(\"contract runner does not support name resolution\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"resolveName\"\n                    });\n                }\n                addrPromise = resolver.resolveName(target).then((addr) => {\n                    if (addr == null) {\n                        throw makeError(\"an ENS name used for a contract target must be correctly configured\", \"UNCONFIGURED_NAME\", {\n                            value: target\n                        });\n                    }\n                    getInternal(this).addr = addr;\n                    return addr;\n                });\n            }\n        }\n        else {\n            addrPromise = target.getAddress().then((addr) => {\n                if (addr == null) {\n                    throw new Error(\"TODO\");\n                }\n                getInternal(this).addr = addr;\n                return addr;\n            });\n        }\n        // Set our private values\n        setInternal(this, { addrPromise, addr, deployTx, subs });\n        // Add the event filters\n        const filters = new Proxy({}, {\n            get: (target, prop, receiver) => {\n                // Pass important checks (like `then` for Promise) through\n                if (typeof (prop) === \"symbol\" || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n                try {\n                    return this.getEvent(prop);\n                }\n                catch (error) {\n                    if (!isError(error, \"INVALID_ARGUMENT\") || error.argument !== \"key\") {\n                        throw error;\n                    }\n                }\n                return undefined;\n            },\n            has: (target, prop) => {\n                // Pass important checks (like `then` for Promise) through\n                if (passProperties.indexOf(prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n                return Reflect.has(target, prop) || this.interface.hasEvent(String(prop));\n            }\n        });\n        defineProperties(this, { filters });\n        defineProperties(this, {\n            fallback: ((iface.receive || iface.fallback) ? (buildWrappedFallback(this)) : null)\n        });\n        // Return a Proxy that will respond to functions\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof (prop) === \"symbol\" || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n                // Undefined properties should return undefined\n                try {\n                    return target.getFunction(prop);\n                }\n                catch (error) {\n                    if (!isError(error, \"INVALID_ARGUMENT\") || error.argument !== \"key\") {\n                        throw error;\n                    }\n                }\n                return undefined;\n            },\n            has: (target, prop) => {\n                if (typeof (prop) === \"symbol\" || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n                return target.interface.hasFunction(prop);\n            }\n        });\n    }\n    /**\n     *  Return a new Contract instance with the same target and ABI, but\n     *  a different %%runner%%.\n     */\n    connect(runner) {\n        return new BaseContract(this.target, this.interface, runner);\n    }\n    /**\n     *  Return a new Contract instance with the same ABI and runner, but\n     *  a different %%target%%.\n     */\n    attach(target) {\n        return new BaseContract(target, this.interface, this.runner);\n    }\n    /**\n     *  Return the resolved address of this Contract.\n     */\n    async getAddress() { return await getInternal(this).addrPromise; }\n    /**\n     *  Return the deployed bytecode or null if no bytecode is found.\n     */\n    async getDeployedCode() {\n        const provider = getProvider(this.runner);\n        assert(provider, \"runner does not support .provider\", \"UNSUPPORTED_OPERATION\", { operation: \"getDeployedCode\" });\n        const code = await provider.getCode(await this.getAddress());\n        if (code === \"0x\") {\n            return null;\n        }\n        return code;\n    }\n    /**\n     *  Resolve to this Contract once the bytecode has been deployed, or\n     *  resolve immediately if already deployed.\n     */\n    async waitForDeployment() {\n        // We have the deployement transaction; just use that (throws if deployement fails)\n        const deployTx = this.deploymentTransaction();\n        if (deployTx) {\n            await deployTx.wait();\n            return this;\n        }\n        // Check for code\n        const code = await this.getDeployedCode();\n        if (code != null) {\n            return this;\n        }\n        // Make sure we can subscribe to a provider event\n        const provider = getProvider(this.runner);\n        assert(provider != null, \"contract runner does not support .provider\", \"UNSUPPORTED_OPERATION\", { operation: \"waitForDeployment\" });\n        return new Promise((resolve, reject) => {\n            const checkCode = async () => {\n                try {\n                    const code = await this.getDeployedCode();\n                    if (code != null) {\n                        return resolve(this);\n                    }\n                    provider.once(\"block\", checkCode);\n                }\n                catch (error) {\n                    reject(error);\n                }\n            };\n            checkCode();\n        });\n    }\n    /**\n     *  Return the transaction used to deploy this contract.\n     *\n     *  This is only available if this instance was returned from a\n     *  [[ContractFactory]].\n     */\n    deploymentTransaction() {\n        return getInternal(this).deployTx;\n    }\n    /**\n     *  Return the function for a given name. This is useful when a contract\n     *  method name conflicts with a JavaScript name such as ``prototype`` or\n     *  when using a Contract programatically.\n     */\n    getFunction(key) {\n        if (typeof (key) !== \"string\") {\n            key = key.format();\n        }\n        const func = buildWrappedMethod(this, key);\n        return func;\n    }\n    /**\n     *  Return the event for a given name. This is useful when a contract\n     *  event name conflicts with a JavaScript name such as ``prototype`` or\n     *  when using a Contract programatically.\n     */\n    getEvent(key) {\n        if (typeof (key) !== \"string\") {\n            key = key.format();\n        }\n        return buildWrappedEvent(this, key);\n    }\n    /**\n     *  @_ignore:\n     */\n    async queryTransaction(hash) {\n        throw new Error(\"@TODO\");\n    }\n    /*\n    // @TODO: this is a non-backwards compatible change, but will be added\n    //        in v7 and in a potential SmartContract class in an upcoming\n    //        v6 release\n    async getTransactionReceipt(hash: string): Promise<null | ContractTransactionReceipt> {\n        const provider = getProvider(this.runner);\n        assert(provider, \"contract runner does not have a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"queryTransaction\" });\n\n        const receipt = await provider.getTransactionReceipt(hash);\n        if (receipt == null) { return null; }\n\n        return new ContractTransactionReceipt(this.interface, provider, receipt);\n    }\n    */\n    /**\n     *  Provide historic access to event data for %%event%% in the range\n     *  %%fromBlock%% (default: ``0``) to %%toBlock%% (default: ``\"latest\"``)\n     *  inclusive.\n     */\n    async queryFilter(event, fromBlock, toBlock) {\n        if (fromBlock == null) {\n            fromBlock = 0;\n        }\n        if (toBlock == null) {\n            toBlock = \"latest\";\n        }\n        const { addr, addrPromise } = getInternal(this);\n        const address = (addr ? addr : (await addrPromise));\n        const { fragment, topics } = await getSubInfo(this, event);\n        const filter = { address, topics, fromBlock, toBlock };\n        const provider = getProvider(this.runner);\n        assert(provider, \"contract runner does not have a provider\", \"UNSUPPORTED_OPERATION\", { operation: \"queryFilter\" });\n        return (await provider.getLogs(filter)).map((log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = this.interface.getEvent(log.topics[0]);\n                }\n                catch (error) { }\n            }\n            if (foundFragment) {\n                try {\n                    return new EventLog(log, this.interface, foundFragment);\n                }\n                catch (error) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n            return new Log(log, provider);\n        });\n    }\n    /**\n     *  Add an event %%listener%% for the %%event%%.\n     */\n    async on(event, listener) {\n        const sub = await getSub(this, \"on\", event);\n        sub.listeners.push({ listener, once: false });\n        sub.start();\n        return this;\n    }\n    /**\n     *  Add an event %%listener%% for the %%event%%, but remove the listener\n     *  after it is fired once.\n     */\n    async once(event, listener) {\n        const sub = await getSub(this, \"once\", event);\n        sub.listeners.push({ listener, once: true });\n        sub.start();\n        return this;\n    }\n    /**\n     *  Emit an %%event%% calling all listeners with %%args%%.\n     *\n     *  Resolves to ``true`` if any listeners were called.\n     */\n    async emit(event, ...args) {\n        return await emit(this, event, args, null);\n    }\n    /**\n     *  Resolves to the number of listeners of %%event%% or the total number\n     *  of listeners if unspecified.\n     */\n    async listenerCount(event) {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return 0;\n            }\n            return sub.listeners.length;\n        }\n        const { subs } = getInternal(this);\n        let total = 0;\n        for (const { listeners } of subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n    /**\n     *  Resolves to the listeners subscribed to %%event%% or all listeners\n     *  if unspecified.\n     */\n    async listeners(event) {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return [];\n            }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        const { subs } = getInternal(this);\n        let result = [];\n        for (const { listeners } of subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n    /**\n     *  Remove the %%listener%% from the listeners for %%event%% or remove\n     *  all listeners if unspecified.\n     */\n    async off(event, listener) {\n        const sub = await hasSub(this, event);\n        if (!sub) {\n            return this;\n        }\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) {\n                sub.listeners.splice(index, 1);\n            }\n        }\n        if (listener == null || sub.listeners.length === 0) {\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n        return this;\n    }\n    /**\n     *  Remove all the listeners for %%event%% or remove all listeners if\n     *  unspecified.\n     */\n    async removeAllListeners(event) {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return this;\n            }\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n        else {\n            const { subs } = getInternal(this);\n            for (const { tag, stop } of subs.values()) {\n                stop();\n                subs.delete(tag);\n            }\n        }\n        return this;\n    }\n    /**\n     *  Alias for [on].\n     */\n    async addListener(event, listener) {\n        return await this.on(event, listener);\n    }\n    /**\n     *  Alias for [off].\n     */\n    async removeListener(event, listener) {\n        return await this.off(event, listener);\n    }\n    /**\n     *  Create a new Class for the %%abi%%.\n     */\n    static buildClass(abi) {\n        class CustomContract extends BaseContract {\n            constructor(address, runner = null) {\n                super(address, abi, runner);\n            }\n        }\n        return CustomContract;\n    }\n    ;\n    /**\n     *  Create a new BaseContract with a specified Interface.\n     */\n    static from(target, abi, runner) {\n        if (runner == null) {\n            runner = null;\n        }\n        const contract = new this(target, abi, runner);\n        return contract;\n    }\n}\nfunction _ContractBase() {\n    return BaseContract;\n}\n/**\n *  A [[BaseContract]] with no type guards on its methods or events.\n */\nexport class Contract extends _ContractBase() {\n}\n//# sourceMappingURL=contract.js.map","// created 2023-09-25T01:01:55.148Z\n// compressed base64-encoded blob for include-ens data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: 0565ed049b9cf1614bb9e11ba7d8ac6a6fb96c893253d890f7e2b2884b9ded32\nvar COMPRESSED$1 = '';\nconst FENCED = new Map([[8217,\"apostrophe\"],[8260,\"fraction slash\"],[12539,\"middle dot\"]]);\nconst NSM_MAX = 4;\n\nfunction decode_arithmetic(bytes) {\r\n\tlet pos = 0;\r\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\r\n\t\r\n\t// decode the frequency table\r\n\tlet symbol_count = u16();\r\n\tlet total = 1;\r\n\tlet acc = [0, 1]; // first symbol has frequency 1\r\n\tfor (let i = 1; i < symbol_count; i++) {\r\n\t\tacc.push(total += u16());\r\n\t}\r\n\r\n\t// skip the sized-payload that the last 3 symbols index into\r\n\tlet skip = u16();\r\n\tlet pos_payload = pos;\r\n\tpos += skip;\r\n\r\n\tlet read_width = 0;\r\n\tlet read_buffer = 0; \r\n\tfunction read_bit() {\r\n\t\tif (read_width == 0) {\r\n\t\t\t// this will read beyond end of buffer\r\n\t\t\t// but (undefined|0) => zero pad\r\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\r\n\t\t\tread_width = 8;\r\n\t\t}\r\n\t\treturn (read_buffer >> --read_width) & 1;\r\n\t}\r\n\r\n\tconst N = 31;\r\n\tconst FULL = 2**N;\r\n\tconst HALF = FULL >>> 1;\r\n\tconst QRTR = HALF >> 1;\r\n\tconst MASK = FULL - 1;\r\n\r\n\t// fill register\r\n\tlet register = 0;\r\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\r\n\r\n\tlet symbols = [];\r\n\tlet low = 0;\r\n\tlet range = FULL; // treat like a float\r\n\twhile (true) {\r\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\r\n\t\tlet start = 0;\r\n\t\tlet end = symbol_count;\r\n\t\twhile (end - start > 1) { // binary search\r\n\t\t\tlet mid = (start + end) >>> 1;\r\n\t\t\tif (value < acc[mid]) {\r\n\t\t\t\tend = mid;\r\n\t\t\t} else {\r\n\t\t\t\tstart = mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (start == 0) break; // first symbol is end mark\r\n\t\tsymbols.push(start);\r\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\r\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1;\r\n\t\twhile (((a ^ b) & HALF) == 0) {\r\n\t\t\tregister = (register << 1) & MASK | read_bit();\r\n\t\t\ta = (a << 1) & MASK;\r\n\t\t\tb = (b << 1) & MASK | 1;\r\n\t\t}\r\n\t\twhile (a & ~b & QRTR) {\r\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\r\n\t\t\ta = (a << 1) ^ HALF;\r\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\r\n\t\t}\r\n\t\tlow = a;\r\n\t\trange = 1 + b - a;\r\n\t}\r\n\tlet offset = symbol_count - 4;\r\n\treturn symbols.map(x => { // index into payload\r\n\t\tswitch (x - offset) {\r\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 1: return offset + bytes[pos_payload++];\r\n\t\t\tdefault: return x - 1;\r\n\t\t}\r\n\t});\r\n}\t\r\n\r\n// returns an iterator which returns the next symbol\r\nfunction read_payload(v) {\r\n\tlet pos = 0;\r\n\treturn () => v[pos++];\r\n}\r\nfunction read_compressed_payload(s) {\r\n\treturn read_payload(decode_arithmetic(unsafe_atob(s)));\r\n}\r\n\r\n// unsafe in the sense:\r\n// expected well-formed Base64 w/o padding \r\n// 20220922: added for https://github.com/adraffy/ens-normalize.js/issues/4\r\nfunction unsafe_atob(s) {\r\n\tlet lookup = [];\r\n\t[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'].forEach((c, i) => lookup[c.charCodeAt(0)] = i);\r\n\tlet n = s.length;\r\n\tlet ret = new Uint8Array((6 * n) >> 3);\r\n\tfor (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {\r\n\t\tcarry = (carry << 6) | lookup[s.charCodeAt(i)];\r\n\t\twidth += 6;\r\n\t\tif (width >= 8) {\r\n\t\t\tret[pos++] = (carry >> (width -= 8));\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\r\nfunction signed(i) { \r\n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\r\n}\r\n\r\nfunction read_deltas(n, next) {\r\n\tlet v = Array(n);\r\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\r\n\treturn v;\r\n}\r\n\r\n// [123][5] => [0 3] [1 1] [0 0]\r\nfunction read_sorted(next, prev = 0) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet x = next();\r\n\t\tlet n = next();\r\n\t\tif (!n) break;\r\n\t\tprev += x;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tret.push(prev + i);\r\n\t\t}\r\n\t\tprev += n + 1;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction read_sorted_arrays(next) {\r\n\treturn read_array_while(() => { \r\n\t\tlet v = read_sorted(next);\r\n\t\tif (v.length) return v;\r\n\t});\r\n}\r\n\r\n// returns map of x => ys\r\nfunction read_mapped(next) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet w = next();\r\n\t\tif (w == 0) break;\r\n\t\tret.push(read_linear_table(w, next));\r\n\t}\r\n\twhile (true) {\r\n\t\tlet w = next() - 1;\r\n\t\tif (w < 0) break;\r\n\t\tret.push(read_replacement_table(w, next));\r\n\t}\r\n\treturn ret.flat();\r\n}\r\n\r\n// read until next is falsy\r\n// return array of read values\r\nfunction read_array_while(next) {\r\n\tlet v = [];\r\n\twhile (true) {\r\n\t\tlet x = next(v.length);\r\n\t\tif (!x) break;\r\n\t\tv.push(x);\r\n\t}\r\n\treturn v;\r\n}\r\n\r\n// read w columns of length n\r\n// return as n rows of length w\r\nfunction read_transposed(n, w, next) {\r\n\tlet m = Array(n).fill().map(() => []);\r\n\tfor (let i = 0; i < w; i++) {\r\n\t\tread_deltas(n, next).forEach((x, j) => m[j].push(x));\r\n\t}\r\n\treturn m;\r\n}\r\n \r\n// returns [[x, ys], [x+dx, ys+dy], [x+2*dx, ys+2*dy], ...]\r\n// where dx/dy = steps, n = run size, w = length of y\r\nfunction read_linear_table(w, next) {\r\n\tlet dx = 1 + next();\r\n\tlet dy = next();\r\n\tlet vN = read_array_while(next);\r\n\tlet m = read_transposed(vN.length, 1+w, next);\r\n\treturn m.flatMap((v, i) => {\r\n\t\tlet [x, ...ys] = v;\r\n\t\treturn Array(vN[i]).fill().map((_, j) => {\r\n\t\t\tlet j_dy = j * dy;\r\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// return [[x, ys...], ...]\r\n// where w = length of y\r\nfunction read_replacement_table(w, next) { \r\n\tlet n = 1 + next();\r\n\tlet m = read_transposed(n, 1+w, next);\r\n\treturn m.map(v => [v[0], v.slice(1)]);\r\n}\r\n\r\n\r\nfunction read_trie(next) {\r\n\tlet ret = [];\r\n\tlet sorted = read_sorted(next); \r\n\texpand(decode([]), []);\r\n\treturn ret; // not sorted\r\n\tfunction decode(Q) { // characters that lead into this node\r\n\t\tlet S = next(); // state: valid, save, check\r\n\t\tlet B = read_array_while(() => { // buckets leading to new nodes\r\n\t\t\tlet cps = read_sorted(next).map(i => sorted[i]);\r\n\t\t\tif (cps.length) return decode(cps);\r\n\t\t});\r\n\t\treturn {S, B, Q};\r\n\t}\r\n\tfunction expand({S, B}, cps, saved) {\r\n\t\tif (S & 4 && saved === cps[cps.length-1]) return;\r\n\t\tif (S & 2) saved = cps[cps.length-1];\r\n\t\tif (S & 1) ret.push(cps); \r\n\t\tfor (let br of B) {\r\n\t\t\tfor (let cp of br.Q) {\r\n\t\t\t\texpand(br, [...cps, cp], saved);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\n\nfunction hex_cp(cp) {\r\n\treturn cp.toString(16).toUpperCase().padStart(2, '0');\r\n}\r\n\r\nfunction quote_cp(cp) {\r\n\treturn `{${hex_cp(cp)}}`; // raffy convention: like \"\\u{X}\" w/o the \"\\u\"\r\n}\r\n\r\n/*\r\nexport function explode_cp(s) {\r\n\treturn [...s].map(c => c.codePointAt(0));\r\n}\r\n*/\r\nfunction explode_cp(s) { // this is about 2x faster\r\n\tlet cps = [];\r\n\tfor (let pos = 0, len = s.length; pos < len; ) {\r\n\t\tlet cp = s.codePointAt(pos);\r\n\t\tpos += cp < 0x10000 ? 1 : 2;\r\n\t\tcps.push(cp);\r\n\t}\r\n\treturn cps;\r\n}\r\n\r\nfunction str_from_cps(cps) {\r\n\tconst chunk = 4096;\r\n\tlet len = cps.length;\r\n\tif (len < chunk) return String.fromCodePoint(...cps);\r\n\tlet buf = [];\r\n\tfor (let i = 0; i < len; ) {\r\n\t\tbuf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));\r\n\t}\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction compare_arrays(a, b) {\r\n\tlet n = a.length;\r\n\tlet c = n - b.length;\r\n\tfor (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];\r\n\treturn c;\r\n}\n\n// created 2023-09-25T01:01:55.148Z\n// compressed base64-encoded blob for include-nf data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: a974b6f8541fc29d919bc85118af0a44015851fab5343f8679cb31be2bdb209e\nvar COMPRESSED = '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';\n\n// https://unicode.org/reports/tr15/\r\n// for reference implementation\r\n// see: /derive/nf.js\r\n\r\n\r\n// algorithmic hangul\r\n// https://www.unicode.org/versions/Unicode15.0.0/ch03.pdf (page 144)\r\nconst S0 = 0xAC00;\r\nconst L0 = 0x1100;\r\nconst V0 = 0x1161;\r\nconst T0 = 0x11A7;\r\nconst L_COUNT = 19;\r\nconst V_COUNT = 21;\r\nconst T_COUNT = 28;\r\nconst N_COUNT = V_COUNT * T_COUNT;\r\nconst S_COUNT = L_COUNT * N_COUNT;\r\nconst S1 = S0 + S_COUNT;\r\nconst L1 = L0 + L_COUNT;\r\nconst V1 = V0 + V_COUNT;\r\nconst T1 = T0 + T_COUNT;\r\n\r\nfunction unpack_cc(packed) {\r\n\treturn (packed >> 24) & 0xFF;\r\n}\r\nfunction unpack_cp(packed) {\r\n\treturn packed & 0xFFFFFF;\r\n}\r\n\r\nlet SHIFTED_RANK, EXCLUSIONS, DECOMP, RECOMP;\r\n\r\nfunction init$1() {\r\n\t//console.time('nf');\r\n\tlet r = read_compressed_payload(COMPRESSED);\r\n\tSHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map(x => [x, (i+1) << 24]))); // pre-shifted\r\n\tEXCLUSIONS = new Set(read_sorted(r));\r\n\tDECOMP = new Map();\r\n\tRECOMP = new Map();\r\n\tfor (let [cp, cps] of read_mapped(r)) {\r\n\t\tif (!EXCLUSIONS.has(cp) && cps.length == 2) {\r\n\t\t\tlet [a, b] = cps;\r\n\t\t\tlet bucket = RECOMP.get(a);\r\n\t\t\tif (!bucket) {\r\n\t\t\t\tbucket = new Map();\r\n\t\t\t\tRECOMP.set(a, bucket);\r\n\t\t\t}\r\n\t\t\tbucket.set(b, cp);\r\n\t\t}\r\n\t\tDECOMP.set(cp, cps.reverse()); // stored reversed\r\n\t}\r\n\t//console.timeEnd('nf');\r\n\t// 20230905: 11ms\r\n}\r\n\r\nfunction is_hangul(cp) {\r\n\treturn cp >= S0 && cp < S1;\r\n}\r\n\r\nfunction compose_pair(a, b) {\r\n\tif (a >= L0 && a < L1 && b >= V0 && b < V1) {\r\n\t\treturn S0 + (a - L0) * N_COUNT + (b - V0) * T_COUNT;\r\n\t} else if (is_hangul(a) && b > T0 && b < T1 && (a - S0) % T_COUNT == 0) {\r\n\t\treturn a + (b - T0);\r\n\t} else {\r\n\t\tlet recomp = RECOMP.get(a);\r\n\t\tif (recomp) {\r\n\t\t\trecomp = recomp.get(b);\r\n\t\t\tif (recomp) {\r\n\t\t\t\treturn recomp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\nfunction decomposed(cps) {\r\n\tif (!SHIFTED_RANK) init$1();\r\n\tlet ret = [];\r\n\tlet buf = [];\r\n\tlet check_order = false;\r\n\tfunction add(cp) {\r\n\t\tlet cc = SHIFTED_RANK.get(cp);\r\n\t\tif (cc) {\r\n\t\t\tcheck_order = true;\r\n\t\t\tcp |= cc;\r\n\t\t}\r\n\t\tret.push(cp);\r\n\t}\r\n\tfor (let cp of cps) {\r\n\t\twhile (true) {\r\n\t\t\tif (cp < 0x80) {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t} else if (is_hangul(cp)) {\r\n\t\t\t\tlet s_index = cp - S0;\r\n\t\t\t\tlet l_index = s_index / N_COUNT | 0;\r\n\t\t\t\tlet v_index = (s_index % N_COUNT) / T_COUNT | 0;\r\n\t\t\t\tlet t_index = s_index % T_COUNT;\r\n\t\t\t\tadd(L0 + l_index);\r\n\t\t\t\tadd(V0 + v_index);\r\n\t\t\t\tif (t_index > 0) add(T0 + t_index);\r\n\t\t\t} else {\r\n\t\t\t\tlet mapped = DECOMP.get(cp);\r\n\t\t\t\tif (mapped) {\r\n\t\t\t\t\tbuf.push(...mapped);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadd(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!buf.length) break;\r\n\t\t\tcp = buf.pop();\r\n\t\t}\r\n\t}\r\n\tif (check_order && ret.length > 1) {\r\n\t\tlet prev_cc = unpack_cc(ret[0]);\r\n\t\tfor (let i = 1; i < ret.length; i++) {\r\n\t\t\tlet cc = unpack_cc(ret[i]);\r\n\t\t\tif (cc == 0 || prev_cc <= cc) {\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet j = i-1;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet tmp = ret[j+1];\r\n\t\t\t\tret[j+1] = ret[j];\r\n\t\t\t\tret[j] = tmp;\r\n\t\t\t\tif (!j) break;\r\n\t\t\t\tprev_cc = unpack_cc(ret[--j]);\r\n\t\t\t\tif (prev_cc <= cc) break;\r\n\t\t\t}\r\n\t\t\tprev_cc = unpack_cc(ret[i]);\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction composed_from_decomposed(v) {\r\n\tlet ret = [];\r\n\tlet stack = [];\r\n\tlet prev_cp = -1;\r\n\tlet prev_cc = 0;\r\n\tfor (let packed of v) {\r\n\t\tlet cc = unpack_cc(packed);\r\n\t\tlet cp = unpack_cp(packed);\r\n\t\tif (prev_cp == -1) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t}\r\n\t\t} else if (prev_cc > 0 && prev_cc >= cc) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tret.push(prev_cp, ...stack);\r\n\t\t\t\tstack.length = 0;\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t}\r\n\t\t\tprev_cc = cc;\r\n\t\t} else {\r\n\t\t\tlet composed = compose_pair(prev_cp, cp);\r\n\t\t\tif (composed >= 0) {\r\n\t\t\t\tprev_cp = composed;\r\n\t\t\t} else if (prev_cc == 0 && cc == 0) {\r\n\t\t\t\tret.push(prev_cp);\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (prev_cp >= 0) {\r\n\t\tret.push(prev_cp, ...stack);\t\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// note: cps can be iterable\r\nfunction nfd(cps) {\r\n\treturn decomposed(cps).map(unpack_cp);\r\n}\r\nfunction nfc(cps) {\r\n\treturn composed_from_decomposed(decomposed(cps));\r\n}\n\nconst HYPHEN = 0x2D;\r\nconst STOP = 0x2E;\r\nconst STOP_CH = '.';\r\nconst FE0F = 0xFE0F;\r\nconst UNIQUE_PH = 1;\r\n\r\n// 20230913: replace [...v] with Array_from(v) to avoid large spreads\r\nconst Array_from = x => Array.from(x); // Array.from.bind(Array);\r\n\r\nfunction group_has_cp(g, cp) {\r\n\t// 20230913: keep primary and secondary distinct instead of creating valid union\r\n\treturn g.P.has(cp) || g.Q.has(cp);\r\n}\r\n\r\nclass Emoji extends Array {\r\n\tget is_emoji() { return true; } // free tagging system\r\n}\r\n\r\nlet MAPPED, IGNORED, CM, NSM, ESCAPE, NFC_CHECK, GROUPS, WHOLE_VALID, WHOLE_MAP, VALID, EMOJI_LIST, EMOJI_ROOT;\r\n\r\nfunction init() {\r\n\tif (MAPPED) return;\r\n\t\r\n\tlet r = read_compressed_payload(COMPRESSED$1);\r\n\tconst read_sorted_array = () => read_sorted(r);\r\n\tconst read_sorted_set = () => new Set(read_sorted_array());\r\n\tconst set_add_many = (set, v) => v.forEach(x => set.add(x));\r\n\r\n\tMAPPED = new Map(read_mapped(r)); \r\n\tIGNORED = read_sorted_set(); // ignored characters are not valid, so just read raw codepoints\r\n\r\n\t/*\r\n\t// direct include from payload is smaller than the decompression code\r\n\tconst FENCED = new Map(read_array_while(() => {\r\n\t\tlet cp = r();\r\n\t\tif (cp) return [cp, read_str(r())];\r\n\t}));\r\n\t*/\r\n\t// 20230217: we still need all CM for proper error formatting\r\n\t// but norm only needs NSM subset that are potentially-valid\r\n\tCM = read_sorted_array();\r\n\tNSM = new Set(read_sorted_array().map(i => CM[i]));\r\n\tCM = new Set(CM);\r\n\t\r\n\tESCAPE = read_sorted_set(); // characters that should not be printed\r\n\tNFC_CHECK = read_sorted_set(); // only needed to illustrate ens_tokenize() transformations\r\n\r\n\tlet chunks = read_sorted_arrays(r);\r\n\tlet unrestricted = r();\r\n\t//const read_chunked = () => new Set(read_sorted_array().flatMap(i => chunks[i]).concat(read_sorted_array()));\r\n\tconst read_chunked = () => {\r\n\t\t// 20230921: build set in parts, 2x faster\r\n\t\tlet set = new Set();\r\n\t\tread_sorted_array().forEach(i => set_add_many(set, chunks[i]));\r\n\t\tset_add_many(set, read_sorted_array());\r\n\t\treturn set; \r\n\t};\r\n\tGROUPS = read_array_while(i => {\r\n\t\t// minifier property mangling seems unsafe\r\n\t\t// so these are manually renamed to single chars\r\n\t\tlet N = read_array_while(r).map(x => x+0x60);\r\n\t\tif (N.length) {\r\n\t\t\tlet R = i >= unrestricted; // unrestricted then restricted\r\n\t\t\tN[0] -= 32; // capitalize\r\n\t\t\tN = str_from_cps(N);\r\n\t\t\tif (R) N=`Restricted[${N}]`;\r\n\t\t\tlet P = read_chunked(); // primary\r\n\t\t\tlet Q = read_chunked(); // secondary\r\n\t\t\tlet M = !r(); // not-whitelisted, check for NSM\r\n\t\t\t// *** this code currently isn't needed ***\r\n\t\t\t/*\r\n\t\t\tlet V = [...P, ...Q].sort((a, b) => a-b); // derive: sorted valid\r\n\t\t\tlet M = r()-1; // number of combining mark\r\n\t\t\tif (M < 0) { // whitelisted\r\n\t\t\t\tM = new Map(read_array_while(() => {\r\n\t\t\t\t\tlet i = r();\r\n\t\t\t\t\tif (i) return [V[i-1], read_array_while(() => {\r\n\t\t\t\t\t\tlet v = read_array_while(r);\r\n\t\t\t\t\t\tif (v.length) return v.map(x => x-1);\r\n\t\t\t\t\t})];\r\n\t\t\t\t}));\r\n\t\t\t}*/\r\n\t\t\treturn {N, P, Q, M, R};\r\n\t\t}\r\n\t});\r\n\r\n\t// decode compressed wholes\r\n\tWHOLE_VALID = read_sorted_set();\r\n\tWHOLE_MAP = new Map();\r\n\tlet wholes = read_sorted_array().concat(Array_from(WHOLE_VALID)).sort((a, b) => a-b); // must be sorted\r\n\twholes.forEach((cp, i) => {\r\n\t\tlet d = r(); \r\n\t\tlet w = wholes[i] = d ? wholes[i-d] : {V: [], M: new Map()};\r\n\t\tw.V.push(cp); // add to member set\r\n\t\tif (!WHOLE_VALID.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, w);  // register with whole map\r\n\t\t}\r\n\t});\r\n\r\n\t// compute confusable-extent complements\r\n\t// usage: WHOLE_MAP.get(cp).M.get(cp) = complement set\r\n\tfor (let {V, M} of new Set(WHOLE_MAP.values())) {\r\n\t\t// connect all groups that have each whole character\r\n\t\tlet recs = [];\r\n\t\tfor (let cp of V) {\r\n\t\t\tlet gs = GROUPS.filter(g => group_has_cp(g, cp));\r\n\t\t\tlet rec = recs.find(({G}) => gs.some(g => G.has(g)));\r\n\t\t\tif (!rec) {\r\n\t\t\t\trec = {G: new Set(), V: []};\r\n\t\t\t\trecs.push(rec);\r\n\t\t\t}\r\n\t\t\trec.V.push(cp);\r\n\t\t\tset_add_many(rec.G, gs);\r\n\t\t}\r\n\t\t// per character cache groups which are not a member of the extent\r\n\t\tlet union = recs.flatMap(x => Array_from(x.G)); // all of the groups used by this whole\r\n\t\tfor (let {G, V} of recs) {\r\n\t\t\tlet complement = new Set(union.filter(g => !G.has(g))); // groups not covered by the extent\r\n\t\t\tfor (let cp of V) {\r\n\t\t\t\tM.set(cp, complement); // this is the same reference\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// compute valid set\r\n\t// 20230924: VALID was union but can be re-used\r\n\tVALID = new Set(); // exists in 1+ groups\r\n\tlet multi = new Set(); // exists in 2+ groups\r\n\tconst add_to_union = cp => VALID.has(cp) ? multi.add(cp) : VALID.add(cp);\r\n\tfor (let g of GROUPS) {\r\n\t\tfor (let cp of g.P) add_to_union(cp);\r\n\t\tfor (let cp of g.Q) add_to_union(cp);\r\n\t}\r\n\t// dual purpose WHOLE_MAP: return placeholder if unique non-confusable\r\n\tfor (let cp of VALID) {\r\n\t\tif (!WHOLE_MAP.has(cp) && !multi.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, UNIQUE_PH);\r\n\t\t}\r\n\t}\r\n\t// add all decomposed parts\r\n\t// see derive: \"Valid is Closed (via Brute-force)\"\r\n\tset_add_many(VALID, nfd(VALID));\r\n\t\r\n\t// decode emoji\r\n\t// 20230719: emoji are now fully-expanded to avoid quirk logic \r\n\tEMOJI_LIST = read_trie(r).map(v => Emoji.from(v)).sort(compare_arrays);\r\n\tEMOJI_ROOT = new Map(); // this has approx 7K nodes (2+ per emoji)\r\n\tfor (let cps of EMOJI_LIST) {\r\n\t\t// 20230719: change to *slightly* stricter algorithm which disallows \r\n\t\t// insertion of misplaced FE0F in emoji sequences (matching ENSIP-15)\r\n\t\t// example: beautified [A B] (eg. flag emoji) \r\n\t\t//  before: allow: [A FE0F B], error: [A FE0F FE0F B] \r\n\t\t//   after: error: both\r\n\t\t// note: this code now matches ENSNormalize.{cs,java} logic\r\n\t\tlet prev = [EMOJI_ROOT];\r\n\t\tfor (let cp of cps) {\r\n\t\t\tlet next = prev.map(node => {\r\n\t\t\t\tlet child = node.get(cp);\r\n\t\t\t\tif (!child) {\r\n\t\t\t\t\t// should this be object? \r\n\t\t\t\t\t// (most have 1-2 items, few have many)\r\n\t\t\t\t\t// 20230719: no, v8 default map is 4?\r\n\t\t\t\t\tchild = new Map();\r\n\t\t\t\t\tnode.set(cp, child);\r\n\t\t\t\t}\r\n\t\t\t\treturn child;\r\n\t\t\t});\r\n\t\t\tif (cp === FE0F) {\r\n\t\t\t\tprev.push(...next); // less than 20 elements\r\n\t\t\t} else {\r\n\t\t\t\tprev = next;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let x of prev) {\r\n\t\t\tx.V = cps;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// if escaped: {HEX}\r\n//       else: \"x\" {HEX}\r\nfunction quoted_cp(cp) {\r\n\treturn (should_escape(cp) ? '' : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);\r\n}\r\n\r\n// 20230211: some messages can be mixed-directional and result in spillover\r\n// use 200E after a quoted string to force the remainder of a string from \r\n// acquring the direction of the quote\r\n// https://www.w3.org/International/questions/qa-bidi-unicode-controls#exceptions\r\nfunction bidi_qq(s) {\r\n\treturn `\"${s}\"\\u200E`; // strong LTR\r\n}\r\n\r\nfunction check_label_extension(cps) {\r\n\tif (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {\r\n\t\tthrow new Error(`invalid label extension: \"${str_from_cps(cps.slice(0, 4))}\"`); // this can only be ascii so cant be bidi\r\n\t}\r\n}\r\nfunction check_leading_underscore(cps) {\r\n\tconst UNDERSCORE = 0x5F;\r\n\tfor (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {\r\n\t\tif (cps[--i] !== UNDERSCORE) {\r\n\t\t\tthrow new Error('underscore allowed only at start');\r\n\t\t}\r\n\t}\r\n}\r\n// check that a fenced cp is not leading, trailing, or touching another fenced cp\r\nfunction check_fenced(cps) {\r\n\tlet cp = cps[0];\r\n\tlet prev = FENCED.get(cp);\r\n\tif (prev) throw error_placement(`leading ${prev}`);\r\n\tlet n = cps.length;\r\n\tlet last = -1; // prevents trailing from throwing\r\n\tfor (let i = 1; i < n; i++) {\r\n\t\tcp = cps[i];\r\n\t\tlet match = FENCED.get(cp);\r\n\t\tif (match) {\r\n\t\t\t// since cps[0] isn't fenced, cps[1] cannot throw\r\n\t\t\tif (last == i) throw error_placement(`${prev} + ${match}`);\r\n\t\t\tlast = i + 1;\r\n\t\t\tprev = match;\r\n\t\t}\r\n\t}\r\n\tif (last == n) throw error_placement(`trailing ${prev}`);\r\n}\r\n\r\n// create a safe to print string \r\n// invisibles are escaped\r\n// leading cm uses placeholder\r\n// if cps exceed max, middle truncate with ellipsis\r\n// quoter(cp) => string, eg. 3000 => \"{3000}\"\r\n// note: in html, you'd call this function then replace [<>&] with entities\r\nfunction safe_str_from_cps(cps, max = Infinity, quoter = quote_cp) {\r\n\t//if (Number.isInteger(cps)) cps = [cps];\r\n\t//if (!Array.isArray(cps)) throw new TypeError(`expected codepoints`);\r\n\tlet buf = [];\r\n\tif (is_combining_mark(cps[0])) buf.push('◌');\r\n\tif (cps.length > max) {\r\n\t\tmax >>= 1;\r\n\t\tcps = [...cps.slice(0, max), 0x2026, ...cps.slice(-max)];\r\n\t}\r\n\tlet prev = 0;\r\n\tlet n = cps.length;\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tlet cp = cps[i];\r\n\t\tif (should_escape(cp)) {\r\n\t\t\tbuf.push(str_from_cps(cps.slice(prev, i)));\r\n\t\t\tbuf.push(quoter(cp));\r\n\t\t\tprev = i + 1;\r\n\t\t}\r\n\t}\r\n\tbuf.push(str_from_cps(cps.slice(prev, n)));\r\n\treturn buf.join('');\r\n}\r\n\r\n// note: set(s) cannot be exposed because they can be modified\r\n// note: Object.freeze() doesn't work\r\nfunction is_combining_mark(cp) {\r\n\tinit();\r\n\treturn CM.has(cp);\r\n}\r\nfunction should_escape(cp) {\r\n\tinit();\r\n\treturn ESCAPE.has(cp);\r\n}\r\n\r\n// return all supported emoji as fully-qualified emoji \r\n// ordered by length then lexicographic \r\nfunction ens_emoji() {\r\n\tinit();\r\n\treturn EMOJI_LIST.map(x => x.slice()); // emoji are exposed so copy\r\n}\r\n\r\nfunction ens_normalize_fragment(frag, decompose) {\r\n\tinit();\r\n\tlet nf = decompose ? nfd : nfc;\r\n\treturn frag.split(STOP_CH).map(label => str_from_cps(tokens_from_str(explode_cp(label), nf, filter_fe0f).flat())).join(STOP_CH);\r\n}\r\n\r\nfunction ens_normalize(name) {\r\n\treturn flatten(split(name, nfc, filter_fe0f));\r\n}\r\n\r\nfunction ens_beautify(name) {\r\n\tlet labels = split(name, nfc, x => x); // emoji not exposed\r\n\tfor (let {type, output, error} of labels) {\r\n\t\tif (error) break; // flatten will throw\r\n\r\n\t\t// replace leading/trailing hyphen\r\n\t\t// 20230121: consider beautifing all or leading/trailing hyphen to unicode variant\r\n\t\t// not exactly the same in every font, but very similar: \"-\" vs \"‐\"\r\n\t\t/*\r\n\t\tconst UNICODE_HYPHEN = 0x2010;\r\n\t\t// maybe this should replace all for visual consistancy?\r\n\t\t// `node tools/reg-count.js regex ^-\\{2,\\}` => 592\r\n\t\t//for (let i = 0; i < output.length; i++) if (output[i] == 0x2D) output[i] = 0x2010;\r\n\t\tif (output[0] == HYPHEN) output[0] = UNICODE_HYPHEN;\r\n\t\tlet end = output.length-1;\r\n\t\tif (output[end] == HYPHEN) output[end] = UNICODE_HYPHEN;\r\n\t\t*/\r\n\t\t// 20230123: WHATWG URL uses \"CheckHyphens\" false\r\n\t\t// https://url.spec.whatwg.org/#idna\r\n\r\n\t\t// update ethereum symbol\r\n\t\t// ξ => Ξ if not greek\r\n\t\tif (type !== 'Greek') array_replace(output, 0x3BE, 0x39E);\r\n\r\n\t\t// 20221213: fixes bidi subdomain issue, but breaks invariant (200E is disallowed)\r\n\t\t// could be fixed with special case for: 2D (.) + 200E (LTR)\r\n\t\t// https://discuss.ens.domains/t/bidi-label-ordering-spoof/15824\r\n\t\t//output.splice(0, 0, 0x200E);\r\n\t}\r\n\treturn flatten(labels);\r\n}\r\n\r\nfunction array_replace(v, a, b) {\r\n\tlet prev = 0;\r\n\twhile (true) {\r\n\t\tlet next = v.indexOf(a, prev);\r\n\t\tif (next < 0) break;\r\n\t\tv[next] = b; \r\n\t\tprev = next + 1;\r\n\t}\r\n}\r\n\r\nfunction ens_split(name, preserve_emoji) {\r\n\treturn split(name, nfc, preserve_emoji ? x => x.slice() : filter_fe0f); // emoji are exposed so copy\r\n}\r\n\r\nfunction split(name, nf, ef) {\r\n\tif (!name) return []; // 20230719: empty name allowance\r\n\tinit();\r\n\tlet offset = 0;\r\n\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t// 4.) \"The label must not contain a U+002E ( . ) FULL STOP.\"\r\n\treturn name.split(STOP_CH).map(label => {\r\n\t\tlet input = explode_cp(label);\r\n\t\tlet info = {\r\n\t\t\tinput,\r\n\t\t\toffset, // codepoint, not substring!\r\n\t\t};\r\n\t\toffset += input.length + 1; // + stop\r\n\t\ttry {\r\n\t\t\t// 1.) \"The label must be in Unicode Normalization Form NFC\"\r\n\t\t\tlet tokens = info.tokens = tokens_from_str(input, nf, ef);\r\n\t\t\tlet token_count = tokens.length;\r\n\t\t\tlet type;\r\n\t\t\tif (!token_count) { // the label was effectively empty (could of had ignored characters)\r\n\t\t\t\t//norm = [];\r\n\t\t\t\t//type = 'None'; // use this instead of next match, \"ASCII\"\r\n\t\t\t\t// 20230120: change to strict\r\n\t\t\t\t// https://discuss.ens.domains/t/ens-name-normalization-2nd/14564/59\r\n\t\t\t\tthrow new Error(`empty label`);\r\n\t\t\t} \r\n\t\t\tlet norm = info.output = tokens.flat();\r\n\t\t\tcheck_leading_underscore(norm);\r\n\t\t\tlet emoji = info.emoji = token_count > 1 || tokens[0].is_emoji; // same as: tokens.some(x => x.is_emoji);\r\n\t\t\tif (!emoji && norm.every(cp => cp < 0x80)) { // special case for ascii\r\n\t\t\t\t// 20230123: matches matches WHATWG, see note 3.3\r\n\t\t\t\tcheck_label_extension(norm); // only needed for ascii\r\n\t\t\t\t// cant have fenced\r\n\t\t\t\t// cant have cm\r\n\t\t\t\t// cant have wholes\r\n\t\t\t\t// see derive: \"Fastpath ASCII\"\r\n\t\t\t\ttype = 'ASCII';\r\n\t\t\t} else {\r\n\t\t\t\tlet chars = tokens.flatMap(x => x.is_emoji ? [] : x); // all of the nfc tokens concat together\r\n\t\t\t\tif (!chars.length) { // theres no text, just emoji\r\n\t\t\t\t\ttype = 'Emoji';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 5.) \"The label must not begin with a combining mark, that is: General_Category=Mark.\"\r\n\t\t\t\t\tif (CM.has(norm[0])) throw error_placement('leading combining mark');\r\n\t\t\t\t\tfor (let i = 1; i < token_count; i++) { // we've already checked the first token\r\n\t\t\t\t\t\tlet cps = tokens[i];\r\n\t\t\t\t\t\tif (!cps.is_emoji && CM.has(cps[0])) { // every text token has emoji neighbors, eg. EtEEEtEt...\r\n\t\t\t\t\t\t\t// bidi_qq() not needed since emoji is LTR and cps is a CM\r\n\t\t\t\t\t\t\tthrow error_placement(`emoji + combining mark: \"${str_from_cps(tokens[i-1])} + ${safe_str_from_cps([cps[0]])}\"`); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcheck_fenced(norm);\r\n\t\t\t\t\tlet unique = Array_from(new Set(chars));\r\n\t\t\t\t\tlet [g] = determine_group(unique); // take the first match\r\n\t\t\t\t\t// see derive: \"Matching Groups have Same CM Style\"\r\n\t\t\t\t\t// alternative: could form a hybrid type: Latin/Japanese/...\t\r\n\t\t\t\t\tcheck_group(g, chars); // need text in order\r\n\t\t\t\t\tcheck_whole(g, unique); // only need unique text (order would be required for multiple-char confusables)\r\n\t\t\t\t\ttype = g.N;\r\n\t\t\t\t\t// 20230121: consider exposing restricted flag\r\n\t\t\t\t\t// it's simpler to just check for 'Restricted'\r\n\t\t\t\t\t// or even better: type.endsWith(']')\r\n\t\t\t\t\t//if (g.R) info.restricted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinfo.type = type;\r\n\t\t} catch (err) {\r\n\t\t\tinfo.error = err; // use full error object\r\n\t\t}\r\n\t\treturn info;\r\n\t});\r\n}\r\n\r\nfunction check_whole(group, unique) {\r\n\tlet maker;\r\n\tlet shared = [];\r\n\tfor (let cp of unique) {\r\n\t\tlet whole = WHOLE_MAP.get(cp);\r\n\t\tif (whole === UNIQUE_PH) return; // unique, non-confusable\r\n\t\tif (whole) {\r\n\t\t\tlet set = whole.M.get(cp); // groups which have a character that look-like this character\r\n\t\t\tmaker = maker ? maker.filter(g => set.has(g)) : Array_from(set);\r\n\t\t\tif (!maker.length) return; // confusable intersection is empty\r\n\t\t} else {\r\n\t\t\tshared.push(cp); \r\n\t\t}\r\n\t}\r\n\tif (maker) {\r\n\t\t// we have 1+ confusable\r\n\t\t// check if any of the remaining groups\r\n\t\t// contain the shared characters too\r\n\t\tfor (let g of maker) {\r\n\t\t\tif (shared.every(cp => group_has_cp(g, cp))) {\r\n\t\t\t\tthrow new Error(`whole-script confusable: ${group.N}/${g.N}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// assumption: unique.size > 0\r\n// returns list of matching groups\r\nfunction determine_group(unique) {\r\n\tlet groups = GROUPS;\r\n\tfor (let cp of unique) {\r\n\t\t// note: we need to dodge CM that are whitelisted\r\n\t\t// but that code isn't currently necessary\r\n\t\tlet gs = groups.filter(g => group_has_cp(g, cp));\r\n\t\tif (!gs.length) {\r\n\t\t\tif (!GROUPS.some(g => group_has_cp(g, cp))) { \r\n\t\t\t\t// the character was composed of valid parts\r\n\t\t\t\t// but it's NFC form is invalid\r\n\t\t\t\t// 20230716: change to more exact statement, see: ENSNormalize.{cs,java}\r\n\t\t\t\t// note: this doesn't have to be a composition\r\n\t\t\t\t// 20230720: change to full check\r\n\t\t\t\tthrow error_disallowed(cp); // this should be rare\r\n\t\t\t} else {\r\n\t\t\t\t// there is no group that contains all these characters\r\n\t\t\t\t// throw using the highest priority group that matched\r\n\t\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\t\tthrow error_group_member(groups[0], cp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgroups = gs;\r\n\t\tif (gs.length == 1) break; // there is only one group left\r\n\t}\r\n\t// there are at least 1 group(s) with all of these characters\r\n\treturn groups;\r\n}\r\n\r\n// throw on first error\r\nfunction flatten(split) {\r\n\treturn split.map(({input, error, output}) => {\r\n\t\tif (error) {\r\n\t\t\t// don't print label again if just a single label\r\n\t\t\tlet msg = error.message;\r\n\t\t\t// bidi_qq() only necessary if msg is digits\r\n\t\t\tthrow new Error(split.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input, 63))}: ${msg}`); \r\n\t\t}\r\n\t\treturn str_from_cps(output);\r\n\t}).join(STOP_CH);\r\n}\r\n\r\nfunction error_disallowed(cp) {\r\n\t// TODO: add cp to error?\r\n\treturn new Error(`disallowed character: ${quoted_cp(cp)}`); \r\n}\r\nfunction error_group_member(g, cp) {\r\n\tlet quoted = quoted_cp(cp);\r\n\tlet gg = GROUPS.find(g => g.P.has(cp)); // only check primary\r\n\tif (gg) {\r\n\t\tquoted = `${gg.N} ${quoted}`;\r\n\t}\r\n\treturn new Error(`illegal mixture: ${g.N} + ${quoted}`);\r\n}\r\nfunction error_placement(where) {\r\n\treturn new Error(`illegal placement: ${where}`);\r\n}\r\n\r\n// assumption: cps.length > 0\r\n// assumption: cps[0] isn't a CM\r\n// assumption: the previous character isn't an emoji\r\nfunction check_group(g, cps) {\r\n\tfor (let cp of cps) {\r\n\t\tif (!group_has_cp(g, cp)) {\r\n\t\t\t// for whitelisted scripts, this will throw illegal mixture on invalid cm, eg. \"e{300}{300}\"\r\n\t\t\t// at the moment, it's unnecessary to introduce an extra error type\r\n\t\t\t// until there exists a whitelisted multi-character\r\n\t\t\t//   eg. if (M < 0 && is_combining_mark(cp)) { ... }\r\n\t\t\t// there are 3 cases:\r\n\t\t\t//   1. illegal cm for wrong group => mixture error\r\n\t\t\t//   2. illegal cm for same group => cm error\r\n\t\t\t//       requires set of whitelist cm per group: \r\n\t\t\t//        eg. new Set([...g.P, ...g.Q].flatMap(nfc).filter(cp => CM.has(cp)))\r\n\t\t\t//   3. wrong group => mixture error\r\n\t\t\tthrow error_group_member(g, cp);\r\n\t\t}\r\n\t}\r\n\t//if (M >= 0) { // we have a known fixed cm count\r\n\tif (g.M) { // we need to check for NSM\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // see: assumption\r\n\t\t\t// 20230210: bugfix: using cps instead of decomposed h/t Carbon225\r\n\t\t\t/*\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: ${g.N} ${bidi_qq(str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t// 20230217: switch to NSM counting\r\n\t\t\t// https://www.unicode.org/reports/tr39/#Optional_Detection\r\n\t\t\tif (NSM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\tfor (let cp; j < e && NSM.has(cp = decomposed[j]); j++) {\r\n\t\t\t\t\t// a. Forbid sequences of the same nonspacing mark.\r\n\t\t\t\t\tfor (let k = i; k < j; k++) { // O(n^2) but n < 100\r\n\t\t\t\t\t\tif (decomposed[k] == cp) {\r\n\t\t\t\t\t\t\tthrow new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// parse to end so we have full nsm count\r\n\t\t\t\t// b. Forbid sequences of more than 4 nonspacing marks (gc=Mn or gc=Me).\r\n\t\t\t\tif (j - i > NSM_MAX) {\r\n\t\t\t\t\t// note: this slice starts with a base char or spacing-mark cm\r\n\t\t\t\t\tthrow new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${NSM_MAX})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// *** this code currently isn't needed ***\r\n\t/*\r\n\tlet cm_whitelist = M instanceof Map;\r\n\tfor (let i = 0, e = cps.length; i < e; ) {\r\n\t\tlet cp = cps[i++];\r\n\t\tlet seqs = cm_whitelist && M.get(cp);\r\n\t\tif (seqs) { \r\n\t\t\t// list of codepoints that can follow\r\n\t\t\t// if this exists, this will always be 1+\r\n\t\t\tlet j = i;\r\n\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\tlet cms = cps.slice(i, j);\r\n\t\t\tlet match = seqs.find(seq => !compare_arrays(seq, cms));\r\n\t\t\tif (!match) throw new Error(`disallowed combining mark sequence: \"${safe_str_from_cps([cp, ...cms])}\"`);\r\n\t\t\ti = j;\r\n\t\t} else if (!V.has(cp)) {\r\n\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\tlet quoted = quoted_cp(cp);\r\n\t\t\tfor (let cp of cps) {\r\n\t\t\t\tlet u = UNIQUE.get(cp);\r\n\t\t\t\tif (u && u !== g) {\r\n\t\t\t\t\t// if both scripts are restricted this error is confusing\r\n\t\t\t\t\t// because we don't differentiate RestrictedA from RestrictedB \r\n\t\t\t\t\tif (!u.R) quoted = `${quoted} is ${u.N}`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(`disallowed ${g.N} character: ${quoted}`);\r\n\t\t\t//throw new Error(`disallowed character: ${quoted} (expected ${g.N})`);\r\n\t\t\t//throw new Error(`${g.N} does not allow: ${quoted}`);\r\n\t\t}\r\n\t}\r\n\tif (!cm_whitelist) {\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // we know it can't be cm leading\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: \"${str_from_cps(decomposed.slice(i-1, j))}\" (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n// given a list of codepoints\r\n// returns a list of lists, where emoji are a fully-qualified (as Array subclass)\r\n// eg. explode_cp(\"abc💩d\") => [[61, 62, 63], Emoji[1F4A9, FE0F], [64]]\r\n// 20230818: rename for 'process' name collision h/t Javarome\r\n// https://github.com/adraffy/ens-normalize.js/issues/23\r\nfunction tokens_from_str(input, nf, ef) {\r\n\tlet ret = [];\r\n\tlet chars = [];\r\n\tinput = input.slice().reverse(); // flip so we can pop\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input);\r\n\t\tif (emoji) {\r\n\t\t\tif (chars.length) {\r\n\t\t\t\tret.push(nf(chars));\r\n\t\t\t\tchars = [];\r\n\t\t\t}\r\n\t\t\tret.push(ef(emoji));\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (VALID.has(cp)) {\r\n\t\t\t\tchars.push(cp);\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\tchars.push(...cps); // less than 10 elements\r\n\t\t\t\t} else if (!IGNORED.has(cp)) {\r\n\t\t\t\t\t// 20230912: unicode 15.1 changed the order of processing such that\r\n\t\t\t\t\t// disallowed parts are only rejected after NFC\r\n\t\t\t\t\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t\t\t\t\t// this doesn't impact normalization as of today\r\n\t\t\t\t\t// technically, this error can be removed as the group logic will apply similar logic\r\n\t\t\t\t\t// however the error type might be less clear\r\n\t\t\t\t\tthrow error_disallowed(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (chars.length) {\r\n\t\tret.push(nf(chars));\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction filter_fe0f(cps) {\r\n\treturn cps.filter(cp => cp != FE0F);\r\n}\r\n\r\n// given array of codepoints\r\n// returns the longest valid emoji sequence (or undefined if no match)\r\n// *MUTATES* the supplied array\r\n// disallows interleaved ignored characters\r\n// fills (optional) eaten array with matched codepoints\r\nfunction consume_emoji_reversed(cps, eaten) {\r\n\tlet node = EMOJI_ROOT;\r\n\tlet emoji;\r\n\tlet pos = cps.length;\r\n\twhile (pos) {\r\n\t\tnode = node.get(cps[--pos]);\r\n\t\tif (!node) break;\r\n\t\tlet {V} = node;\r\n\t\tif (V) { // this is a valid emoji (so far)\r\n\t\t\temoji = V;\r\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // (optional) copy input, used for ens_tokenize()\r\n\t\t\tcps.length = pos; // truncate\r\n\t\t}\r\n\t}\r\n\treturn emoji;\r\n}\r\n\r\n// ************************************************************\r\n// tokenizer \r\n\r\nconst TY_VALID = 'valid';\r\nconst TY_MAPPED = 'mapped';\r\nconst TY_IGNORED = 'ignored';\r\nconst TY_DISALLOWED = 'disallowed';\r\nconst TY_EMOJI = 'emoji';\r\nconst TY_NFC = 'nfc';\r\nconst TY_STOP = 'stop';\r\n\r\nfunction ens_tokenize(name, {\r\n\tnf = true, // collapse unnormalized runs into a single token\r\n} = {}) {\r\n\tinit();\r\n\tlet input = explode_cp(name).reverse();\r\n\tlet eaten = [];\r\n\tlet tokens = [];\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input, eaten);\r\n\t\tif (emoji) {\r\n\t\t\ttokens.push({\r\n\t\t\t\ttype: TY_EMOJI,\r\n\t\t\t\temoji: emoji.slice(), // copy emoji\r\n\t\t\t\tinput: eaten,\r\n\t\t\t\tcps: filter_fe0f(emoji)\r\n\t\t\t});\r\n\t\t\teaten = []; // reset buffer\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (cp == STOP) {\r\n\t\t\t\ttokens.push({type: TY_STOP, cp});\r\n\t\t\t} else if (VALID.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_VALID, cps: [cp]});\r\n\t\t\t} else if (IGNORED.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_IGNORED, cp});\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\ttokens.push({type: TY_MAPPED, cp, cps: cps.slice()});\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttokens.push({type: TY_DISALLOWED, cp});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (nf) {\r\n\t\tfor (let i = 0, start = -1; i < tokens.length; i++) {\r\n\t\t\tlet token = tokens[i];\r\n\t\t\tif (is_valid_or_mapped(token.type)) {\r\n\t\t\t\tif (requires_check(token.cps)) { // normalization might be needed\r\n\t\t\t\t\tlet end = i + 1;\r\n\t\t\t\t\tfor (let pos = end; pos < tokens.length; pos++) { // find adjacent text\r\n\t\t\t\t\t\tlet {type, cps} = tokens[pos];\r\n\t\t\t\t\t\tif (is_valid_or_mapped(type)) {\r\n\t\t\t\t\t\t\tif (!requires_check(cps)) break;\r\n\t\t\t\t\t\t\tend = pos + 1;\r\n\t\t\t\t\t\t} else if (type !== TY_IGNORED) { // || type !== TY_DISALLOWED) { \r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = i;\r\n\t\t\t\t\tlet slice = tokens.slice(start, end);\r\n\t\t\t\t\tlet cps0 = slice.flatMap(x => is_valid_or_mapped(x.type) ? x.cps : []); // strip junk tokens\r\n\t\t\t\t\tlet cps = nfc(cps0);\r\n\t\t\t\t\tif (compare_arrays(cps, cps0)) { // bundle into an nfc token\r\n\t\t\t\t\t\ttokens.splice(start, end - start, {\r\n\t\t\t\t\t\t\ttype: TY_NFC, \r\n\t\t\t\t\t\t\tinput: cps0, // there are 3 states: tokens0 ==(process)=> input ==(nfc)=> tokens/cps\r\n\t\t\t\t\t\t\tcps, \r\n\t\t\t\t\t\t\ttokens0: collapse_valid_tokens(slice),\r\n\t\t\t\t\t\t\ttokens: ens_tokenize(str_from_cps(cps), {nf: false})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ti = start;\r\n\t\t\t\t\t} else { \r\n\t\t\t\t\t\ti = end - 1; // skip to end of slice\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart = -1; // reset\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = i; // remember last\r\n\t\t\t\t}\r\n\t\t\t} else if (token.type !== TY_IGNORED) { // 20221024: is this correct?\r\n\t\t\t\tstart = -1; // reset\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn collapse_valid_tokens(tokens);\r\n}\r\n\r\nfunction is_valid_or_mapped(type) {\r\n\treturn type == TY_VALID || type == TY_MAPPED;\r\n}\r\n\r\nfunction requires_check(cps) {\r\n\treturn cps.some(cp => NFC_CHECK.has(cp));\r\n}\r\n\r\nfunction collapse_valid_tokens(tokens) {\r\n\tfor (let i = 0; i < tokens.length; i++) {\r\n\t\tif (tokens[i].type == TY_VALID) {\r\n\t\t\tlet j = i + 1;\r\n\t\t\twhile (j < tokens.length && tokens[j].type == TY_VALID) j++;\r\n\t\t\ttokens.splice(i, j - i, {type: TY_VALID, cps: tokens.slice(i, j).flatMap(x => x.cps)});\r\n\t\t}\r\n\t}\r\n\treturn tokens;\r\n}\n\nexport { ens_beautify, ens_emoji, ens_normalize, ens_normalize_fragment, ens_split, ens_tokenize, is_combining_mark, nfc, nfd, safe_str_from_cps, should_escape };\n","import { keccak256 } from \"../crypto/index.js\";\nimport { concat, hexlify, assertArgument, toUtf8Bytes } from \"../utils/index.js\";\nimport { ens_normalize } from \"@adraffy/ens-normalize\";\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nfunction checkComponent(comp) {\n    assertArgument(comp.length !== 0, \"invalid ENS name; empty component\", \"comp\", comp);\n    return comp;\n}\nfunction ensNameSplit(name) {\n    const bytes = toUtf8Bytes(ensNormalize(name));\n    const comps = [];\n    if (name.length === 0) {\n        return comps;\n    }\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n    // There was a stray separator at the end of the name\n    assertArgument(last < bytes.length, \"invalid ENS name; empty component\", \"name\", name);\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n/**\n *  Returns the ENS %%name%% normalized.\n */\nexport function ensNormalize(name) {\n    try {\n        if (name.length === 0) {\n            throw new Error(\"empty label\");\n        }\n        return ens_normalize(name);\n    }\n    catch (error) {\n        assertArgument(false, `invalid ENS name (${error.message})`, \"name\", name);\n    }\n}\n/**\n *  Returns ``true`` if %%name%% is a valid ENS name.\n */\nexport function isValidName(name) {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    }\n    catch (error) { }\n    return false;\n}\n/**\n *  Returns the [[link-namehash]] for %%name%%.\n */\nexport function namehash(name) {\n    assertArgument(typeof (name) === \"string\", \"invalid ENS name; not a string\", \"name\", name);\n    assertArgument(name.length, `invalid ENS name (empty label)`, \"name\", name);\n    let result = Zeros;\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256((comps.pop()))]));\n    }\n    return hexlify(result);\n}\n/**\n *  Returns the DNS encoded %%name%%.\n *\n *  This is used for various parts of ENS name resolution, such\n *  as the wildcard resolution.\n */\nexport function dnsEncode(name, _maxLength) {\n    const length = (_maxLength != null) ? _maxLength : 63;\n    assertArgument(length <= 255, \"DNS encoded label cannot exceed 255\", \"length\", length);\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        assertArgument(comp.length <= length, `label ${JSON.stringify(name)} exceeds ${length} bytes`, \"name\", name);\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    }))) + \"00\";\n}\n//# sourceMappingURL=namehash.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    assertHash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    assertNumber(c);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = toBytes(_password);\n    const salt = toBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n//# sourceMappingURL=pbkdf2.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/* Browser Crypto Shims */\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { pbkdf2 } from \"@noble/hashes/pbkdf2\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { sha512 } from \"@noble/hashes/sha512\";\nimport { assert, assertArgument } from \"../utils/index.js\";\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst anyGlobal = getGlobal();\nconst crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nexport function createHash(algo) {\n    switch (algo) {\n        case \"sha256\": return sha256.create();\n        case \"sha512\": return sha512.create();\n    }\n    assertArgument(false, \"invalid hashing algorithm name\", \"algorithm\", algo);\n}\nexport function createHmac(_algo, key) {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid hmac algorithm\", \"algorithm\", _algo);\n    return hmac.create(algo, key);\n}\nexport function pbkdf2Sync(password, salt, iterations, keylen, _algo) {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid pbkdf2 algorithm\", \"algorithm\", _algo);\n    return pbkdf2(algo, password, salt, { c: iterations, dkLen: keylen });\n}\nexport function randomBytes(length) {\n    assert(crypto != null, \"platform does not support secure random numbers\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"randomBytes\"\n    });\n    assertArgument(Number.isInteger(length) && length > 0 && length <= 1024, \"invalid length\", \"length\", length);\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return result;\n}\n//# sourceMappingURL=crypto-browser.js.map","import { createHash } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\nconst _sha256 = function (data) {\n    return createHash(\"sha256\").update(data).digest();\n};\nconst _sha512 = function (data) {\n    return createHash(\"sha512\").update(data).digest();\n};\nlet __sha256 = _sha256;\nlet __sha512 = _sha512;\nlet locked256 = false, locked512 = false;\n/**\n *  Compute the cryptographic SHA2-256 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha256(\"0x\")\n *    //_result:\n *\n *    sha256(\"0x1337\")\n *    //_result:\n *\n *    sha256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function sha256(_data) {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha256(data));\n}\nsha256._ = _sha256;\nsha256.lock = function () { locked256 = true; };\nsha256.register = function (func) {\n    if (locked256) {\n        throw new Error(\"sha256 is locked\");\n    }\n    __sha256 = func;\n};\nObject.freeze(sha256);\n/**\n *  Compute the cryptographic SHA2-512 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha512(\"0x\")\n *    //_result:\n *\n *    sha512(\"0x1337\")\n *    //_result:\n *\n *    sha512(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n */\nexport function sha512(_data) {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha512(data));\n}\nsha512._ = _sha512;\nsha512.lock = function () { locked512 = true; };\nsha512.register = function (func) {\n    if (locked512) {\n        throw new Error(\"sha512 is locked\");\n    }\n    __sha512 = func;\n};\nObject.freeze(sha256);\n//# sourceMappingURL=sha2.js.map","/**\n *  A constant for the zero hash.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000000000000000000000000000\"``)\n */\nexport const ZeroHash = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","import { ZeroHash } from \"../constants/index.js\";\nimport { concat, dataLength, getBigInt, getBytes, getNumber, hexlify, toBeArray, isHexString, zeroPadValue, assertArgument, assertPrivate } from \"../utils/index.js\";\n// Constants\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\nconst _guard = {};\nfunction toUint256(value) {\n    return zeroPadValue(toBeArray(value), 32);\n}\n/**\n *  A Signature  @TODO\n *\n *\n *  @_docloc: api/crypto:Signing\n */\nexport class Signature {\n    #r;\n    #s;\n    #v;\n    #networkV;\n    /**\n     *  The ``r`` value for a signautre.\n     *\n     *  This represents the ``x`` coordinate of a \"reference\" or\n     *  challenge point, from which the ``y`` can be computed.\n     */\n    get r() { return this.#r; }\n    set r(value) {\n        assertArgument(dataLength(value) === 32, \"invalid r\", \"value\", value);\n        this.#r = hexlify(value);\n    }\n    /**\n     *  The ``s`` value for a signature.\n     */\n    get s() { return this.#s; }\n    set s(_value) {\n        assertArgument(dataLength(_value) === 32, \"invalid s\", \"value\", _value);\n        const value = hexlify(_value);\n        assertArgument(parseInt(value.substring(0, 3)) < 8, \"non-canonical s\", \"value\", value);\n        this.#s = value;\n    }\n    /**\n     *  The ``v`` value for a signature.\n     *\n     *  Since a given ``x`` value for ``r`` has two possible values for\n     *  its correspondin ``y``, the ``v`` indicates which of the two ``y``\n     *  values to use.\n     *\n     *  It is normalized to the values ``27`` or ``28`` for legacy\n     *  purposes.\n     */\n    get v() { return this.#v; }\n    set v(value) {\n        const v = getNumber(value, \"value\");\n        assertArgument(v === 27 || v === 28, \"invalid v\", \"v\", value);\n        this.#v = v;\n    }\n    /**\n     *  The EIP-155 ``v`` for legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get networkV() { return this.#networkV; }\n    /**\n     *  The chain ID for EIP-155 legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get legacyChainId() {\n        const v = this.networkV;\n        if (v == null) {\n            return null;\n        }\n        return Signature.getChainId(v);\n    }\n    /**\n     *  The ``yParity`` for the signature.\n     *\n     *  See ``v`` for more details on how this value is used.\n     */\n    get yParity() {\n        return (this.v === 27) ? 0 : 1;\n    }\n    /**\n     *  The [[link-eip-2098]] compact representation of the ``yParity``\n     *  and ``s`` compacted into a single ``bytes32``.\n     */\n    get yParityAndS() {\n        // The EIP-2098 compact representation\n        const yParityAndS = getBytes(this.s);\n        if (this.yParity) {\n            yParityAndS[0] |= 0x80;\n        }\n        return hexlify(yParityAndS);\n    }\n    /**\n     *  The [[link-eip-2098]] compact representation.\n     */\n    get compactSerialized() {\n        return concat([this.r, this.yParityAndS]);\n    }\n    /**\n     *  The serialized representation.\n     */\n    get serialized() {\n        return concat([this.r, this.s, (this.yParity ? \"0x1c\" : \"0x1b\")]);\n    }\n    /**\n     *  @private\n     */\n    constructor(guard, r, s, v) {\n        assertPrivate(guard, _guard, \"Signature\");\n        this.#r = r;\n        this.#s = s;\n        this.#v = v;\n        this.#networkV = null;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `Signature { r: \"${this.r}\", s: \"${this.s}\", yParity: ${this.yParity}, networkV: ${this.networkV} }`;\n    }\n    /**\n     *  Returns a new identical [[Signature]].\n     */\n    clone() {\n        const clone = new Signature(_guard, this.r, this.s, this.v);\n        if (this.networkV) {\n            clone.#networkV = this.networkV;\n        }\n        return clone;\n    }\n    /**\n     *  Returns a representation that is compatible with ``JSON.stringify``.\n     */\n    toJSON() {\n        const networkV = this.networkV;\n        return {\n            _type: \"signature\",\n            networkV: ((networkV != null) ? networkV.toString() : null),\n            r: this.r, s: this.s, v: this.v,\n        };\n    }\n    /**\n     *  Compute the chain ID from the ``v`` in a legacy EIP-155 transactions.\n     *\n     *  @example:\n     *    Signature.getChainId(45)\n     *    //_result:\n     *\n     *    Signature.getChainId(46)\n     *    //_result:\n     */\n    static getChainId(v) {\n        const bv = getBigInt(v, \"v\");\n        // The v is not an EIP-155 v, so it is the unspecified chain ID\n        if ((bv == BN_27) || (bv == BN_28)) {\n            return BN_0;\n        }\n        // Bad value for an EIP-155 v\n        assertArgument(bv >= BN_35, \"invalid EIP-155 v\", \"v\", v);\n        return (bv - BN_35) / BN_2;\n    }\n    /**\n     *  Compute the ``v`` for a chain ID for a legacy EIP-155 transactions.\n     *\n     *  Legacy transactions which use [[link-eip-155]] hijack the ``v``\n     *  property to include the chain ID.\n     *\n     *  @example:\n     *    Signature.getChainIdV(5, 27)\n     *    //_result:\n     *\n     *    Signature.getChainIdV(5, 28)\n     *    //_result:\n     *\n     */\n    static getChainIdV(chainId, v) {\n        return (getBigInt(chainId) * BN_2) + BigInt(35 + v - 27);\n    }\n    /**\n     *  Compute the normalized legacy transaction ``v`` from a ``yParirty``,\n     *  a legacy transaction ``v`` or a legacy [[link-eip-155]] transaction.\n     *\n     *  @example:\n     *    // The values 0 and 1 imply v is actually yParity\n     *    Signature.getNormalizedV(0)\n     *    //_result:\n     *\n     *    // Legacy non-EIP-1559 transaction (i.e. 27 or 28)\n     *    Signature.getNormalizedV(27)\n     *    //_result:\n     *\n     *    // Legacy EIP-155 transaction (i.e. >= 35)\n     *    Signature.getNormalizedV(46)\n     *    //_result:\n     *\n     *    // Invalid values throw\n     *    Signature.getNormalizedV(5)\n     *    //_error:\n     */\n    static getNormalizedV(v) {\n        const bv = getBigInt(v);\n        if (bv === BN_0 || bv === BN_27) {\n            return 27;\n        }\n        if (bv === BN_1 || bv === BN_28) {\n            return 28;\n        }\n        assertArgument(bv >= BN_35, \"invalid v\", \"v\", v);\n        // Otherwise, EIP-155 v means odd is 27 and even is 28\n        return (bv & BN_1) ? 27 : 28;\n    }\n    /**\n     *  Creates a new [[Signature]].\n     *\n     *  If no %%sig%% is provided, a new [[Signature]] is created\n     *  with default values.\n     *\n     *  If %%sig%% is a string, it is parsed.\n     */\n    static from(sig) {\n        function assertError(check, message) {\n            assertArgument(check, message, \"signature\", sig);\n        }\n        ;\n        if (sig == null) {\n            return new Signature(_guard, ZeroHash, ZeroHash, 27);\n        }\n        if (typeof (sig) === \"string\") {\n            const bytes = getBytes(sig, \"signature\");\n            if (bytes.length === 64) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                const v = (s[0] & 0x80) ? 28 : 27;\n                s[0] &= 0x7f;\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n            if (bytes.length === 65) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                assertError((s[0] & 0x80) === 0, \"non-canonical s\");\n                const v = Signature.getNormalizedV(bytes[64]);\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n            assertError(false, \"invalid raw signature length\");\n        }\n        if (sig instanceof Signature) {\n            return sig.clone();\n        }\n        // Get r\n        const _r = sig.r;\n        assertError(_r != null, \"missing r\");\n        const r = toUint256(_r);\n        // Get s; by any means necessary (we check consistency below)\n        const s = (function (s, yParityAndS) {\n            if (s != null) {\n                return toUint256(s);\n            }\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                const bytes = getBytes(yParityAndS);\n                bytes[0] &= 0x7f;\n                return hexlify(bytes);\n            }\n            assertError(false, \"missing s\");\n        })(sig.s, sig.yParityAndS);\n        assertError((getBytes(s)[0] & 0x80) == 0, \"non-canonical s\");\n        // Get v; by any means necessary (we check consistency below)\n        const { networkV, v } = (function (_v, yParityAndS, yParity) {\n            if (_v != null) {\n                const v = getBigInt(_v);\n                return {\n                    networkV: ((v >= BN_35) ? v : undefined),\n                    v: Signature.getNormalizedV(v)\n                };\n            }\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                return { v: ((getBytes(yParityAndS)[0] & 0x80) ? 28 : 27) };\n            }\n            if (yParity != null) {\n                switch (getNumber(yParity, \"sig.yParity\")) {\n                    case 0: return { v: 27 };\n                    case 1: return { v: 28 };\n                }\n                assertError(false, \"invalid yParity\");\n            }\n            assertError(false, \"missing v\");\n        })(sig.v, sig.yParityAndS, sig.yParity);\n        const result = new Signature(_guard, r, s, v);\n        if (networkV) {\n            result.#networkV = networkV;\n        }\n        // If multiple of v, yParity, yParityAndS we given, check they match\n        assertError(sig.yParity == null || getNumber(sig.yParity, \"sig.yParity\") === result.yParity, \"yParity mismatch\");\n        assertError(sig.yParityAndS == null || sig.yParityAndS === result.yParityAndS, \"yParityAndS mismatch\");\n        return result;\n    }\n}\n//# sourceMappingURL=signature.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexport function equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || val instanceof Uint8Array,\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","/**\n *  Add details about signing here.\n *\n *  @_subsection: api/crypto:Signing  [about-signing]\n */\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\nimport { concat, dataLength, getBytes, getBytesCopy, hexlify, toBeHex, assertArgument } from \"../utils/index.js\";\nimport { Signature } from \"./signature.js\";\n/**\n *  A **SigningKey** provides high-level access to the elliptic curve\n *  cryptography (ECC) operations and key management.\n */\nexport class SigningKey {\n    #privateKey;\n    /**\n     *  Creates a new **SigningKey** for %%privateKey%%.\n     */\n    constructor(privateKey) {\n        assertArgument(dataLength(privateKey) === 32, \"invalid private key\", \"privateKey\", \"[REDACTED]\");\n        this.#privateKey = hexlify(privateKey);\n    }\n    /**\n     *  The private key.\n     */\n    get privateKey() { return this.#privateKey; }\n    /**\n     *  The uncompressed public key.\n     *\n     * This will always begin with the prefix ``0x04`` and be 132\n     * characters long (the ``0x`` prefix and 130 hexadecimal nibbles).\n     */\n    get publicKey() { return SigningKey.computePublicKey(this.#privateKey); }\n    /**\n     *  The compressed public key.\n     *\n     *  This will always begin with either the prefix ``0x02`` or ``0x03``\n     *  and be 68 characters long (the ``0x`` prefix and 33 hexadecimal\n     *  nibbles)\n     */\n    get compressedPublicKey() { return SigningKey.computePublicKey(this.#privateKey, true); }\n    /**\n     *  Return the signature of the signed %%digest%%.\n     */\n    sign(digest) {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n        const sig = secp256k1.sign(getBytesCopy(digest), getBytesCopy(this.#privateKey), {\n            lowS: true\n        });\n        return Signature.from({\n            r: toBeHex(sig.r, 32),\n            s: toBeHex(sig.s, 32),\n            v: (sig.recovery ? 0x1c : 0x1b)\n        });\n    }\n    /**\n     *  Returns the [[link-wiki-ecdh]] shared secret between this\n     *  private key and the %%other%% key.\n     *\n     *  The %%other%% key may be any type of key, a raw public key,\n     *  a compressed/uncompressed pubic key or aprivate key.\n     *\n     *  Best practice is usually to use a cryptographic hash on the\n     *  returned value before using it as a symetric secret.\n     *\n     *  @example:\n     *    sign1 = new SigningKey(id(\"some-secret-1\"))\n     *    sign2 = new SigningKey(id(\"some-secret-2\"))\n     *\n     *    // Notice that privA.computeSharedSecret(pubB)...\n     *    sign1.computeSharedSecret(sign2.publicKey)\n     *    //_result:\n     *\n     *    // ...is equal to privB.computeSharedSecret(pubA).\n     *    sign2.computeSharedSecret(sign1.publicKey)\n     *    //_result:\n     */\n    computeSharedSecret(other) {\n        const pubKey = SigningKey.computePublicKey(other);\n        return hexlify(secp256k1.getSharedSecret(getBytesCopy(this.#privateKey), getBytes(pubKey), false));\n    }\n    /**\n     *  Compute the public key for %%key%%, optionally %%compressed%%.\n     *\n     *  The %%key%% may be any type of key, a raw public key, a\n     *  compressed/uncompressed public key or private key.\n     *\n     *  @example:\n     *    sign = new SigningKey(id(\"some-secret\"));\n     *\n     *    // Compute the uncompressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey)\n     *    //_result:\n     *\n     *    // Compute the compressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey, true)\n     *    //_result:\n     *\n     *    // Compute the uncompressed public key\n     *    SigningKey.computePublicKey(sign.publicKey, false);\n     *    //_result:\n     *\n     *    // Compute the Compressed a public key\n     *    SigningKey.computePublicKey(sign.publicKey, true);\n     *    //_result:\n     */\n    static computePublicKey(key, compressed) {\n        let bytes = getBytes(key, \"key\");\n        // private key\n        if (bytes.length === 32) {\n            const pubKey = secp256k1.getPublicKey(bytes, !!compressed);\n            return hexlify(pubKey);\n        }\n        // raw public key; use uncompressed key with 0x04 prefix\n        if (bytes.length === 64) {\n            const pub = new Uint8Array(65);\n            pub[0] = 0x04;\n            pub.set(bytes, 1);\n            bytes = pub;\n        }\n        const point = secp256k1.ProjectivePoint.fromHex(bytes);\n        return hexlify(point.toRawBytes(compressed));\n    }\n    /**\n     *  Returns the public key for the private key which produced the\n     *  %%signature%% for the given %%digest%%.\n     *\n     *  @example:\n     *    key = new SigningKey(id(\"some-secret\"))\n     *    digest = id(\"hello world\")\n     *    sig = key.sign(digest)\n     *\n     *    // Notice the signer public key...\n     *    key.publicKey\n     *    //_result:\n     *\n     *    // ...is equal to the recovered public key\n     *    SigningKey.recoverPublicKey(digest, sig)\n     *    //_result:\n     *\n     */\n    static recoverPublicKey(digest, signature) {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n        const sig = Signature.from(signature);\n        let secpSig = secp256k1.Signature.fromCompact(getBytesCopy(concat([sig.r, sig.s])));\n        secpSig = secpSig.addRecoveryBit(sig.yParity);\n        const pubKey = secpSig.recoverPublicKey(getBytesCopy(digest));\n        assertArgument(pubKey != null, \"invalid signautre for digest\", \"signature\", signature);\n        return \"0x\" + pubKey.toHex(false);\n    }\n    /**\n     *  Returns the point resulting from adding the ellipic curve points\n     *  %%p0%% and %%p1%%.\n     *\n     *  This is not a common function most developers should require, but\n     *  can be useful for certain privacy-specific techniques.\n     *\n     *  For example, it is used by [[HDNodeWallet]] to compute child\n     *  addresses from parent public keys and chain codes.\n     */\n    static addPoints(p0, p1, compressed) {\n        const pub0 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p0).substring(2));\n        const pub1 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p1).substring(2));\n        return \"0x\" + pub0.add(pub1).toHex(!!compressed);\n    }\n}\n//# sourceMappingURL=signing-key.js.map","//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { getBytes } from \"./data.js\";\nfunction hexlifyByte(value) {\n    let result = value.toString(16);\n    while (result.length < 2) {\n        result = \"0\" + result;\n    }\n    return \"0x\" + result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        assert(childOffset <= offset + 1 + length, \"child data too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length, offset\n        });\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    assert(data.length !== 0, \"data too short\", \"BUFFER_OVERRUN\", {\n        buffer: data, length: 0, offset: 1\n    });\n    const checkOffset = (offset) => {\n        assert(offset <= data.length, \"data short segment too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length: data.length, offset\n        });\n    };\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        checkOffset(offset + 1 + lengthLength);\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        checkOffset(offset + 1 + length);\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        checkOffset(offset + 1 + lengthLength);\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        checkOffset(offset + 1 + length);\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlifyByte(data[offset]) };\n}\n/**\n *  Decodes %%data%% into the structured data it represents.\n */\nexport function decodeRlp(_data) {\n    const data = getBytes(_data, \"data\");\n    const decoded = _decode(data, 0);\n    assertArgument(decoded.consumed === data.length, \"unexpected junk after rlp payload\", \"data\", _data);\n    return decoded.result;\n}\n//# sourceMappingURL=rlp-decode.js.map","//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { getBytes } from \"./data.js\";\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    const data = Array.prototype.slice.call(getBytes(object, \"object\"));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nconst nibbles = \"0123456789abcdef\";\n/**\n *  Encodes %%object%% as an RLP-encoded [[DataHexString]].\n */\nexport function encodeRlp(object) {\n    let result = \"0x\";\n    for (const v of _encode(object)) {\n        result += nibbles[v >> 4];\n        result += nibbles[v & 0xf];\n    }\n    return result;\n}\n//# sourceMappingURL=rlp-encode.js.map","import { getAddress } from \"../address/index.js\";\nimport { keccak256, SigningKey } from \"../crypto/index.js\";\n/**\n *  Returns the address for the %%key%%.\n *\n *  The key may be any standard form of public key or a private key.\n */\nexport function computeAddress(key) {\n    let pubkey;\n    if (typeof (key) === \"string\") {\n        pubkey = SigningKey.computePublicKey(key, false);\n    }\n    else {\n        pubkey = key.publicKey;\n    }\n    return getAddress(keccak256(\"0x\" + pubkey.substring(4)).substring(26));\n}\n/**\n *  Returns the recovered address for the private key that was\n *  used to sign %%digest%% that resulted in %%signature%%.\n */\nexport function recoverAddress(digest, signature) {\n    return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n}\n//# sourceMappingURL=address.js.map","import { getAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/addresses.js\";\nimport { keccak256, sha256, Signature, SigningKey } from \"../crypto/index.js\";\nimport { concat, decodeRlp, encodeRlp, getBytes, getBigInt, getNumber, hexlify, assert, assertArgument, isBytesLike, isHexString, toBeArray, zeroPadValue } from \"../utils/index.js\";\nimport { accessListify } from \"./accesslist.js\";\nimport { recoverAddress } from \"./address.js\";\nconst BN_0 = BigInt(0);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\nconst BN_MAX_UINT = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nconst BLOB_SIZE = 4096 * 32;\nfunction getVersionedHash(version, hash) {\n    let versioned = version.toString(16);\n    while (versioned.length < 2) {\n        versioned = \"0\" + versioned;\n    }\n    versioned += sha256(hash).substring(4);\n    return \"0x\" + versioned;\n}\nfunction handleAddress(value) {\n    if (value === \"0x\") {\n        return null;\n    }\n    return getAddress(value);\n}\nfunction handleAccessList(value, param) {\n    try {\n        return accessListify(value);\n    }\n    catch (error) {\n        assertArgument(false, error.message, param, value);\n    }\n}\nfunction handleNumber(_value, param) {\n    if (_value === \"0x\") {\n        return 0;\n    }\n    return getNumber(_value, param);\n}\nfunction handleUint(_value, param) {\n    if (_value === \"0x\") {\n        return BN_0;\n    }\n    const value = getBigInt(_value, param);\n    assertArgument(value <= BN_MAX_UINT, \"value exceeds uint size\", param, value);\n    return value;\n}\nfunction formatNumber(_value, name) {\n    const value = getBigInt(_value, \"value\");\n    const result = toBeArray(value);\n    assertArgument(result.length <= 32, `value too large`, `tx.${name}`, value);\n    return result;\n}\nfunction formatAccessList(value) {\n    return accessListify(value).map((set) => [set.address, set.storageKeys]);\n}\nfunction formatHashes(value, param) {\n    assertArgument(Array.isArray(value), `invalid ${param}`, \"value\", value);\n    for (let i = 0; i < value.length; i++) {\n        assertArgument(isHexString(value[i], 32), \"invalid ${ param } hash\", `value[${i}]`, value[i]);\n    }\n    return value;\n}\nfunction _parseLegacy(data) {\n    const fields = decodeRlp(data);\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 6), \"invalid field count for legacy transaction\", \"data\", data);\n    const tx = {\n        type: 0,\n        nonce: handleNumber(fields[0], \"nonce\"),\n        gasPrice: handleUint(fields[1], \"gasPrice\"),\n        gasLimit: handleUint(fields[2], \"gasLimit\"),\n        to: handleAddress(fields[3]),\n        value: handleUint(fields[4], \"value\"),\n        data: hexlify(fields[5]),\n        chainId: BN_0\n    };\n    // Legacy unsigned transaction\n    if (fields.length === 6) {\n        return tx;\n    }\n    const v = handleUint(fields[6], \"v\");\n    const r = handleUint(fields[7], \"r\");\n    const s = handleUint(fields[8], \"s\");\n    if (r === BN_0 && s === BN_0) {\n        // EIP-155 unsigned transaction\n        tx.chainId = v;\n    }\n    else {\n        // Compute the EIP-155 chain ID (or 0 for legacy)\n        let chainId = (v - BN_35) / BN_2;\n        if (chainId < BN_0) {\n            chainId = BN_0;\n        }\n        tx.chainId = chainId;\n        // Signed Legacy Transaction\n        assertArgument(chainId !== BN_0 || (v === BN_27 || v === BN_28), \"non-canonical legacy v\", \"v\", fields[6]);\n        tx.signature = Signature.from({\n            r: zeroPadValue(fields[7], 32),\n            s: zeroPadValue(fields[8], 32),\n            v\n        });\n        //tx.hash = keccak256(data);\n    }\n    return tx;\n}\nfunction _serializeLegacy(tx, sig) {\n    const fields = [\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n    ];\n    let chainId = BN_0;\n    if (tx.chainId != BN_0) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = getBigInt(tx.chainId, \"tx.chainId\");\n        // We have a chainId in the tx and an EIP-155 v in the signature,\n        // make sure they agree with each other\n        assertArgument(!sig || sig.networkV == null || sig.legacyChainId === chainId, \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    }\n    else if (tx.signature) {\n        // No explicit chainId, but EIP-155 have a derived implicit chainId\n        const legacy = tx.signature.legacyChainId;\n        if (legacy != null) {\n            chainId = legacy;\n        }\n    }\n    // Requesting an unsigned transaction\n    if (!sig) {\n        // We have an EIP-155 transaction (chainId was specified and non-zero)\n        if (chainId !== BN_0) {\n            fields.push(toBeArray(chainId));\n            fields.push(\"0x\");\n            fields.push(\"0x\");\n        }\n        return encodeRlp(fields);\n    }\n    // @TODO: We should probably check that tx.signature, chainId, and sig\n    //        match but that logic could break existing code, so schedule\n    //        this for the next major bump.\n    // Compute the EIP-155 v\n    let v = BigInt(27 + sig.yParity);\n    if (chainId !== BN_0) {\n        v = Signature.getChainIdV(chainId, sig.v);\n    }\n    else if (BigInt(sig.v) !== v) {\n        assertArgument(false, \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    }\n    // Add the signature\n    fields.push(toBeArray(v));\n    fields.push(toBeArray(sig.r));\n    fields.push(toBeArray(sig.s));\n    return encodeRlp(fields);\n}\nfunction _parseEipSignature(tx, fields) {\n    let yParity;\n    try {\n        yParity = handleNumber(fields[0], \"yParity\");\n        if (yParity !== 0 && yParity !== 1) {\n            throw new Error(\"bad yParity\");\n        }\n    }\n    catch (error) {\n        assertArgument(false, \"invalid yParity\", \"yParity\", fields[0]);\n    }\n    const r = zeroPadValue(fields[1], 32);\n    const s = zeroPadValue(fields[2], 32);\n    const signature = Signature.from({ r, s, yParity });\n    tx.signature = signature;\n}\nfunction _parseEip1559(data) {\n    const fields = decodeRlp(getBytes(data).slice(1));\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 12), \"invalid field count for transaction type: 2\", \"data\", hexlify(data));\n    const tx = {\n        type: 2,\n        chainId: handleUint(fields[0], \"chainId\"),\n        nonce: handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas: handleUint(fields[2], \"maxPriorityFeePerGas\"),\n        maxFeePerGas: handleUint(fields[3], \"maxFeePerGas\"),\n        gasPrice: null,\n        gasLimit: handleUint(fields[4], \"gasLimit\"),\n        to: handleAddress(fields[5]),\n        value: handleUint(fields[6], \"value\"),\n        data: hexlify(fields[7]),\n        accessList: handleAccessList(fields[8], \"accessList\"),\n    };\n    // Unsigned EIP-1559 Transaction\n    if (fields.length === 9) {\n        return tx;\n    }\n    //tx.hash = keccak256(data);\n    _parseEipSignature(tx, fields.slice(9));\n    return tx;\n}\nfunction _serializeEip1559(tx, sig) {\n    const fields = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [])\n    ];\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n    return concat([\"0x02\", encodeRlp(fields)]);\n}\nfunction _parseEip2930(data) {\n    const fields = decodeRlp(getBytes(data).slice(1));\n    assertArgument(Array.isArray(fields) && (fields.length === 8 || fields.length === 11), \"invalid field count for transaction type: 1\", \"data\", hexlify(data));\n    const tx = {\n        type: 1,\n        chainId: handleUint(fields[0], \"chainId\"),\n        nonce: handleNumber(fields[1], \"nonce\"),\n        gasPrice: handleUint(fields[2], \"gasPrice\"),\n        gasLimit: handleUint(fields[3], \"gasLimit\"),\n        to: handleAddress(fields[4]),\n        value: handleUint(fields[5], \"value\"),\n        data: hexlify(fields[6]),\n        accessList: handleAccessList(fields[7], \"accessList\")\n    };\n    // Unsigned EIP-2930 Transaction\n    if (fields.length === 8) {\n        return tx;\n    }\n    //tx.hash = keccak256(data);\n    _parseEipSignature(tx, fields.slice(8));\n    return tx;\n}\nfunction _serializeEip2930(tx, sig) {\n    const fields = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [])\n    ];\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"recoveryParam\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n    return concat([\"0x01\", encodeRlp(fields)]);\n}\nfunction _parseEip4844(data) {\n    let fields = decodeRlp(getBytes(data).slice(1));\n    let typeName = \"3\";\n    let blobs = null;\n    // Parse the network format\n    if (fields.length === 4 && Array.isArray(fields[0])) {\n        typeName = \"3 (network format)\";\n        const fBlobs = fields[1], fCommits = fields[2], fProofs = fields[3];\n        assertArgument(Array.isArray(fBlobs), \"invalid network format: blobs not an array\", \"fields[1]\", fBlobs);\n        assertArgument(Array.isArray(fCommits), \"invalid network format: commitments not an array\", \"fields[2]\", fCommits);\n        assertArgument(Array.isArray(fProofs), \"invalid network format: proofs not an array\", \"fields[3]\", fProofs);\n        assertArgument(fBlobs.length === fCommits.length, \"invalid network format: blobs/commitments length mismatch\", \"fields\", fields);\n        assertArgument(fBlobs.length === fProofs.length, \"invalid network format: blobs/proofs length mismatch\", \"fields\", fields);\n        blobs = [];\n        for (let i = 0; i < fields[1].length; i++) {\n            blobs.push({\n                data: fBlobs[i],\n                commitment: fCommits[i],\n                proof: fProofs[i],\n            });\n        }\n        fields = fields[0];\n    }\n    assertArgument(Array.isArray(fields) && (fields.length === 11 || fields.length === 14), `invalid field count for transaction type: ${typeName}`, \"data\", hexlify(data));\n    const tx = {\n        type: 3,\n        chainId: handleUint(fields[0], \"chainId\"),\n        nonce: handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas: handleUint(fields[2], \"maxPriorityFeePerGas\"),\n        maxFeePerGas: handleUint(fields[3], \"maxFeePerGas\"),\n        gasPrice: null,\n        gasLimit: handleUint(fields[4], \"gasLimit\"),\n        to: handleAddress(fields[5]),\n        value: handleUint(fields[6], \"value\"),\n        data: hexlify(fields[7]),\n        accessList: handleAccessList(fields[8], \"accessList\"),\n        maxFeePerBlobGas: handleUint(fields[9], \"maxFeePerBlobGas\"),\n        blobVersionedHashes: fields[10]\n    };\n    if (blobs) {\n        tx.blobs = blobs;\n    }\n    assertArgument(tx.to != null, `invalid address for transaction type: ${typeName}`, \"data\", data);\n    assertArgument(Array.isArray(tx.blobVersionedHashes), \"invalid blobVersionedHashes: must be an array\", \"data\", data);\n    for (let i = 0; i < tx.blobVersionedHashes.length; i++) {\n        assertArgument(isHexString(tx.blobVersionedHashes[i], 32), `invalid blobVersionedHash at index ${i}: must be length 32`, \"data\", data);\n    }\n    // Unsigned EIP-4844 Transaction\n    if (fields.length === 11) {\n        return tx;\n    }\n    // @TODO: Do we need to do this? This is only called internally\n    // and used to verify hashes; it might save time to not do this\n    //tx.hash = keccak256(concat([ \"0x03\", encodeRlp(fields) ]));\n    _parseEipSignature(tx, fields.slice(11));\n    return tx;\n}\nfunction _serializeEip4844(tx, sig, blobs) {\n    const fields = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || ZeroAddress),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || []),\n        formatNumber(tx.maxFeePerBlobGas || 0, \"maxFeePerBlobGas\"),\n        formatHashes(tx.blobVersionedHashes || [], \"blobVersionedHashes\")\n    ];\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n        // We have blobs; return the network wrapped format\n        if (blobs) {\n            return concat([\n                \"0x03\",\n                encodeRlp([\n                    fields,\n                    blobs.map((b) => b.data),\n                    blobs.map((b) => b.commitment),\n                    blobs.map((b) => b.proof),\n                ])\n            ]);\n        }\n    }\n    return concat([\"0x03\", encodeRlp(fields)]);\n}\n/**\n *  A **Transaction** describes an operation to be executed on\n *  Ethereum by an Externally Owned Account (EOA). It includes\n *  who (the [[to]] address), what (the [[data]]) and how much (the\n *  [[value]] in ether) the operation should entail.\n *\n *  @example:\n *    tx = new Transaction()\n *    //_result:\n *\n *    tx.data = \"0x1234\";\n *    //_result:\n */\nexport class Transaction {\n    #type;\n    #to;\n    #data;\n    #nonce;\n    #gasLimit;\n    #gasPrice;\n    #maxPriorityFeePerGas;\n    #maxFeePerGas;\n    #value;\n    #chainId;\n    #sig;\n    #accessList;\n    #maxFeePerBlobGas;\n    #blobVersionedHashes;\n    #kzg;\n    #blobs;\n    /**\n     *  The transaction type.\n     *\n     *  If null, the type will be automatically inferred based on\n     *  explicit properties.\n     */\n    get type() { return this.#type; }\n    set type(value) {\n        switch (value) {\n            case null:\n                this.#type = null;\n                break;\n            case 0:\n            case \"legacy\":\n                this.#type = 0;\n                break;\n            case 1:\n            case \"berlin\":\n            case \"eip-2930\":\n                this.#type = 1;\n                break;\n            case 2:\n            case \"london\":\n            case \"eip-1559\":\n                this.#type = 2;\n                break;\n            case 3:\n            case \"cancun\":\n            case \"eip-4844\":\n                this.#type = 3;\n                break;\n            default:\n                assertArgument(false, \"unsupported transaction type\", \"type\", value);\n        }\n    }\n    /**\n     *  The name of the transaction type.\n     */\n    get typeName() {\n        switch (this.type) {\n            case 0: return \"legacy\";\n            case 1: return \"eip-2930\";\n            case 2: return \"eip-1559\";\n            case 3: return \"eip-4844\";\n        }\n        return null;\n    }\n    /**\n     *  The ``to`` address for the transaction or ``null`` if the\n     *  transaction is an ``init`` transaction.\n     */\n    get to() {\n        const value = this.#to;\n        if (value == null && this.type === 3) {\n            return ZeroAddress;\n        }\n        return value;\n    }\n    set to(value) {\n        this.#to = (value == null) ? null : getAddress(value);\n    }\n    /**\n     *  The transaction nonce.\n     */\n    get nonce() { return this.#nonce; }\n    set nonce(value) { this.#nonce = getNumber(value, \"value\"); }\n    /**\n     *  The gas limit.\n     */\n    get gasLimit() { return this.#gasLimit; }\n    set gasLimit(value) { this.#gasLimit = getBigInt(value); }\n    /**\n     *  The gas price.\n     *\n     *  On legacy networks this defines the fee that will be paid. On\n     *  EIP-1559 networks, this should be ``null``.\n     */\n    get gasPrice() {\n        const value = this.#gasPrice;\n        if (value == null && (this.type === 0 || this.type === 1)) {\n            return BN_0;\n        }\n        return value;\n    }\n    set gasPrice(value) {\n        this.#gasPrice = (value == null) ? null : getBigInt(value, \"gasPrice\");\n    }\n    /**\n     *  The maximum priority fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxPriorityFeePerGas() {\n        const value = this.#maxPriorityFeePerGas;\n        if (value == null) {\n            if (this.type === 2 || this.type === 3) {\n                return BN_0;\n            }\n            return null;\n        }\n        return value;\n    }\n    set maxPriorityFeePerGas(value) {\n        this.#maxPriorityFeePerGas = (value == null) ? null : getBigInt(value, \"maxPriorityFeePerGas\");\n    }\n    /**\n     *  The maximum total fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxFeePerGas() {\n        const value = this.#maxFeePerGas;\n        if (value == null) {\n            if (this.type === 2 || this.type === 3) {\n                return BN_0;\n            }\n            return null;\n        }\n        return value;\n    }\n    set maxFeePerGas(value) {\n        this.#maxFeePerGas = (value == null) ? null : getBigInt(value, \"maxFeePerGas\");\n    }\n    /**\n     *  The transaction data. For ``init`` transactions this is the\n     *  deployment code.\n     */\n    get data() { return this.#data; }\n    set data(value) { this.#data = hexlify(value); }\n    /**\n     *  The amount of ether (in wei) to send in this transactions.\n     */\n    get value() { return this.#value; }\n    set value(value) {\n        this.#value = getBigInt(value, \"value\");\n    }\n    /**\n     *  The chain ID this transaction is valid on.\n     */\n    get chainId() { return this.#chainId; }\n    set chainId(value) { this.#chainId = getBigInt(value); }\n    /**\n     *  If signed, the signature for this transaction.\n     */\n    get signature() { return this.#sig || null; }\n    set signature(value) {\n        this.#sig = (value == null) ? null : Signature.from(value);\n    }\n    /**\n     *  The access list.\n     *\n     *  An access list permits discounted (but pre-paid) access to\n     *  bytecode and state variable access within contract execution.\n     */\n    get accessList() {\n        const value = this.#accessList || null;\n        if (value == null) {\n            if (this.type === 1 || this.type === 2 || this.type === 3) {\n                // @TODO: in v7, this should assign the value or become\n                // a live object itself, otherwise mutation is inconsistent\n                return [];\n            }\n            return null;\n        }\n        return value;\n    }\n    set accessList(value) {\n        this.#accessList = (value == null) ? null : accessListify(value);\n    }\n    /**\n     *  The max fee per blob gas for Cancun transactions.\n     */\n    get maxFeePerBlobGas() {\n        const value = this.#maxFeePerBlobGas;\n        if (value == null && this.type === 3) {\n            return BN_0;\n        }\n        return value;\n    }\n    set maxFeePerBlobGas(value) {\n        this.#maxFeePerBlobGas = (value == null) ? null : getBigInt(value, \"maxFeePerBlobGas\");\n    }\n    /**\n     *  The BLOb versioned hashes for Cancun transactions.\n     */\n    get blobVersionedHashes() {\n        // @TODO: Mutation is inconsistent; if unset, the returned value\n        // cannot mutate the object, if set it can\n        let value = this.#blobVersionedHashes;\n        if (value == null && this.type === 3) {\n            return [];\n        }\n        return value;\n    }\n    set blobVersionedHashes(value) {\n        if (value != null) {\n            assertArgument(Array.isArray(value), \"blobVersionedHashes must be an Array\", \"value\", value);\n            value = value.slice();\n            for (let i = 0; i < value.length; i++) {\n                assertArgument(isHexString(value[i], 32), \"invalid blobVersionedHash\", `value[${i}]`, value[i]);\n            }\n        }\n        this.#blobVersionedHashes = value;\n    }\n    /**\n     *  The BLObs for the Transaction, if any.\n     *\n     *  If ``blobs`` is non-``null``, then the [[seriailized]]\n     *  will return the network formatted sidecar, otherwise it\n     *  will return the standard [[link-eip-2718]] payload. The\n     *  [[unsignedSerialized]] is unaffected regardless.\n     *\n     *  When setting ``blobs``, either fully valid [[Blob]] objects\n     *  may be specified (i.e. correctly padded, with correct\n     *  committments and proofs) or a raw [[BytesLike]] may\n     *  be provided.\n     *\n     *  If raw [[BytesLike]] are provided, the [[kzg]] property **must**\n     *  be already set. The blob will be correctly padded and the\n     *  [[KzgLibrary]] will be used to compute the committment and\n     *  proof for the blob.\n     *\n     *  A BLOb is a sequence of field elements, each of which must\n     *  be within the BLS field modulo, so some additional processing\n     *  may be required to encode arbitrary data to ensure each 32 byte\n     *  field is within the valid range.\n     *\n     *  Setting this automatically populates [[blobVersionedHashes]],\n     *  overwriting any existing values. Setting this to ``null``\n     *  does **not** remove the [[blobVersionedHashes]], leaving them\n     *  present.\n     */\n    get blobs() {\n        if (this.#blobs == null) {\n            return null;\n        }\n        return this.#blobs.map((b) => Object.assign({}, b));\n    }\n    set blobs(_blobs) {\n        if (_blobs == null) {\n            this.#blobs = null;\n            return;\n        }\n        const blobs = [];\n        const versionedHashes = [];\n        for (let i = 0; i < _blobs.length; i++) {\n            const blob = _blobs[i];\n            if (isBytesLike(blob)) {\n                assert(this.#kzg, \"adding a raw blob requires a KZG library\", \"UNSUPPORTED_OPERATION\", {\n                    operation: \"set blobs()\"\n                });\n                let data = getBytes(blob);\n                assertArgument(data.length <= BLOB_SIZE, \"blob is too large\", `blobs[${i}]`, blob);\n                // Pad blob if necessary\n                if (data.length !== BLOB_SIZE) {\n                    const padded = new Uint8Array(BLOB_SIZE);\n                    padded.set(data);\n                    data = padded;\n                }\n                const commit = this.#kzg.blobToKzgCommitment(data);\n                const proof = hexlify(this.#kzg.computeBlobKzgProof(data, commit));\n                blobs.push({\n                    data: hexlify(data),\n                    commitment: hexlify(commit),\n                    proof\n                });\n                versionedHashes.push(getVersionedHash(1, commit));\n            }\n            else {\n                const commit = hexlify(blob.commitment);\n                blobs.push({\n                    data: hexlify(blob.data),\n                    commitment: commit,\n                    proof: hexlify(blob.proof)\n                });\n                versionedHashes.push(getVersionedHash(1, commit));\n            }\n        }\n        this.#blobs = blobs;\n        this.#blobVersionedHashes = versionedHashes;\n    }\n    get kzg() { return this.#kzg; }\n    set kzg(kzg) {\n        this.#kzg = kzg;\n    }\n    /**\n     *  Creates a new Transaction with default values.\n     */\n    constructor() {\n        this.#type = null;\n        this.#to = null;\n        this.#nonce = 0;\n        this.#gasLimit = BN_0;\n        this.#gasPrice = null;\n        this.#maxPriorityFeePerGas = null;\n        this.#maxFeePerGas = null;\n        this.#data = \"0x\";\n        this.#value = BN_0;\n        this.#chainId = BN_0;\n        this.#sig = null;\n        this.#accessList = null;\n        this.#maxFeePerBlobGas = null;\n        this.#blobVersionedHashes = null;\n        this.#blobs = null;\n        this.#kzg = null;\n    }\n    /**\n     *  The transaction hash, if signed. Otherwise, ``null``.\n     */\n    get hash() {\n        if (this.signature == null) {\n            return null;\n        }\n        return keccak256(this.#getSerialized(true, false));\n    }\n    /**\n     *  The pre-image hash of this transaction.\n     *\n     *  This is the digest that a [[Signer]] must sign to authorize\n     *  this transaction.\n     */\n    get unsignedHash() {\n        return keccak256(this.unsignedSerialized);\n    }\n    /**\n     *  The sending address, if signed. Otherwise, ``null``.\n     */\n    get from() {\n        if (this.signature == null) {\n            return null;\n        }\n        return recoverAddress(this.unsignedHash, this.signature);\n    }\n    /**\n     *  The public key of the sender, if signed. Otherwise, ``null``.\n     */\n    get fromPublicKey() {\n        if (this.signature == null) {\n            return null;\n        }\n        return SigningKey.recoverPublicKey(this.unsignedHash, this.signature);\n    }\n    /**\n     *  Returns true if signed.\n     *\n     *  This provides a Type Guard that properties requiring a signed\n     *  transaction are non-null.\n     */\n    isSigned() {\n        return this.signature != null;\n    }\n    #getSerialized(signed, sidecar) {\n        assert(!signed || this.signature != null, \"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\" });\n        const sig = signed ? this.signature : null;\n        switch (this.inferType()) {\n            case 0:\n                return _serializeLegacy(this, sig);\n            case 1:\n                return _serializeEip2930(this, sig);\n            case 2:\n                return _serializeEip1559(this, sig);\n            case 3:\n                return _serializeEip4844(this, sig, sidecar ? this.blobs : null);\n        }\n        assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\" });\n    }\n    /**\n     *  The serialized transaction.\n     *\n     *  This throws if the transaction is unsigned. For the pre-image,\n     *  use [[unsignedSerialized]].\n     */\n    get serialized() {\n        return this.#getSerialized(true, true);\n    }\n    /**\n     *  The transaction pre-image.\n     *\n     *  The hash of this is the digest which needs to be signed to\n     *  authorize this transaction.\n     */\n    get unsignedSerialized() {\n        return this.#getSerialized(false, false);\n    }\n    /**\n     *  Return the most \"likely\" type; currently the highest\n     *  supported transaction type.\n     */\n    inferType() {\n        const types = this.inferTypes();\n        // Prefer London (EIP-1559) over Cancun (BLOb)\n        if (types.indexOf(2) >= 0) {\n            return 2;\n        }\n        // Return the highest inferred type\n        return (types.pop());\n    }\n    /**\n     *  Validates the explicit properties and returns a list of compatible\n     *  transaction types.\n     */\n    inferTypes() {\n        // Checks that there are no conflicting properties set\n        const hasGasPrice = this.gasPrice != null;\n        const hasFee = (this.maxFeePerGas != null || this.maxPriorityFeePerGas != null);\n        const hasAccessList = (this.accessList != null);\n        const hasBlob = (this.#maxFeePerBlobGas != null || this.#blobVersionedHashes);\n        //if (hasGasPrice && hasFee) {\n        //    throw new Error(\"transaction cannot have gasPrice and maxFeePerGas\");\n        //}\n        if (this.maxFeePerGas != null && this.maxPriorityFeePerGas != null) {\n            assert(this.maxFeePerGas >= this.maxPriorityFeePerGas, \"priorityFee cannot be more than maxFee\", \"BAD_DATA\", { value: this });\n        }\n        //if (this.type === 2 && hasGasPrice) {\n        //    throw new Error(\"eip-1559 transaction cannot have gasPrice\");\n        //}\n        assert(!hasFee || (this.type !== 0 && this.type !== 1), \"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas\", \"BAD_DATA\", { value: this });\n        assert(this.type !== 0 || !hasAccessList, \"legacy transaction cannot have accessList\", \"BAD_DATA\", { value: this });\n        const types = [];\n        // Explicit type\n        if (this.type != null) {\n            types.push(this.type);\n        }\n        else {\n            if (hasFee) {\n                types.push(2);\n            }\n            else if (hasGasPrice) {\n                types.push(1);\n                if (!hasAccessList) {\n                    types.push(0);\n                }\n            }\n            else if (hasAccessList) {\n                types.push(1);\n                types.push(2);\n            }\n            else if (hasBlob && this.to) {\n                types.push(3);\n            }\n            else {\n                types.push(0);\n                types.push(1);\n                types.push(2);\n                types.push(3);\n            }\n        }\n        types.sort();\n        return types;\n    }\n    /**\n     *  Returns true if this transaction is a legacy transaction (i.e.\n     *  ``type === 0``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLegacy() {\n        return (this.type === 0);\n    }\n    /**\n     *  Returns true if this transaction is berlin hardform transaction (i.e.\n     *  ``type === 1``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isBerlin() {\n        return (this.type === 1);\n    }\n    /**\n     *  Returns true if this transaction is london hardform transaction (i.e.\n     *  ``type === 2``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLondon() {\n        return (this.type === 2);\n    }\n    /**\n     *  Returns true if this transaction is an [[link-eip-4844]] BLOB\n     *  transaction.\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isCancun() {\n        return (this.type === 3);\n    }\n    /**\n     *  Create a copy of this transaciton.\n     */\n    clone() {\n        return Transaction.from(this);\n    }\n    /**\n     *  Return a JSON-friendly object.\n     */\n    toJSON() {\n        const s = (v) => {\n            if (v == null) {\n                return null;\n            }\n            return v.toString();\n        };\n        return {\n            type: this.type,\n            to: this.to,\n            //            from: this.from,\n            data: this.data,\n            nonce: this.nonce,\n            gasLimit: s(this.gasLimit),\n            gasPrice: s(this.gasPrice),\n            maxPriorityFeePerGas: s(this.maxPriorityFeePerGas),\n            maxFeePerGas: s(this.maxFeePerGas),\n            value: s(this.value),\n            chainId: s(this.chainId),\n            sig: this.signature ? this.signature.toJSON() : null,\n            accessList: this.accessList\n        };\n    }\n    /**\n     *  Create a **Transaction** from a serialized transaction or a\n     *  Transaction-like object.\n     */\n    static from(tx) {\n        if (tx == null) {\n            return new Transaction();\n        }\n        if (typeof (tx) === \"string\") {\n            const payload = getBytes(tx);\n            if (payload[0] >= 0x7f) { // @TODO: > vs >= ??\n                return Transaction.from(_parseLegacy(payload));\n            }\n            switch (payload[0]) {\n                case 1: return Transaction.from(_parseEip2930(payload));\n                case 2: return Transaction.from(_parseEip1559(payload));\n                case 3: return Transaction.from(_parseEip4844(payload));\n            }\n            assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \"from\" });\n        }\n        const result = new Transaction();\n        if (tx.type != null) {\n            result.type = tx.type;\n        }\n        if (tx.to != null) {\n            result.to = tx.to;\n        }\n        if (tx.nonce != null) {\n            result.nonce = tx.nonce;\n        }\n        if (tx.gasLimit != null) {\n            result.gasLimit = tx.gasLimit;\n        }\n        if (tx.gasPrice != null) {\n            result.gasPrice = tx.gasPrice;\n        }\n        if (tx.maxPriorityFeePerGas != null) {\n            result.maxPriorityFeePerGas = tx.maxPriorityFeePerGas;\n        }\n        if (tx.maxFeePerGas != null) {\n            result.maxFeePerGas = tx.maxFeePerGas;\n        }\n        if (tx.maxFeePerBlobGas != null) {\n            result.maxFeePerBlobGas = tx.maxFeePerBlobGas;\n        }\n        if (tx.data != null) {\n            result.data = tx.data;\n        }\n        if (tx.value != null) {\n            result.value = tx.value;\n        }\n        if (tx.chainId != null) {\n            result.chainId = tx.chainId;\n        }\n        if (tx.signature != null) {\n            result.signature = Signature.from(tx.signature);\n        }\n        if (tx.accessList != null) {\n            result.accessList = tx.accessList;\n        }\n        // This will get overwritten by blobs, if present\n        if (tx.blobVersionedHashes != null) {\n            result.blobVersionedHashes = tx.blobVersionedHashes;\n        }\n        // Make sure we assign the kzg before assigning blobs, which\n        // require the library in the event raw blob data is provided.\n        if (tx.kzg != null) {\n            result.kzg = tx.kzg;\n        }\n        if (tx.blobs != null) {\n            result.blobs = tx.blobs;\n        }\n        if (tx.hash != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define '.hash'\", \"tx\", tx);\n            assertArgument(result.hash === tx.hash, \"hash mismatch\", \"tx\", tx);\n        }\n        if (tx.from != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define '.from'\", \"tx\", tx);\n            assertArgument(result.from.toLowerCase() === (tx.from || \"\").toLowerCase(), \"from mismatch\", \"tx\", tx);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=transaction.js.map","/**\n *  The [Base58 Encoding](link-base58) scheme allows a **numeric** value\n *  to be encoded as a compact string using a radix of 58 using only\n *  alpha-numeric characters. Confusingly similar characters are omitted\n *  (i.e. ``\"l0O\"``).\n *\n *  Note that Base58 encodes a **numeric** value, not arbitrary bytes,\n *  since any zero-bytes on the left would get removed. To mitigate this\n *  issue most schemes that use Base58 choose specific high-order values\n *  to ensure non-zero prefixes.\n *\n *  @_subsection: api/utils:Base58 Encoding [about-base58]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument } from \"./errors.js\";\nimport { toBigInt } from \"./maths.js\";\nconst Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nlet Lookup = null;\nfunction getAlpha(letter) {\n    if (Lookup == null) {\n        Lookup = {};\n        for (let i = 0; i < Alphabet.length; i++) {\n            Lookup[Alphabet[i]] = BigInt(i);\n        }\n    }\n    const result = Lookup[letter];\n    assertArgument(result != null, `invalid base58 value`, \"letter\", letter);\n    return result;\n}\nconst BN_0 = BigInt(0);\nconst BN_58 = BigInt(58);\n/**\n *  Encode %%value%% as a Base58-encoded string.\n */\nexport function encodeBase58(_value) {\n    const bytes = getBytes(_value);\n    let value = toBigInt(bytes);\n    let result = \"\";\n    while (value) {\n        result = Alphabet[Number(value % BN_58)] + result;\n        value /= BN_58;\n    }\n    // Account for leading padding zeros\n    for (let i = 0; i < bytes.length; i++) {\n        if (bytes[i]) {\n            break;\n        }\n        result = Alphabet[0] + result;\n    }\n    return result;\n}\n/**\n *  Decode the Base58-encoded %%value%%.\n */\nexport function decodeBase58(value) {\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result *= BN_58;\n        result += getAlpha(value[i]);\n    }\n    return result;\n}\n//# sourceMappingURL=base58.js.map","/**\n *  ENS is a service which allows easy-to-remember names to map to\n *  network addresses.\n *\n *  @_section: api/providers/ens-resolver:ENS Resolver  [about-ens-rsolver]\n */\nimport { getAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { dnsEncode, namehash } from \"../hash/index.js\";\nimport { hexlify, isHexString, toBeHex, defineProperties, encodeBase58, assert, assertArgument, isError, FetchRequest } from \"../utils/index.js\";\n// @TODO: This should use the fetch-data:ipfs gateway\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link) {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    }\n    else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    }\n    else {\n        assertArgument(false, \"unsupported IPFS format\", \"link\", link);\n    }\n    return `https:/\\/gateway.ipfs.io/ipfs/${link}`;\n}\n;\n;\n/**\n *  A provider plugin super-class for processing multicoin address types.\n */\nexport class MulticoinProviderPlugin {\n    /**\n     *  The name.\n     */\n    name;\n    /**\n     *  Creates a new **MulticoinProviderPluing** for %%name%%.\n     */\n    constructor(name) {\n        defineProperties(this, { name });\n    }\n    connect(proivder) {\n        return this;\n    }\n    /**\n     *  Returns ``true`` if %%coinType%% is supported by this plugin.\n     */\n    supportsCoinType(coinType) {\n        return false;\n    }\n    /**\n     *  Resolves to the encoded %%address%% for %%coinType%%.\n     */\n    async encodeAddress(coinType, address) {\n        throw new Error(\"unsupported coin\");\n    }\n    /**\n     *  Resolves to the decoded %%data%% for %%coinType%%.\n     */\n    async decodeAddress(coinType, data) {\n        throw new Error(\"unsupported coin\");\n    }\n}\nconst BasicMulticoinPluginId = \"org.ethers.plugins.provider.BasicMulticoin\";\n/**\n *  A **BasicMulticoinProviderPlugin** provides service for common\n *  coin types, which do not require additional libraries to encode or\n *  decode.\n */\nexport class BasicMulticoinProviderPlugin extends MulticoinProviderPlugin {\n    /**\n     *  Creates a new **BasicMulticoinProviderPlugin**.\n     */\n    constructor() {\n        super(BasicMulticoinPluginId);\n    }\n}\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n/**\n *  A connected object to a resolved ENS name resolver, which can be\n *  used to query additional details.\n */\nexport class EnsResolver {\n    /**\n     *  The connected provider.\n     */\n    provider;\n    /**\n     *  The address of the resolver.\n     */\n    address;\n    /**\n     *  The name this resolver was resolved against.\n     */\n    name;\n    // For EIP-2544 names, the ancestor that provided the resolver\n    #supports2544;\n    #resolver;\n    constructor(provider, address, name) {\n        defineProperties(this, { provider, address, name });\n        this.#supports2544 = null;\n        this.#resolver = new Contract(address, [\n            \"function supportsInterface(bytes4) view returns (bool)\",\n            \"function resolve(bytes, bytes) view returns (bytes)\",\n            \"function addr(bytes32) view returns (address)\",\n            \"function addr(bytes32, uint) view returns (bytes)\",\n            \"function text(bytes32, string) view returns (string)\",\n            \"function contenthash(bytes32) view returns (bytes)\",\n        ], provider);\n    }\n    /**\n     *  Resolves to true if the resolver supports wildcard resolution.\n     */\n    async supportsWildcard() {\n        if (this.#supports2544 == null) {\n            this.#supports2544 = (async () => {\n                try {\n                    return await this.#resolver.supportsInterface(\"0x9061b923\");\n                }\n                catch (error) {\n                    // Wildcard resolvers must understand supportsInterface\n                    // and return true.\n                    if (isError(error, \"CALL_EXCEPTION\")) {\n                        return false;\n                    }\n                    // Let future attempts try again...\n                    this.#supports2544 = null;\n                    throw error;\n                }\n            })();\n        }\n        return await this.#supports2544;\n    }\n    async #fetch(funcName, params) {\n        params = (params || []).slice();\n        const iface = this.#resolver.interface;\n        // The first parameters is always the nodehash\n        params.unshift(namehash(this.name));\n        let fragment = null;\n        if (await this.supportsWildcard()) {\n            fragment = iface.getFunction(funcName);\n            assert(fragment, \"missing fragment\", \"UNKNOWN_ERROR\", {\n                info: { funcName }\n            });\n            params = [\n                dnsEncode(this.name, 255),\n                iface.encodeFunctionData(fragment, params)\n            ];\n            funcName = \"resolve(bytes,bytes)\";\n        }\n        params.push({\n            enableCcipRead: true\n        });\n        try {\n            const result = await this.#resolver[funcName](...params);\n            if (fragment) {\n                return iface.decodeFunctionResult(fragment, result)[0];\n            }\n            return result;\n        }\n        catch (error) {\n            if (!isError(error, \"CALL_EXCEPTION\")) {\n                throw error;\n            }\n        }\n        return null;\n    }\n    /**\n     *  Resolves to the address for %%coinType%% or null if the\n     *  provided %%coinType%% has not been configured.\n     */\n    async getAddress(coinType) {\n        if (coinType == null) {\n            coinType = 60;\n        }\n        if (coinType === 60) {\n            try {\n                const result = await this.#fetch(\"addr(bytes32)\");\n                // No address\n                if (result == null || result === ZeroAddress) {\n                    return null;\n                }\n                return result;\n            }\n            catch (error) {\n                if (isError(error, \"CALL_EXCEPTION\")) {\n                    return null;\n                }\n                throw error;\n            }\n        }\n        // Try decoding its EVM canonical chain as an EVM chain address first\n        if (coinType >= 0 && coinType < 0x80000000) {\n            let ethCoinType = coinType + 0x80000000;\n            const data = await this.#fetch(\"addr(bytes32,uint)\", [ethCoinType]);\n            if (isHexString(data, 20)) {\n                return getAddress(data);\n            }\n        }\n        let coinPlugin = null;\n        for (const plugin of this.provider.plugins) {\n            if (!(plugin instanceof MulticoinProviderPlugin)) {\n                continue;\n            }\n            if (plugin.supportsCoinType(coinType)) {\n                coinPlugin = plugin;\n                break;\n            }\n        }\n        if (coinPlugin == null) {\n            return null;\n        }\n        // keccak256(\"addr(bytes32,uint256\")\n        const data = await this.#fetch(\"addr(bytes32,uint)\", [coinType]);\n        // No address\n        if (data == null || data === \"0x\") {\n            return null;\n        }\n        // Compute the address\n        const address = await coinPlugin.decodeAddress(coinType, data);\n        if (address != null) {\n            return address;\n        }\n        assert(false, `invalid coin data`, \"UNSUPPORTED_OPERATION\", {\n            operation: `getAddress(${coinType})`,\n            info: { coinType, data }\n        });\n    }\n    /**\n     *  Resolves to the EIP-634 text record for %%key%%, or ``null``\n     *  if unconfigured.\n     */\n    async getText(key) {\n        const data = await this.#fetch(\"text(bytes32,string)\", [key]);\n        if (data == null || data === \"0x\") {\n            return null;\n        }\n        return data;\n    }\n    /**\n     *  Rsolves to the content-hash or ``null`` if unconfigured.\n     */\n    async getContentHash() {\n        // keccak256(\"contenthash()\")\n        const data = await this.#fetch(\"contenthash(bytes32)\");\n        // No contenthash\n        if (data == null || data === \"0x\") {\n            return null;\n        }\n        // IPFS (CID: 1, Type: 70=DAG-PB, 72=libp2p-key)\n        const ipfs = data.match(/^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const scheme = (ipfs[1] === \"e3010170\") ? \"ipfs\" : \"ipns\";\n            const length = parseInt(ipfs[4], 16);\n            if (ipfs[5].length === length * 2) {\n                return `${scheme}:/\\/${encodeBase58(\"0x\" + ipfs[2])}`;\n            }\n        }\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = data.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n        if (swarm && swarm[1].length === 64) {\n            return `bzz:/\\/${swarm[1]}`;\n        }\n        assert(false, `invalid or unsupported content hash data`, \"UNSUPPORTED_OPERATION\", {\n            operation: \"getContentHash()\",\n            info: { data }\n        });\n    }\n    /**\n     *  Resolves to the avatar url or ``null`` if the avatar is either\n     *  unconfigured or incorrectly configured (e.g. references an NFT\n     *  not owned by the address).\n     *\n     *  If diagnosing issues with configurations, the [[_getAvatar]]\n     *  method may be useful.\n     */\n    async getAvatar() {\n        const avatar = await this._getAvatar();\n        return avatar.url;\n    }\n    /**\n     *  When resolving an avatar, there are many steps involved, such\n     *  fetching metadata and possibly validating ownership of an\n     *  NFT.\n     *\n     *  This method can be used to examine each step and the value it\n     *  was working from.\n     */\n    async _getAvatar() {\n        const linkage = [{ type: \"name\", value: this.name }];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) {\n                linkage.push({ type: \"!avatar\", value: \"\" });\n                return { url: null, linkage };\n            }\n            linkage.push({ type: \"avatar\", value: avatar });\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) {\n                    continue;\n                }\n                const scheme = match[1].toLowerCase();\n                switch (scheme) {\n                    case \"https\":\n                    case \"data\":\n                        linkage.push({ type: \"url\", value: avatar });\n                        return { linkage, url: avatar };\n                    case \"ipfs\": {\n                        const url = getIpfsLink(avatar);\n                        linkage.push({ type: \"ipfs\", value: avatar });\n                        linkage.push({ type: \"url\", value: url });\n                        return { linkage, url };\n                    }\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"tokenURI(uint256)\" : \"uri(uint256)\";\n                        linkage.push({ type: scheme, value: avatar });\n                        // The owner of this name\n                        const owner = await this.getAddress();\n                        if (owner == null) {\n                            linkage.push({ type: \"!owner\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) {\n                            linkage.push({ type: `!${scheme}caip`, value: (match[2] || \"\") });\n                            return { url: null, linkage };\n                        }\n                        const tokenId = comps[1];\n                        const contract = new Contract(comps[0], [\n                            // ERC-721\n                            \"function tokenURI(uint) view returns (string)\",\n                            \"function ownerOf(uint) view returns (address)\",\n                            // ERC-1155\n                            \"function uri(uint) view returns (string)\",\n                            \"function balanceOf(address, uint256) view returns (uint)\"\n                        ], this.provider);\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            const tokenOwner = await contract.ownerOf(tokenId);\n                            if (owner !== tokenOwner) {\n                                linkage.push({ type: \"!owner\", value: tokenOwner });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"owner\", value: tokenOwner });\n                        }\n                        else if (scheme === \"erc1155\") {\n                            const balance = await contract.balanceOf(owner, tokenId);\n                            if (!balance) {\n                                linkage.push({ type: \"!balance\", value: \"0\" });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"balance\", value: balance.toString() });\n                        }\n                        // Call the token contract for the metadata URL\n                        let metadataUrl = await contract[selector](tokenId);\n                        if (metadataUrl == null || metadataUrl === \"0x\") {\n                            linkage.push({ type: \"!metadata-url\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n                        linkage.push({ type: \"metadata-url-base\", value: metadataUrl });\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", toBeHex(tokenId, 32).substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", value: metadataUrl });\n                        }\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n                        linkage.push({ type: \"metadata-url\", value: metadataUrl });\n                        // Get the token metadata\n                        let metadata = {};\n                        const response = await (new FetchRequest(metadataUrl)).send();\n                        response.assertOk();\n                        try {\n                            metadata = response.bodyJson;\n                        }\n                        catch (error) {\n                            try {\n                                linkage.push({ type: \"!metadata\", value: response.bodyText });\n                            }\n                            catch (error) {\n                                const bytes = response.body;\n                                if (bytes) {\n                                    linkage.push({ type: \"!metadata\", value: hexlify(bytes) });\n                                }\n                                return { url: null, linkage };\n                            }\n                            return { url: null, linkage };\n                        }\n                        if (!metadata) {\n                            linkage.push({ type: \"!metadata\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n                        linkage.push({ type: \"metadata\", value: JSON.stringify(metadata) });\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof (imageUrl) !== \"string\") {\n                            linkage.push({ type: \"!imageUrl\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        }\n                        else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) {\n                                linkage.push({ type: \"!imageUrl-ipfs\", value: imageUrl });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"imageUrl-ipfs\", value: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n                        linkage.push({ type: \"url\", value: imageUrl });\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        }\n        catch (error) { }\n        return { linkage, url: null };\n    }\n    static async getEnsAddress(provider) {\n        const network = await provider.getNetwork();\n        const ensPlugin = network.getPlugin(\"org.ethers.plugins.network.Ens\");\n        // No ENS...\n        assert(ensPlugin, \"network does not support ENS\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"getEnsAddress\", info: { network }\n        });\n        return ensPlugin.address;\n    }\n    static async #getResolver(provider, name) {\n        const ensAddr = await EnsResolver.getEnsAddress(provider);\n        try {\n            const contract = new Contract(ensAddr, [\n                \"function resolver(bytes32) view returns (address)\"\n            ], provider);\n            const addr = await contract.resolver(namehash(name), {\n                enableCcipRead: true\n            });\n            if (addr === ZeroAddress) {\n                return null;\n            }\n            return addr;\n        }\n        catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32),\n            // so probably a link error\n            throw error;\n        }\n        return null;\n    }\n    /**\n     *  Resolve to the ENS resolver for %%name%% using %%provider%% or\n     *  ``null`` if unconfigured.\n     */\n    static async fromName(provider, name) {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") {\n                return null;\n            }\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") {\n                return null;\n            }\n            // Check the current node for a resolver\n            const addr = await EnsResolver.#getResolver(provider, currentName);\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new EnsResolver(provider, addr, name);\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) {\n                    return null;\n                }\n                return resolver;\n            }\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n    }\n}\n//# sourceMappingURL=ens-resolver.js.map","/**\n *  @_ignore\n */\nimport { getAddress, getCreateAddress } from \"../address/index.js\";\nimport { Signature } from \"../crypto/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\nimport { getBigInt, getNumber, hexlify, isHexString, zeroPadValue, assert, assertArgument } from \"../utils/index.js\";\nconst BN_0 = BigInt(0);\nexport function allowNull(format, nullValue) {\n    return (function (value) {\n        if (value == null) {\n            return nullValue;\n        }\n        return format(value);\n    });\n}\nexport function arrayOf(format, allowNull) {\n    return ((array) => {\n        if (allowNull && array == null) {\n            return null;\n        }\n        if (!Array.isArray(array)) {\n            throw new Error(\"not an array\");\n        }\n        return array.map((i) => format(i));\n    });\n}\n// Requires an object which matches a fleet of other formatters\n// Any FormatFunc may return `undefined` to have the value omitted\n// from the result object. Calls preserve `this`.\nexport function object(format, altNames) {\n    return ((value) => {\n        const result = {};\n        for (const key in format) {\n            let srcKey = key;\n            if (altNames && key in altNames && !(srcKey in value)) {\n                for (const altKey of altNames[key]) {\n                    if (altKey in value) {\n                        srcKey = altKey;\n                        break;\n                    }\n                }\n            }\n            try {\n                const nv = format[key](value[srcKey]);\n                if (nv !== undefined) {\n                    result[key] = nv;\n                }\n            }\n            catch (error) {\n                const message = (error instanceof Error) ? error.message : \"not-an-error\";\n                assert(false, `invalid value for value.${key} (${message})`, \"BAD_DATA\", { value });\n            }\n        }\n        return result;\n    });\n}\nexport function formatBoolean(value) {\n    switch (value) {\n        case true:\n        case \"true\":\n            return true;\n        case false:\n        case \"false\":\n            return false;\n    }\n    assertArgument(false, `invalid boolean; ${JSON.stringify(value)}`, \"value\", value);\n}\nexport function formatData(value) {\n    assertArgument(isHexString(value, true), \"invalid data\", \"value\", value);\n    return value;\n}\nexport function formatHash(value) {\n    assertArgument(isHexString(value, 32), \"invalid hash\", \"value\", value);\n    return value;\n}\nexport function formatUint256(value) {\n    if (!isHexString(value)) {\n        throw new Error(\"invalid uint256\");\n    }\n    return zeroPadValue(value, 32);\n}\nconst _formatLog = object({\n    address: getAddress,\n    blockHash: formatHash,\n    blockNumber: getNumber,\n    data: formatData,\n    index: getNumber,\n    removed: allowNull(formatBoolean, false),\n    topics: arrayOf(formatHash),\n    transactionHash: formatHash,\n    transactionIndex: getNumber,\n}, {\n    index: [\"logIndex\"]\n});\nexport function formatLog(value) {\n    return _formatLog(value);\n}\nconst _formatBlock = object({\n    hash: allowNull(formatHash),\n    parentHash: formatHash,\n    parentBeaconBlockRoot: allowNull(formatHash, null),\n    number: getNumber,\n    timestamp: getNumber,\n    nonce: allowNull(formatData),\n    difficulty: getBigInt,\n    gasLimit: getBigInt,\n    gasUsed: getBigInt,\n    stateRoot: allowNull(formatHash, null),\n    receiptsRoot: allowNull(formatHash, null),\n    blobGasUsed: allowNull(getBigInt, null),\n    excessBlobGas: allowNull(getBigInt, null),\n    miner: allowNull(getAddress),\n    prevRandao: allowNull(formatHash, null),\n    extraData: formatData,\n    baseFeePerGas: allowNull(getBigInt)\n}, {\n    prevRandao: [\"mixHash\"]\n});\nexport function formatBlock(value) {\n    const result = _formatBlock(value);\n    result.transactions = value.transactions.map((tx) => {\n        if (typeof (tx) === \"string\") {\n            return tx;\n        }\n        return formatTransactionResponse(tx);\n    });\n    return result;\n}\nconst _formatReceiptLog = object({\n    transactionIndex: getNumber,\n    blockNumber: getNumber,\n    transactionHash: formatHash,\n    address: getAddress,\n    topics: arrayOf(formatHash),\n    data: formatData,\n    index: getNumber,\n    blockHash: formatHash,\n}, {\n    index: [\"logIndex\"]\n});\nexport function formatReceiptLog(value) {\n    return _formatReceiptLog(value);\n}\nconst _formatTransactionReceipt = object({\n    to: allowNull(getAddress, null),\n    from: allowNull(getAddress, null),\n    contractAddress: allowNull(getAddress, null),\n    // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n    index: getNumber,\n    root: allowNull(hexlify),\n    gasUsed: getBigInt,\n    blobGasUsed: allowNull(getBigInt, null),\n    logsBloom: allowNull(formatData),\n    blockHash: formatHash,\n    hash: formatHash,\n    logs: arrayOf(formatReceiptLog),\n    blockNumber: getNumber,\n    //confirmations: allowNull(getNumber, null),\n    cumulativeGasUsed: getBigInt,\n    effectiveGasPrice: allowNull(getBigInt),\n    blobGasPrice: allowNull(getBigInt, null),\n    status: allowNull(getNumber),\n    type: allowNull(getNumber, 0)\n}, {\n    effectiveGasPrice: [\"gasPrice\"],\n    hash: [\"transactionHash\"],\n    index: [\"transactionIndex\"],\n});\nexport function formatTransactionReceipt(value) {\n    return _formatTransactionReceipt(value);\n}\nexport function formatTransactionResponse(value) {\n    // Some clients (TestRPC) do strange things like return 0x0 for the\n    // 0 address; correct this to be a real address\n    if (value.to && getBigInt(value.to) === BN_0) {\n        value.to = \"0x0000000000000000000000000000000000000000\";\n    }\n    const result = object({\n        hash: formatHash,\n        // Some nodes do not return this, usually test nodes (like Ganache)\n        index: allowNull(getNumber, undefined),\n        type: (value) => {\n            if (value === \"0x\" || value == null) {\n                return 0;\n            }\n            return getNumber(value);\n        },\n        accessList: allowNull(accessListify, null),\n        blobVersionedHashes: allowNull(arrayOf(formatHash, true), null),\n        blockHash: allowNull(formatHash, null),\n        blockNumber: allowNull(getNumber, null),\n        transactionIndex: allowNull(getNumber, null),\n        from: getAddress,\n        // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas) must be set\n        gasPrice: allowNull(getBigInt),\n        maxPriorityFeePerGas: allowNull(getBigInt),\n        maxFeePerGas: allowNull(getBigInt),\n        maxFeePerBlobGas: allowNull(getBigInt, null),\n        gasLimit: getBigInt,\n        to: allowNull(getAddress, null),\n        value: getBigInt,\n        nonce: getNumber,\n        data: formatData,\n        creates: allowNull(getAddress, null),\n        chainId: allowNull(getBigInt, null)\n    }, {\n        data: [\"input\"],\n        gasLimit: [\"gas\"],\n        index: [\"transactionIndex\"]\n    })(value);\n    // If to and creates are empty, populate the creates from the value\n    if (result.to == null && result.creates == null) {\n        result.creates = getCreateAddress(result);\n    }\n    // @TODO: Check fee data\n    // Add an access list to supported transaction types\n    if ((value.type === 1 || value.type === 2) && value.accessList == null) {\n        result.accessList = [];\n    }\n    // Compute the signature\n    if (value.signature) {\n        result.signature = Signature.from(value.signature);\n    }\n    else {\n        result.signature = Signature.from(value);\n    }\n    // Some backends omit ChainId on legacy transactions, but we can compute it\n    if (result.chainId == null) {\n        const chainId = result.signature.legacyChainId;\n        if (chainId != null) {\n            result.chainId = chainId;\n        }\n    }\n    // @TODO: check chainID\n    /*\n    if (value.chainId != null) {\n        let chainId = value.chainId;\n\n        if (isHexString(chainId)) {\n            chainId = BigNumber.from(chainId).toNumber();\n        }\n\n        result.chainId = chainId;\n\n    } else {\n        let chainId = value.networkId;\n\n        // geth-etc returns chainId\n        if (chainId == null && result.v == null) {\n            chainId = value.chainId;\n        }\n\n        if (isHexString(chainId)) {\n            chainId = BigNumber.from(chainId).toNumber();\n        }\n\n        if (typeof(chainId) !== \"number\" && result.v != null) {\n            chainId = (result.v - 35) / 2;\n            if (chainId < 0) { chainId = 0; }\n            chainId = parseInt(chainId);\n        }\n\n        if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n        result.chainId = chainId;\n    }\n    */\n    // 0x0000... should actually be null\n    if (result.blockHash && getBigInt(result.blockHash) === BN_0) {\n        result.blockHash = null;\n    }\n    return result;\n}\n//# sourceMappingURL=format.js.map","import { keccak256 } from \"../crypto/index.js\";\nimport { concat, dataSlice, getBigInt, getBytes, encodeRlp, assertArgument } from \"../utils/index.js\";\nimport { getAddress } from \"./address.js\";\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n/**\n *  Returns the address that would result from a ``CREATE`` for %%tx%%.\n *\n *  This can be used to compute the address a contract will be\n *  deployed to by an EOA when sending a deployment transaction (i.e.\n *  when the ``to`` address is ``null``).\n *\n *  This can also be used to compute the address a contract will be\n *  deployed to by a contract, by using the contract's address as the\n *  ``to`` and the contract's nonce.\n *\n *  @example\n *    from = \"0x8ba1f109551bD432803012645Ac136ddd64DBA72\";\n *    nonce = 5;\n *\n *    getCreateAddress({ from, nonce });\n *    //_result:\n */\nexport function getCreateAddress(tx) {\n    const from = getAddress(tx.from);\n    const nonce = getBigInt(tx.nonce, \"tx.nonce\");\n    let nonceHex = nonce.toString(16);\n    if (nonceHex === \"0\") {\n        nonceHex = \"0x\";\n    }\n    else if (nonceHex.length % 2) {\n        nonceHex = \"0x0\" + nonceHex;\n    }\n    else {\n        nonceHex = \"0x\" + nonceHex;\n    }\n    return getAddress(dataSlice(keccak256(encodeRlp([from, nonceHex])), 12));\n}\n/**\n *  Returns the address that would result from a ``CREATE2`` operation\n *  with the given %%from%%, %%salt%% and %%initCodeHash%%.\n *\n *  To compute the %%initCodeHash%% from a contract's init code, use\n *  the [[keccak256]] function.\n *\n *  For a quick overview and example of ``CREATE2``, see [[link-ricmoo-wisps]].\n *\n *  @example\n *    // The address of the contract\n *    from = \"0x8ba1f109551bD432803012645Ac136ddd64DBA72\"\n *\n *    // The salt\n *    salt = id(\"HelloWorld\")\n *\n *    // The hash of the initCode\n *    initCode = \"0x6394198df16000526103ff60206004601c335afa6040516060f3\";\n *    initCodeHash = keccak256(initCode)\n *\n *    getCreate2Address(from, salt, initCodeHash)\n *    //_result:\n */\nexport function getCreate2Address(_from, _salt, _initCodeHash) {\n    const from = getAddress(_from);\n    const salt = getBytes(_salt, \"salt\");\n    const initCodeHash = getBytes(_initCodeHash, \"initCodeHash\");\n    assertArgument(salt.length === 32, \"salt must be 32 bytes\", \"salt\", _salt);\n    assertArgument(initCodeHash.length === 32, \"initCodeHash must be 32 bytes\", \"initCodeHash\", _initCodeHash);\n    return getAddress(dataSlice(keccak256(concat([\"0xff\", from, salt, initCodeHash])), 12));\n}\n//# sourceMappingURL=contract-address.js.map","import { defineProperties } from \"../utils/properties.js\";\nimport { assertArgument } from \"../utils/index.js\";\nconst EnsAddress = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\n/**\n *  A **NetworkPlugin** provides additional functionality on a [[Network]].\n */\nexport class NetworkPlugin {\n    /**\n     *  The name of the plugin.\n     *\n     *  It is recommended to use reverse-domain-notation, which permits\n     *  unique names with a known authority as well as hierarchal entries.\n     */\n    name;\n    /**\n     *  Creates a new **NetworkPlugin**.\n     */\n    constructor(name) {\n        defineProperties(this, { name });\n    }\n    /**\n     *  Creates a copy of this plugin.\n     */\n    clone() {\n        return new NetworkPlugin(this.name);\n    }\n}\n/**\n *  A **GasCostPlugin** allows a network to provide alternative values when\n *  computing the intrinsic gas required for a transaction.\n */\nexport class GasCostPlugin extends NetworkPlugin {\n    /**\n     *  The block number to treat these values as valid from.\n     *\n     *  This allows a hardfork to have updated values included as well as\n     *  mulutiple hardforks to be supported.\n     */\n    effectiveBlock;\n    /**\n     *  The transactions base fee.\n     */\n    txBase;\n    /**\n     *  The fee for creating a new account.\n     */\n    txCreate;\n    /**\n     *  The fee per zero-byte in the data.\n     */\n    txDataZero;\n    /**\n     *  The fee per non-zero-byte in the data.\n     */\n    txDataNonzero;\n    /**\n     *  The fee per storage key in the [[link-eip-2930]] access list.\n     */\n    txAccessListStorageKey;\n    /**\n     *  The fee per address in the [[link-eip-2930]] access list.\n     */\n    txAccessListAddress;\n    /**\n     *  Creates a new GasCostPlugin from %%effectiveBlock%% until the\n     *  latest block or another GasCostPlugin supercedes that block number,\n     *  with the associated %%costs%%.\n     */\n    constructor(effectiveBlock, costs) {\n        if (effectiveBlock == null) {\n            effectiveBlock = 0;\n        }\n        super(`org.ethers.network.plugins.GasCost#${(effectiveBlock || 0)}`);\n        const props = { effectiveBlock };\n        function set(name, nullish) {\n            let value = (costs || {})[name];\n            if (value == null) {\n                value = nullish;\n            }\n            assertArgument(typeof (value) === \"number\", `invalud value for ${name}`, \"costs\", costs);\n            props[name] = value;\n        }\n        set(\"txBase\", 21000);\n        set(\"txCreate\", 32000);\n        set(\"txDataZero\", 4);\n        set(\"txDataNonzero\", 16);\n        set(\"txAccessListStorageKey\", 1900);\n        set(\"txAccessListAddress\", 2400);\n        defineProperties(this, props);\n    }\n    clone() {\n        return new GasCostPlugin(this.effectiveBlock, this);\n    }\n}\n/**\n *  An **EnsPlugin** allows a [[Network]] to specify the ENS Registry\n *  Contract address and the target network to use when using that\n *  contract.\n *\n *  Various testnets have their own instance of the contract to use, but\n *  in general, the mainnet instance supports multi-chain addresses and\n *  should be used.\n */\nexport class EnsPlugin extends NetworkPlugin {\n    /**\n     *  The ENS Registrty Contract address.\n     */\n    address;\n    /**\n     *  The chain ID that the ENS contract lives on.\n     */\n    targetNetwork;\n    /**\n     *  Creates a new **EnsPlugin** connected to %%address%% on the\n     *  %%targetNetwork%%. The default ENS address and mainnet is used\n     *  if unspecified.\n     */\n    constructor(address, targetNetwork) {\n        super(\"org.ethers.plugins.network.Ens\");\n        defineProperties(this, {\n            address: (address || EnsAddress),\n            targetNetwork: ((targetNetwork == null) ? 1 : targetNetwork)\n        });\n    }\n    clone() {\n        return new EnsPlugin(this.address, this.targetNetwork);\n    }\n}\n/**\n *  A **FeeDataNetworkPlugin** allows a network to provide and alternate\n *  means to specify its fee data.\n *\n *  For example, a network which does not support [[link-eip-1559]] may\n *  choose to use a Gas Station site to approximate the gas price.\n */\nexport class FeeDataNetworkPlugin extends NetworkPlugin {\n    #feeDataFunc;\n    /**\n     *  The fee data function provided to the constructor.\n     */\n    get feeDataFunc() {\n        return this.#feeDataFunc;\n    }\n    /**\n     *  Creates a new **FeeDataNetworkPlugin**.\n     */\n    constructor(feeDataFunc) {\n        super(\"org.ethers.plugins.network.FeeData\");\n        this.#feeDataFunc = feeDataFunc;\n    }\n    /**\n     *  Resolves to the fee data.\n     */\n    async getFeeData(provider) {\n        return await this.#feeDataFunc(provider);\n    }\n    clone() {\n        return new FeeDataNetworkPlugin(this.#feeDataFunc);\n    }\n}\nexport class FetchUrlFeeDataNetworkPlugin extends NetworkPlugin {\n    #url;\n    #processFunc;\n    /**\n     *  The URL to initialize the FetchRequest with in %%processFunc%%.\n     */\n    get url() { return this.#url; }\n    /**\n     *  The callback to use when computing the FeeData.\n     */\n    get processFunc() { return this.#processFunc; }\n    /**\n     *  Creates a new **FetchUrlFeeDataNetworkPlugin** which will\n     *  be used when computing the fee data for the network.\n     */\n    constructor(url, processFunc) {\n        super(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n        this.#url = url;\n        this.#processFunc = processFunc;\n    }\n    // We are immutable, so we can serve as our own clone\n    clone() { return this; }\n}\n/*\nexport class CustomBlockNetworkPlugin extends NetworkPlugin {\n    readonly #blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>;\n    readonly #blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>;\n\n    constructor(blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>, blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>) {\n        super(\"org.ethers.network-plugins.custom-block\");\n        this.#blockFunc = blockFunc;\n        this.#blockWithTxsFunc = blockWithTxsFunc;\n    }\n\n    async getBlock(provider: Provider, block: BlockParams<string>): Promise<Block<string>> {\n        return await this.#blockFunc(provider, block);\n    }\n\n    async getBlockions(provider: Provider, block: BlockParams<TransactionResponseParams>): Promise<Block<TransactionResponse>> {\n        return await this.#blockWithTxsFunc(provider, block);\n    }\n\n    clone(): CustomBlockNetworkPlugin {\n        return new CustomBlockNetworkPlugin(this.#blockFunc, this.#blockWithTxsFunc);\n    }\n}\n*/\n//# sourceMappingURL=plugins-network.js.map","/**\n *  A **Network** encapsulates the various properties required to\n *  interact with a specific chain.\n *\n *  @_subsection: api/providers:Networks  [networks]\n */\nimport { accessListify } from \"../transaction/index.js\";\nimport { getBigInt, assert, assertArgument } from \"../utils/index.js\";\nimport { EnsPlugin, FetchUrlFeeDataNetworkPlugin, GasCostPlugin } from \"./plugins-network.js\";\n/* * * *\n// Networks which operation against an L2 can use this plugin to\n// specify how to access L1, for the purpose of resolving ENS,\n// for example.\nexport class LayerOneConnectionPlugin extends NetworkPlugin {\n    readonly provider!: Provider;\n// @TODO: Rename to ChainAccess and allow for connecting to any chain\n    constructor(provider: Provider) {\n        super(\"org.ethers.plugins.layer-one-connection\");\n        defineProperties<LayerOneConnectionPlugin>(this, { provider });\n    }\n\n    clone(): LayerOneConnectionPlugin {\n        return new LayerOneConnectionPlugin(this.provider);\n    }\n}\n*/\nconst Networks = new Map();\n/**\n *  A **Network** provides access to a chain's properties and allows\n *  for plug-ins to extend functionality.\n */\nexport class Network {\n    #name;\n    #chainId;\n    #plugins;\n    /**\n     *  Creates a new **Network** for %%name%% and %%chainId%%.\n     */\n    constructor(name, chainId) {\n        this.#name = name;\n        this.#chainId = getBigInt(chainId);\n        this.#plugins = new Map();\n    }\n    /**\n     *  Returns a JSON-compatible representation of a Network.\n     */\n    toJSON() {\n        return { name: this.name, chainId: String(this.chainId) };\n    }\n    /**\n     *  The network common name.\n     *\n     *  This is the canonical name, as networks migh have multiple\n     *  names.\n     */\n    get name() { return this.#name; }\n    set name(value) { this.#name = value; }\n    /**\n     *  The network chain ID.\n     */\n    get chainId() { return this.#chainId; }\n    set chainId(value) { this.#chainId = getBigInt(value, \"chainId\"); }\n    /**\n     *  Returns true if %%other%% matches this network. Any chain ID\n     *  must match, and if no chain ID is present, the name must match.\n     *\n     *  This method does not currently check for additional properties,\n     *  such as ENS address or plug-in compatibility.\n     */\n    matches(other) {\n        if (other == null) {\n            return false;\n        }\n        if (typeof (other) === \"string\") {\n            try {\n                return (this.chainId === getBigInt(other));\n            }\n            catch (error) { }\n            return (this.name === other);\n        }\n        if (typeof (other) === \"number\" || typeof (other) === \"bigint\") {\n            try {\n                return (this.chainId === getBigInt(other));\n            }\n            catch (error) { }\n            return false;\n        }\n        if (typeof (other) === \"object\") {\n            if (other.chainId != null) {\n                try {\n                    return (this.chainId === getBigInt(other.chainId));\n                }\n                catch (error) { }\n                return false;\n            }\n            if (other.name != null) {\n                return (this.name === other.name);\n            }\n            return false;\n        }\n        return false;\n    }\n    /**\n     *  Returns the list of plugins currently attached to this Network.\n     */\n    get plugins() {\n        return Array.from(this.#plugins.values());\n    }\n    /**\n     *  Attach a new %%plugin%% to this Network. The network name\n     *  must be unique, excluding any fragment.\n     */\n    attachPlugin(plugin) {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${plugin.name} `);\n        }\n        this.#plugins.set(plugin.name, plugin.clone());\n        return this;\n    }\n    /**\n     *  Return the plugin, if any, matching %%name%% exactly. Plugins\n     *  with fragments will not be returned unless %%name%% includes\n     *  a fragment.\n     */\n    getPlugin(name) {\n        return (this.#plugins.get(name)) || null;\n    }\n    /**\n     *  Gets a list of all plugins that match %%name%%, with otr without\n     *  a fragment.\n     */\n    getPlugins(basename) {\n        return (this.plugins.filter((p) => (p.name.split(\"#\")[0] === basename)));\n    }\n    /**\n     *  Create a copy of this Network.\n     */\n    clone() {\n        const clone = new Network(this.name, this.chainId);\n        this.plugins.forEach((plugin) => {\n            clone.attachPlugin(plugin.clone());\n        });\n        return clone;\n    }\n    /**\n     *  Compute the intrinsic gas required for a transaction.\n     *\n     *  A GasCostPlugin can be attached to override the default\n     *  values.\n     */\n    computeIntrinsicGas(tx) {\n        const costs = this.getPlugin(\"org.ethers.plugins.network.GasCost\") || (new GasCostPlugin());\n        let gas = costs.txBase;\n        if (tx.to == null) {\n            gas += costs.txCreate;\n        }\n        if (tx.data) {\n            for (let i = 2; i < tx.data.length; i += 2) {\n                if (tx.data.substring(i, i + 2) === \"00\") {\n                    gas += costs.txDataZero;\n                }\n                else {\n                    gas += costs.txDataNonzero;\n                }\n            }\n        }\n        if (tx.accessList) {\n            const accessList = accessListify(tx.accessList);\n            for (const addr in accessList) {\n                gas += costs.txAccessListAddress + costs.txAccessListStorageKey * accessList[addr].storageKeys.length;\n            }\n        }\n        return gas;\n    }\n    /**\n     *  Returns a new Network for the %%network%% name or chainId.\n     */\n    static from(network) {\n        injectCommonNetworks();\n        // Default network\n        if (network == null) {\n            return Network.from(\"mainnet\");\n        }\n        // Canonical name or chain ID\n        if (typeof (network) === \"number\") {\n            network = BigInt(network);\n        }\n        if (typeof (network) === \"string\" || typeof (network) === \"bigint\") {\n            const networkFunc = Networks.get(network);\n            if (networkFunc) {\n                return networkFunc();\n            }\n            if (typeof (network) === \"bigint\") {\n                return new Network(\"unknown\", network);\n            }\n            assertArgument(false, \"unknown network\", \"network\", network);\n        }\n        // Clonable with network-like abilities\n        if (typeof (network.clone) === \"function\") {\n            const clone = network.clone();\n            //if (typeof(network.name) !== \"string\" || typeof(network.chainId) !== \"number\") {\n            //}\n            return clone;\n        }\n        // Networkish\n        if (typeof (network) === \"object\") {\n            assertArgument(typeof (network.name) === \"string\" && typeof (network.chainId) === \"number\", \"invalid network object name or chainId\", \"network\", network);\n            const custom = new Network((network.name), (network.chainId));\n            if (network.ensAddress || network.ensNetwork != null) {\n                custom.attachPlugin(new EnsPlugin(network.ensAddress, network.ensNetwork));\n            }\n            //if ((<any>network).layerOneConnection) {\n            //    custom.attachPlugin(new LayerOneConnectionPlugin((<any>network).layerOneConnection));\n            //}\n            return custom;\n        }\n        assertArgument(false, \"invalid network\", \"network\", network);\n    }\n    /**\n     *  Register %%nameOrChainId%% with a function which returns\n     *  an instance of a Network representing that chain.\n     */\n    static register(nameOrChainId, networkFunc) {\n        if (typeof (nameOrChainId) === \"number\") {\n            nameOrChainId = BigInt(nameOrChainId);\n        }\n        const existing = Networks.get(nameOrChainId);\n        if (existing) {\n            assertArgument(false, `conflicting network for ${JSON.stringify(existing.name)}`, \"nameOrChainId\", nameOrChainId);\n        }\n        Networks.set(nameOrChainId, networkFunc);\n    }\n}\n// We don't want to bring in formatUnits because it is backed by\n// FixedNumber and we want to keep Networks tiny. The values\n// included by the Gas Stations are also IEEE 754 with lots of\n// rounding issues and exceed the strict checks formatUnits has.\nfunction parseUnits(_value, decimals) {\n    const value = String(_value);\n    if (!value.match(/^[0-9.]+$/)) {\n        throw new Error(`invalid gwei value: ${_value}`);\n    }\n    // Break into [ whole, fraction ]\n    const comps = value.split(\".\");\n    if (comps.length === 1) {\n        comps.push(\"\");\n    }\n    // More than 1 decimal point or too many fractional positions\n    if (comps.length !== 2) {\n        throw new Error(`invalid gwei value: ${_value}`);\n    }\n    // Pad the fraction to 9 decimalplaces\n    while (comps[1].length < decimals) {\n        comps[1] += \"0\";\n    }\n    // Too many decimals and some non-zero ending, take the ceiling\n    if (comps[1].length > 9) {\n        let frac = BigInt(comps[1].substring(0, 9));\n        if (!comps[1].substring(9).match(/^0+$/)) {\n            frac++;\n        }\n        comps[1] = frac.toString();\n    }\n    return BigInt(comps[0] + comps[1]);\n}\n// Used by Polygon to use a gas station for fee data\nfunction getGasStationPlugin(url) {\n    return new FetchUrlFeeDataNetworkPlugin(url, async (fetchFeeData, provider, request) => {\n        // Prevent Cloudflare from blocking our request in node.js\n        request.setHeader(\"User-Agent\", \"ethers\");\n        let response;\n        try {\n            const [_response, _feeData] = await Promise.all([\n                request.send(), fetchFeeData()\n            ]);\n            response = _response;\n            const payload = response.bodyJson.standard;\n            const feeData = {\n                gasPrice: _feeData.gasPrice,\n                maxFeePerGas: parseUnits(payload.maxFee, 9),\n                maxPriorityFeePerGas: parseUnits(payload.maxPriorityFee, 9),\n            };\n            return feeData;\n        }\n        catch (error) {\n            assert(false, `error encountered with polygon gas station (${JSON.stringify(request.url)})`, \"SERVER_ERROR\", { request, response, error });\n        }\n    });\n}\n// See: https://chainlist.org\nlet injected = false;\nfunction injectCommonNetworks() {\n    if (injected) {\n        return;\n    }\n    injected = true;\n    /// Register popular Ethereum networks\n    function registerEth(name, chainId, options) {\n        const func = function () {\n            const network = new Network(name, chainId);\n            // We use 0 to disable ENS\n            if (options.ensNetwork != null) {\n                network.attachPlugin(new EnsPlugin(null, options.ensNetwork));\n            }\n            network.attachPlugin(new GasCostPlugin());\n            (options.plugins || []).forEach((plugin) => {\n                network.attachPlugin(plugin);\n            });\n            return network;\n        };\n        // Register the network by name and chain ID\n        Network.register(name, func);\n        Network.register(chainId, func);\n        if (options.altNames) {\n            options.altNames.forEach((name) => {\n                Network.register(name, func);\n            });\n        }\n    }\n    registerEth(\"mainnet\", 1, { ensNetwork: 1, altNames: [\"homestead\"] });\n    registerEth(\"ropsten\", 3, { ensNetwork: 3 });\n    registerEth(\"rinkeby\", 4, { ensNetwork: 4 });\n    registerEth(\"goerli\", 5, { ensNetwork: 5 });\n    registerEth(\"kovan\", 42, { ensNetwork: 42 });\n    registerEth(\"sepolia\", 11155111, { ensNetwork: 11155111 });\n    registerEth(\"holesky\", 17000, { ensNetwork: 17000 });\n    registerEth(\"classic\", 61, {});\n    registerEth(\"classicKotti\", 6, {});\n    registerEth(\"arbitrum\", 42161, {\n        ensNetwork: 1,\n    });\n    registerEth(\"arbitrum-goerli\", 421613, {});\n    registerEth(\"arbitrum-sepolia\", 421614, {});\n    registerEth(\"base\", 8453, { ensNetwork: 1 });\n    registerEth(\"base-goerli\", 84531, {});\n    registerEth(\"base-sepolia\", 84532, {});\n    registerEth(\"bnb\", 56, { ensNetwork: 1 });\n    registerEth(\"bnbt\", 97, {});\n    registerEth(\"linea\", 59144, { ensNetwork: 1 });\n    registerEth(\"linea-goerli\", 59140, {});\n    registerEth(\"linea-sepolia\", 59141, {});\n    registerEth(\"matic\", 137, {\n        ensNetwork: 1,\n        plugins: [\n            getGasStationPlugin(\"https:/\\/gasstation.polygon.technology/v2\")\n        ]\n    });\n    registerEth(\"matic-amoy\", 80002, {});\n    registerEth(\"matic-mumbai\", 80001, {\n        altNames: [\"maticMumbai\", \"maticmum\"],\n        plugins: [\n            getGasStationPlugin(\"https:/\\/gasstation-testnet.polygon.technology/v2\")\n        ]\n    });\n    registerEth(\"optimism\", 10, {\n        ensNetwork: 1,\n        plugins: []\n    });\n    registerEth(\"optimism-goerli\", 420, {});\n    registerEth(\"optimism-sepolia\", 11155420, {});\n    registerEth(\"xdai\", 100, { ensNetwork: 1 });\n}\n//# sourceMappingURL=network.js.map","import { assert, isHexString } from \"../utils/index.js\";\nfunction copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n/**\n *  Return the polling subscriber for common events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport function getPollingSubscriber(provider, event) {\n    if (event === \"block\") {\n        return new PollingBlockSubscriber(provider);\n    }\n    if (isHexString(event, 32)) {\n        return new PollingTransactionSubscriber(provider, event);\n    }\n    assert(false, \"unsupported polling event\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"getPollingSubscriber\", info: { event }\n    });\n}\n// @TODO: refactor this\n/**\n *  A **PollingBlockSubscriber** polls at a regular interval for a change\n *  in the block number.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingBlockSubscriber {\n    #provider;\n    #poller;\n    #interval;\n    // The most recent block we have scanned for events. The value -2\n    // indicates we still need to fetch an initial block number\n    #blockNumber;\n    /**\n     *  Create a new **PollingBlockSubscriber** attached to %%provider%%.\n     */\n    constructor(provider) {\n        this.#provider = provider;\n        this.#poller = null;\n        this.#interval = 4000;\n        this.#blockNumber = -2;\n    }\n    /**\n     *  The polling interval.\n     */\n    get pollingInterval() { return this.#interval; }\n    set pollingInterval(value) { this.#interval = value; }\n    async #poll() {\n        try {\n            const blockNumber = await this.#provider.getBlockNumber();\n            // Bootstrap poll to setup our initial block number\n            if (this.#blockNumber === -2) {\n                this.#blockNumber = blockNumber;\n                return;\n            }\n            // @TODO: Put a cap on the maximum number of events per loop?\n            if (blockNumber !== this.#blockNumber) {\n                for (let b = this.#blockNumber + 1; b <= blockNumber; b++) {\n                    // We have been stopped\n                    if (this.#poller == null) {\n                        return;\n                    }\n                    await this.#provider.emit(\"block\", b);\n                }\n                this.#blockNumber = blockNumber;\n            }\n        }\n        catch (error) {\n            // @TODO: Minor bump, add an \"error\" event to let subscribers\n            //        know things went awry.\n            //console.log(error);\n        }\n        // We have been stopped\n        if (this.#poller == null) {\n            return;\n        }\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n    }\n    start() {\n        if (this.#poller) {\n            return;\n        }\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n        this.#poll();\n    }\n    stop() {\n        if (!this.#poller) {\n            return;\n        }\n        this.#provider._clearTimeout(this.#poller);\n        this.#poller = null;\n    }\n    pause(dropWhilePaused) {\n        this.stop();\n        if (dropWhilePaused) {\n            this.#blockNumber = -2;\n        }\n    }\n    resume() {\n        this.start();\n    }\n}\n/**\n *  An **OnBlockSubscriber** can be sub-classed, with a [[_poll]]\n *  implmentation which will be called on every new block.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class OnBlockSubscriber {\n    #provider;\n    #poll;\n    #running;\n    /**\n     *  Create a new **OnBlockSubscriber** attached to %%provider%%.\n     */\n    constructor(provider) {\n        this.#provider = provider;\n        this.#running = false;\n        this.#poll = (blockNumber) => {\n            this._poll(blockNumber, this.#provider);\n        };\n    }\n    /**\n     *  Called on every new block.\n     */\n    async _poll(blockNumber, provider) {\n        throw new Error(\"sub-classes must override this\");\n    }\n    start() {\n        if (this.#running) {\n            return;\n        }\n        this.#running = true;\n        this.#poll(-2);\n        this.#provider.on(\"block\", this.#poll);\n    }\n    stop() {\n        if (!this.#running) {\n            return;\n        }\n        this.#running = false;\n        this.#provider.off(\"block\", this.#poll);\n    }\n    pause(dropWhilePaused) { this.stop(); }\n    resume() { this.start(); }\n}\nexport class PollingBlockTagSubscriber extends OnBlockSubscriber {\n    #tag;\n    #lastBlock;\n    constructor(provider, tag) {\n        super(provider);\n        this.#tag = tag;\n        this.#lastBlock = -2;\n    }\n    pause(dropWhilePaused) {\n        if (dropWhilePaused) {\n            this.#lastBlock = -2;\n        }\n        super.pause(dropWhilePaused);\n    }\n    async _poll(blockNumber, provider) {\n        const block = await provider.getBlock(this.#tag);\n        if (block == null) {\n            return;\n        }\n        if (this.#lastBlock === -2) {\n            this.#lastBlock = block.number;\n        }\n        else if (block.number > this.#lastBlock) {\n            provider.emit(this.#tag, block.number);\n            this.#lastBlock = block.number;\n        }\n    }\n}\n/**\n *  @_ignore:\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingOrphanSubscriber extends OnBlockSubscriber {\n    #filter;\n    constructor(provider, filter) {\n        super(provider);\n        this.#filter = copy(filter);\n    }\n    async _poll(blockNumber, provider) {\n        throw new Error(\"@TODO\");\n        console.log(this.#filter);\n    }\n}\n/**\n *  A **PollingTransactionSubscriber** will poll for a given transaction\n *  hash for its receipt.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingTransactionSubscriber extends OnBlockSubscriber {\n    #hash;\n    /**\n     *  Create a new **PollingTransactionSubscriber** attached to\n     *  %%provider%%, listening for %%hash%%.\n     */\n    constructor(provider, hash) {\n        super(provider);\n        this.#hash = hash;\n    }\n    async _poll(blockNumber, provider) {\n        const tx = await provider.getTransactionReceipt(this.#hash);\n        if (tx) {\n            provider.emit(this.#hash, tx);\n        }\n    }\n}\n/**\n *  A **PollingEventSubscriber** will poll for a given filter for its logs.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingEventSubscriber {\n    #provider;\n    #filter;\n    #poller;\n    #running;\n    // The most recent block we have scanned for events. The value -2\n    // indicates we still need to fetch an initial block number\n    #blockNumber;\n    /**\n     *  Create a new **PollingTransactionSubscriber** attached to\n     *  %%provider%%, listening for %%filter%%.\n     */\n    constructor(provider, filter) {\n        this.#provider = provider;\n        this.#filter = copy(filter);\n        this.#poller = this.#poll.bind(this);\n        this.#running = false;\n        this.#blockNumber = -2;\n    }\n    async #poll(blockNumber) {\n        // The initial block hasn't been determined yet\n        if (this.#blockNumber === -2) {\n            return;\n        }\n        const filter = copy(this.#filter);\n        filter.fromBlock = this.#blockNumber + 1;\n        filter.toBlock = blockNumber;\n        const logs = await this.#provider.getLogs(filter);\n        // No logs could just mean the node has not indexed them yet,\n        // so we keep a sliding window of 60 blocks to keep scanning\n        if (logs.length === 0) {\n            if (this.#blockNumber < blockNumber - 60) {\n                this.#blockNumber = blockNumber - 60;\n            }\n            return;\n        }\n        for (const log of logs) {\n            this.#provider.emit(this.#filter, log);\n            // Only advance the block number when logs were found to\n            // account for networks (like BNB and Polygon) which may\n            // sacrifice event consistency for block event speed\n            this.#blockNumber = log.blockNumber;\n        }\n    }\n    start() {\n        if (this.#running) {\n            return;\n        }\n        this.#running = true;\n        if (this.#blockNumber === -2) {\n            this.#provider.getBlockNumber().then((blockNumber) => {\n                this.#blockNumber = blockNumber;\n            });\n        }\n        this.#provider.on(\"block\", this.#poller);\n    }\n    stop() {\n        if (!this.#running) {\n            return;\n        }\n        this.#running = false;\n        this.#provider.off(\"block\", this.#poller);\n    }\n    pause(dropWhilePaused) {\n        this.stop();\n        if (dropWhilePaused) {\n            this.#blockNumber = -2;\n        }\n    }\n    resume() {\n        this.start();\n    }\n}\n//# sourceMappingURL=subscriber-polling.js.map","/**\n *  The available providers should suffice for most developers purposes,\n *  but the [[AbstractProvider]] class has many features which enable\n *  sub-classing it for specific purposes.\n *\n *  @_section: api/providers/abstract-provider: Subclassing Provider  [abstract-provider]\n */\n// @TODO\n// Event coalescence\n//   When we register an event with an async value (e.g. address is a Signer\n//   or ENS name), we need to add it immeidately for the Event API, but also\n//   need time to resolve the address. Upon resolving the address, we need to\n//   migrate the listener to the static event. We also need to maintain a map\n//   of Signer/ENS name to address so we can sync respond to listenerCount.\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { namehash } from \"../hash/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport { concat, dataLength, dataSlice, hexlify, isHexString, getBigInt, getBytes, getNumber, isCallException, isError, makeError, assert, assertArgument, FetchRequest, toBeArray, toQuantity, defineProperties, EventPayload, resolveProperties, toUtf8String } from \"../utils/index.js\";\nimport { EnsResolver } from \"./ens-resolver.js\";\nimport { formatBlock, formatLog, formatTransactionReceipt, formatTransactionResponse } from \"./format.js\";\nimport { Network } from \"./network.js\";\nimport { copyRequest, Block, FeeData, Log, TransactionReceipt, TransactionResponse } from \"./provider.js\";\nimport { PollingBlockSubscriber, PollingBlockTagSubscriber, PollingEventSubscriber, PollingOrphanSubscriber, PollingTransactionSubscriber } from \"./subscriber-polling.js\";\n// Constants\nconst BN_2 = BigInt(2);\nconst MAX_CCIP_REDIRECTS = 10;\nfunction isPromise(value) {\n    return (value && typeof (value.then) === \"function\");\n}\nfunction getTag(prefix, value) {\n    return prefix + \":\" + JSON.stringify(value, (k, v) => {\n        if (v == null) {\n            return \"null\";\n        }\n        if (typeof (v) === \"bigint\") {\n            return `bigint:${v.toString()}`;\n        }\n        if (typeof (v) === \"string\") {\n            return v.toLowerCase();\n        }\n        // Sort object keys\n        if (typeof (v) === \"object\" && !Array.isArray(v)) {\n            const keys = Object.keys(v);\n            keys.sort();\n            return keys.reduce((accum, key) => {\n                accum[key] = v[key];\n                return accum;\n            }, {});\n        }\n        return v;\n    });\n}\n/**\n *  An **UnmanagedSubscriber** is useful for events which do not require\n *  any additional management, such as ``\"debug\"`` which only requires\n *  emit in synchronous event loop triggered calls.\n */\nexport class UnmanagedSubscriber {\n    /**\n     *  The name fof the event.\n     */\n    name;\n    /**\n     *  Create a new UnmanagedSubscriber with %%name%%.\n     */\n    constructor(name) { defineProperties(this, { name }); }\n    start() { }\n    stop() { }\n    pause(dropWhilePaused) { }\n    resume() { }\n}\nfunction copy(value) {\n    return JSON.parse(JSON.stringify(value));\n}\nfunction concisify(items) {\n    items = Array.from((new Set(items)).values());\n    items.sort();\n    return items;\n}\nasync function getSubscription(_event, provider) {\n    if (_event == null) {\n        throw new Error(\"invalid event\");\n    }\n    // Normalize topic array info an EventFilter\n    if (Array.isArray(_event)) {\n        _event = { topics: _event };\n    }\n    if (typeof (_event) === \"string\") {\n        switch (_event) {\n            case \"block\":\n            case \"debug\":\n            case \"error\":\n            case \"finalized\":\n            case \"network\":\n            case \"pending\":\n            case \"safe\": {\n                return { type: _event, tag: _event };\n            }\n        }\n    }\n    if (isHexString(_event, 32)) {\n        const hash = _event.toLowerCase();\n        return { type: \"transaction\", tag: getTag(\"tx\", { hash }), hash };\n    }\n    if (_event.orphan) {\n        const event = _event;\n        // @TODO: Should lowercase and whatnot things here instead of copy...\n        return { type: \"orphan\", tag: getTag(\"orphan\", event), filter: copy(event) };\n    }\n    if ((_event.address || _event.topics)) {\n        const event = _event;\n        const filter = {\n            topics: ((event.topics || []).map((t) => {\n                if (t == null) {\n                    return null;\n                }\n                if (Array.isArray(t)) {\n                    return concisify(t.map((t) => t.toLowerCase()));\n                }\n                return t.toLowerCase();\n            }))\n        };\n        if (event.address) {\n            const addresses = [];\n            const promises = [];\n            const addAddress = (addr) => {\n                if (isHexString(addr)) {\n                    addresses.push(addr);\n                }\n                else {\n                    promises.push((async () => {\n                        addresses.push(await resolveAddress(addr, provider));\n                    })());\n                }\n            };\n            if (Array.isArray(event.address)) {\n                event.address.forEach(addAddress);\n            }\n            else {\n                addAddress(event.address);\n            }\n            if (promises.length) {\n                await Promise.all(promises);\n            }\n            filter.address = concisify(addresses.map((a) => a.toLowerCase()));\n        }\n        return { filter, tag: getTag(\"event\", filter), type: \"event\" };\n    }\n    assertArgument(false, \"unknown ProviderEvent\", \"event\", _event);\n}\nfunction getTime() { return (new Date()).getTime(); }\nconst defaultOptions = {\n    cacheTimeout: 250,\n    pollingInterval: 4000\n};\n/**\n *  An **AbstractProvider** provides a base class for other sub-classes to\n *  implement the [[Provider]] API by normalizing input arguments and\n *  formatting output results as well as tracking events for consistent\n *  behaviour on an eventually-consistent network.\n */\nexport class AbstractProvider {\n    #subs;\n    #plugins;\n    // null=unpaused, true=paused+dropWhilePaused, false=paused\n    #pausedState;\n    #destroyed;\n    #networkPromise;\n    #anyNetwork;\n    #performCache;\n    // The most recent block number if running an event or -1 if no \"block\" event\n    #lastBlockNumber;\n    #nextTimer;\n    #timers;\n    #disableCcipRead;\n    #options;\n    /**\n     *  Create a new **AbstractProvider** connected to %%network%%, or\n     *  use the various network detection capabilities to discover the\n     *  [[Network]] if necessary.\n     */\n    constructor(_network, options) {\n        this.#options = Object.assign({}, defaultOptions, options || {});\n        if (_network === \"any\") {\n            this.#anyNetwork = true;\n            this.#networkPromise = null;\n        }\n        else if (_network) {\n            const network = Network.from(_network);\n            this.#anyNetwork = false;\n            this.#networkPromise = Promise.resolve(network);\n            setTimeout(() => { this.emit(\"network\", network, null); }, 0);\n        }\n        else {\n            this.#anyNetwork = false;\n            this.#networkPromise = null;\n        }\n        this.#lastBlockNumber = -1;\n        this.#performCache = new Map();\n        this.#subs = new Map();\n        this.#plugins = new Map();\n        this.#pausedState = null;\n        this.#destroyed = false;\n        this.#nextTimer = 1;\n        this.#timers = new Map();\n        this.#disableCcipRead = false;\n    }\n    get pollingInterval() { return this.#options.pollingInterval; }\n    /**\n     *  Returns ``this``, to allow an **AbstractProvider** to implement\n     *  the [[ContractRunner]] interface.\n     */\n    get provider() { return this; }\n    /**\n     *  Returns all the registered plug-ins.\n     */\n    get plugins() {\n        return Array.from(this.#plugins.values());\n    }\n    /**\n     *  Attach a new plug-in.\n     */\n    attachPlugin(plugin) {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${plugin.name} `);\n        }\n        this.#plugins.set(plugin.name, plugin.connect(this));\n        return this;\n    }\n    /**\n     *  Get a plugin by name.\n     */\n    getPlugin(name) {\n        return (this.#plugins.get(name)) || null;\n    }\n    /**\n     *  Prevent any CCIP-read operation, regardless of whether requested\n     *  in a [[call]] using ``enableCcipRead``.\n     */\n    get disableCcipRead() { return this.#disableCcipRead; }\n    set disableCcipRead(value) { this.#disableCcipRead = !!value; }\n    // Shares multiple identical requests made during the same 250ms\n    async #perform(req) {\n        const timeout = this.#options.cacheTimeout;\n        // Caching disabled\n        if (timeout < 0) {\n            return await this._perform(req);\n        }\n        // Create a tag\n        const tag = getTag(req.method, req);\n        let perform = this.#performCache.get(tag);\n        if (!perform) {\n            perform = this._perform(req);\n            this.#performCache.set(tag, perform);\n            setTimeout(() => {\n                if (this.#performCache.get(tag) === perform) {\n                    this.#performCache.delete(tag);\n                }\n            }, timeout);\n        }\n        return await perform;\n    }\n    /**\n     *  Resolves to the data for executing the CCIP-read operations.\n     */\n    async ccipReadFetch(tx, calldata, urls) {\n        if (this.disableCcipRead || urls.length === 0 || tx.to == null) {\n            return null;\n        }\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n        const errorMessages = [];\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n            // If no {data} is present, use POST; otherwise GET\n            //const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n            //const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n            //    value.status = response.statusCode;\n            //    return value;\n            //});\n            const request = new FetchRequest(href);\n            if (url.indexOf(\"{data}\") === -1) {\n                request.body = { data, sender };\n            }\n            this.emit(\"debug\", { action: \"sendCcipReadFetchRequest\", request, index: i, urls });\n            let errorMessage = \"unknown error\";\n            // Fetch the resource...\n            let resp;\n            try {\n                resp = await request.send();\n            }\n            catch (error) {\n                // ...low-level fetch error (missing host, bad SSL, etc.),\n                // so try next URL\n                errorMessages.push(error.message);\n                this.emit(\"debug\", { action: \"receiveCcipReadFetchError\", request, result: { error } });\n                continue;\n            }\n            try {\n                const result = resp.bodyJson;\n                if (result.data) {\n                    this.emit(\"debug\", { action: \"receiveCcipReadFetchResult\", request, result });\n                    return result.data;\n                }\n                if (result.message) {\n                    errorMessage = result.message;\n                }\n                this.emit(\"debug\", { action: \"receiveCcipReadFetchError\", request, result });\n            }\n            catch (error) { }\n            // 4xx indicates the result is not present; stop\n            assert(resp.statusCode < 400 || resp.statusCode >= 500, `response not found during CCIP fetch: ${errorMessage}`, \"OFFCHAIN_FAULT\", { reason: \"404_MISSING_RESOURCE\", transaction: tx, info: { url, errorMessage } });\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n        assert(false, `error encountered during CCIP fetch: ${errorMessages.map((m) => JSON.stringify(m)).join(\", \")}`, \"OFFCHAIN_FAULT\", {\n            reason: \"500_SERVER_ERROR\",\n            transaction: tx, info: { urls, errorMessages }\n        });\n    }\n    /**\n     *  Provides the opportunity for a sub-class to wrap a block before\n     *  returning it, to add additional properties or an alternate\n     *  sub-class of [[Block]].\n     */\n    _wrapBlock(value, network) {\n        return new Block(formatBlock(value), this);\n    }\n    /**\n     *  Provides the opportunity for a sub-class to wrap a log before\n     *  returning it, to add additional properties or an alternate\n     *  sub-class of [[Log]].\n     */\n    _wrapLog(value, network) {\n        return new Log(formatLog(value), this);\n    }\n    /**\n     *  Provides the opportunity for a sub-class to wrap a transaction\n     *  receipt before returning it, to add additional properties or an\n     *  alternate sub-class of [[TransactionReceipt]].\n     */\n    _wrapTransactionReceipt(value, network) {\n        return new TransactionReceipt(formatTransactionReceipt(value), this);\n    }\n    /**\n     *  Provides the opportunity for a sub-class to wrap a transaction\n     *  response before returning it, to add additional properties or an\n     *  alternate sub-class of [[TransactionResponse]].\n     */\n    _wrapTransactionResponse(tx, network) {\n        return new TransactionResponse(formatTransactionResponse(tx), this);\n    }\n    /**\n     *  Resolves to the Network, forcing a network detection using whatever\n     *  technique the sub-class requires.\n     *\n     *  Sub-classes **must** override this.\n     */\n    _detectNetwork() {\n        assert(false, \"sub-classes must implement this\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_detectNetwork\"\n        });\n    }\n    /**\n     *  Sub-classes should use this to perform all built-in operations. All\n     *  methods sanitizes and normalizes the values passed into this.\n     *\n     *  Sub-classes **must** override this.\n     */\n    async _perform(req) {\n        assert(false, `unsupported method: ${req.method}`, \"UNSUPPORTED_OPERATION\", {\n            operation: req.method,\n            info: req\n        });\n    }\n    // State\n    async getBlockNumber() {\n        const blockNumber = getNumber(await this.#perform({ method: \"getBlockNumber\" }), \"%response\");\n        if (this.#lastBlockNumber >= 0) {\n            this.#lastBlockNumber = blockNumber;\n        }\n        return blockNumber;\n    }\n    /**\n     *  Returns or resolves to the address for %%address%%, resolving ENS\n     *  names and [[Addressable]] objects and returning if already an\n     *  address.\n     */\n    _getAddress(address) {\n        return resolveAddress(address, this);\n    }\n    /**\n     *  Returns or resolves to a valid block tag for %%blockTag%%, resolving\n     *  negative values and returning if already a valid block tag.\n     */\n    _getBlockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        switch (blockTag) {\n            case \"earliest\":\n                return \"0x0\";\n            case \"finalized\":\n            case \"latest\":\n            case \"pending\":\n            case \"safe\":\n                return blockTag;\n        }\n        if (isHexString(blockTag)) {\n            if (isHexString(blockTag, 32)) {\n                return blockTag;\n            }\n            return toQuantity(blockTag);\n        }\n        if (typeof (blockTag) === \"bigint\") {\n            blockTag = getNumber(blockTag, \"blockTag\");\n        }\n        if (typeof (blockTag) === \"number\") {\n            if (blockTag >= 0) {\n                return toQuantity(blockTag);\n            }\n            if (this.#lastBlockNumber >= 0) {\n                return toQuantity(this.#lastBlockNumber + blockTag);\n            }\n            return this.getBlockNumber().then((b) => toQuantity(b + blockTag));\n        }\n        assertArgument(false, \"invalid blockTag\", \"blockTag\", blockTag);\n    }\n    /**\n     *  Returns or resolves to a filter for %%filter%%, resolving any ENS\n     *  names or [[Addressable]] object and returning if already a valid\n     *  filter.\n     */\n    _getFilter(filter) {\n        // Create a canonical representation of the topics\n        const topics = (filter.topics || []).map((t) => {\n            if (t == null) {\n                return null;\n            }\n            if (Array.isArray(t)) {\n                return concisify(t.map((t) => t.toLowerCase()));\n            }\n            return t.toLowerCase();\n        });\n        const blockHash = (\"blockHash\" in filter) ? filter.blockHash : undefined;\n        const resolve = (_address, fromBlock, toBlock) => {\n            let address = undefined;\n            switch (_address.length) {\n                case 0: break;\n                case 1:\n                    address = _address[0];\n                    break;\n                default:\n                    _address.sort();\n                    address = _address;\n            }\n            if (blockHash) {\n                if (fromBlock != null || toBlock != null) {\n                    throw new Error(\"invalid filter\");\n                }\n            }\n            const filter = {};\n            if (address) {\n                filter.address = address;\n            }\n            if (topics.length) {\n                filter.topics = topics;\n            }\n            if (fromBlock) {\n                filter.fromBlock = fromBlock;\n            }\n            if (toBlock) {\n                filter.toBlock = toBlock;\n            }\n            if (blockHash) {\n                filter.blockHash = blockHash;\n            }\n            return filter;\n        };\n        // Addresses could be async (ENS names or Addressables)\n        let address = [];\n        if (filter.address) {\n            if (Array.isArray(filter.address)) {\n                for (const addr of filter.address) {\n                    address.push(this._getAddress(addr));\n                }\n            }\n            else {\n                address.push(this._getAddress(filter.address));\n            }\n        }\n        let fromBlock = undefined;\n        if (\"fromBlock\" in filter) {\n            fromBlock = this._getBlockTag(filter.fromBlock);\n        }\n        let toBlock = undefined;\n        if (\"toBlock\" in filter) {\n            toBlock = this._getBlockTag(filter.toBlock);\n        }\n        if (address.filter((a) => (typeof (a) !== \"string\")).length ||\n            (fromBlock != null && typeof (fromBlock) !== \"string\") ||\n            (toBlock != null && typeof (toBlock) !== \"string\")) {\n            return Promise.all([Promise.all(address), fromBlock, toBlock]).then((result) => {\n                return resolve(result[0], result[1], result[2]);\n            });\n        }\n        return resolve(address, fromBlock, toBlock);\n    }\n    /**\n     *  Returns or resolves to a transaction for %%request%%, resolving\n     *  any ENS names or [[Addressable]] and returning if already a valid\n     *  transaction.\n     */\n    _getTransactionRequest(_request) {\n        const request = copyRequest(_request);\n        const promises = [];\n        [\"to\", \"from\"].forEach((key) => {\n            if (request[key] == null) {\n                return;\n            }\n            const addr = resolveAddress(request[key], this);\n            if (isPromise(addr)) {\n                promises.push((async function () { request[key] = await addr; })());\n            }\n            else {\n                request[key] = addr;\n            }\n        });\n        if (request.blockTag != null) {\n            const blockTag = this._getBlockTag(request.blockTag);\n            if (isPromise(blockTag)) {\n                promises.push((async function () { request.blockTag = await blockTag; })());\n            }\n            else {\n                request.blockTag = blockTag;\n            }\n        }\n        if (promises.length) {\n            return (async function () {\n                await Promise.all(promises);\n                return request;\n            })();\n        }\n        return request;\n    }\n    async getNetwork() {\n        // No explicit network was set and this is our first time\n        if (this.#networkPromise == null) {\n            // Detect the current network (shared with all calls)\n            const detectNetwork = (async () => {\n                try {\n                    const network = await this._detectNetwork();\n                    this.emit(\"network\", network, null);\n                    return network;\n                }\n                catch (error) {\n                    if (this.#networkPromise === detectNetwork) {\n                        this.#networkPromise = null;\n                    }\n                    throw error;\n                }\n            })();\n            this.#networkPromise = detectNetwork;\n            return (await detectNetwork).clone();\n        }\n        const networkPromise = this.#networkPromise;\n        const [expected, actual] = await Promise.all([\n            networkPromise,\n            this._detectNetwork() // The actual connected network\n        ]);\n        if (expected.chainId !== actual.chainId) {\n            if (this.#anyNetwork) {\n                // The \"any\" network can change, so notify listeners\n                this.emit(\"network\", actual, expected);\n                // Update the network if something else hasn't already changed it\n                if (this.#networkPromise === networkPromise) {\n                    this.#networkPromise = Promise.resolve(actual);\n                }\n            }\n            else {\n                // Otherwise, we do not allow changes to the underlying network\n                assert(false, `network changed: ${expected.chainId} => ${actual.chainId} `, \"NETWORK_ERROR\", {\n                    event: \"changed\"\n                });\n            }\n        }\n        return expected.clone();\n    }\n    async getFeeData() {\n        const network = await this.getNetwork();\n        const getFeeDataFunc = async () => {\n            const { _block, gasPrice, priorityFee } = await resolveProperties({\n                _block: this.#getBlock(\"latest\", false),\n                gasPrice: ((async () => {\n                    try {\n                        const value = await this.#perform({ method: \"getGasPrice\" });\n                        return getBigInt(value, \"%response\");\n                    }\n                    catch (error) { }\n                    return null;\n                })()),\n                priorityFee: ((async () => {\n                    try {\n                        const value = await this.#perform({ method: \"getPriorityFee\" });\n                        return getBigInt(value, \"%response\");\n                    }\n                    catch (error) { }\n                    return null;\n                })())\n            });\n            let maxFeePerGas = null;\n            let maxPriorityFeePerGas = null;\n            // These are the recommended EIP-1559 heuristics for fee data\n            const block = this._wrapBlock(_block, network);\n            if (block && block.baseFeePerGas) {\n                maxPriorityFeePerGas = (priorityFee != null) ? priorityFee : BigInt(\"1000000000\");\n                maxFeePerGas = (block.baseFeePerGas * BN_2) + maxPriorityFeePerGas;\n            }\n            return new FeeData(gasPrice, maxFeePerGas, maxPriorityFeePerGas);\n        };\n        // Check for a FeeDataNetWorkPlugin\n        const plugin = network.getPlugin(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n        if (plugin) {\n            const req = new FetchRequest(plugin.url);\n            const feeData = await plugin.processFunc(getFeeDataFunc, this, req);\n            return new FeeData(feeData.gasPrice, feeData.maxFeePerGas, feeData.maxPriorityFeePerGas);\n        }\n        return await getFeeDataFunc();\n    }\n    async estimateGas(_tx) {\n        let tx = this._getTransactionRequest(_tx);\n        if (isPromise(tx)) {\n            tx = await tx;\n        }\n        return getBigInt(await this.#perform({\n            method: \"estimateGas\", transaction: tx\n        }), \"%response\");\n    }\n    async #call(tx, blockTag, attempt) {\n        assert(attempt < MAX_CCIP_REDIRECTS, \"CCIP read exceeded maximum redirections\", \"OFFCHAIN_FAULT\", {\n            reason: \"TOO_MANY_REDIRECTS\",\n            transaction: Object.assign({}, tx, { blockTag, enableCcipRead: true })\n        });\n        // This came in as a PerformActionTransaction, so to/from are safe; we can cast\n        const transaction = copyRequest(tx);\n        try {\n            return hexlify(await this._perform({ method: \"call\", transaction, blockTag }));\n        }\n        catch (error) {\n            // CCIP Read OffchainLookup\n            if (!this.disableCcipRead && isCallException(error) && error.data && attempt >= 0 && blockTag === \"latest\" && transaction.to != null && dataSlice(error.data, 0, 4) === \"0x556f1830\") {\n                const data = error.data;\n                const txSender = await resolveAddress(transaction.to, this);\n                // Parse the CCIP Read Arguments\n                let ccipArgs;\n                try {\n                    ccipArgs = parseOffchainLookup(dataSlice(error.data, 4));\n                }\n                catch (error) {\n                    assert(false, error.message, \"OFFCHAIN_FAULT\", {\n                        reason: \"BAD_DATA\", transaction, info: { data }\n                    });\n                }\n                // Check the sender of the OffchainLookup matches the transaction\n                assert(ccipArgs.sender.toLowerCase() === txSender.toLowerCase(), \"CCIP Read sender mismatch\", \"CALL_EXCEPTION\", {\n                    action: \"call\",\n                    data,\n                    reason: \"OffchainLookup\",\n                    transaction: transaction,\n                    invocation: null,\n                    revert: {\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        name: \"OffchainLookup\",\n                        args: ccipArgs.errorArgs\n                    }\n                });\n                const ccipResult = await this.ccipReadFetch(transaction, ccipArgs.calldata, ccipArgs.urls);\n                assert(ccipResult != null, \"CCIP Read failed to fetch data\", \"OFFCHAIN_FAULT\", {\n                    reason: \"FETCH_FAILED\", transaction, info: { data: error.data, errorArgs: ccipArgs.errorArgs }\n                });\n                const tx = {\n                    to: txSender,\n                    data: concat([ccipArgs.selector, encodeBytes([ccipResult, ccipArgs.extraData])])\n                };\n                this.emit(\"debug\", { action: \"sendCcipReadCall\", transaction: tx });\n                try {\n                    const result = await this.#call(tx, blockTag, attempt + 1);\n                    this.emit(\"debug\", { action: \"receiveCcipReadCallResult\", transaction: Object.assign({}, tx), result });\n                    return result;\n                }\n                catch (error) {\n                    this.emit(\"debug\", { action: \"receiveCcipReadCallError\", transaction: Object.assign({}, tx), error });\n                    throw error;\n                }\n            }\n            throw error;\n        }\n    }\n    async #checkNetwork(promise) {\n        const { value } = await resolveProperties({\n            network: this.getNetwork(),\n            value: promise\n        });\n        return value;\n    }\n    async call(_tx) {\n        const { tx, blockTag } = await resolveProperties({\n            tx: this._getTransactionRequest(_tx),\n            blockTag: this._getBlockTag(_tx.blockTag)\n        });\n        return await this.#checkNetwork(this.#call(tx, blockTag, _tx.enableCcipRead ? 0 : -1));\n    }\n    // Account\n    async #getAccountValue(request, _address, _blockTag) {\n        let address = this._getAddress(_address);\n        let blockTag = this._getBlockTag(_blockTag);\n        if (typeof (address) !== \"string\" || typeof (blockTag) !== \"string\") {\n            [address, blockTag] = await Promise.all([address, blockTag]);\n        }\n        return await this.#checkNetwork(this.#perform(Object.assign(request, { address, blockTag })));\n    }\n    async getBalance(address, blockTag) {\n        return getBigInt(await this.#getAccountValue({ method: \"getBalance\" }, address, blockTag), \"%response\");\n    }\n    async getTransactionCount(address, blockTag) {\n        return getNumber(await this.#getAccountValue({ method: \"getTransactionCount\" }, address, blockTag), \"%response\");\n    }\n    async getCode(address, blockTag) {\n        return hexlify(await this.#getAccountValue({ method: \"getCode\" }, address, blockTag));\n    }\n    async getStorage(address, _position, blockTag) {\n        const position = getBigInt(_position, \"position\");\n        return hexlify(await this.#getAccountValue({ method: \"getStorage\", position }, address, blockTag));\n    }\n    // Write\n    async broadcastTransaction(signedTx) {\n        const { blockNumber, hash, network } = await resolveProperties({\n            blockNumber: this.getBlockNumber(),\n            hash: this._perform({\n                method: \"broadcastTransaction\",\n                signedTransaction: signedTx\n            }),\n            network: this.getNetwork()\n        });\n        const tx = Transaction.from(signedTx);\n        if (tx.hash !== hash) {\n            throw new Error(\"@TODO: the returned hash did not match\");\n        }\n        return this._wrapTransactionResponse(tx, network).replaceableTransaction(blockNumber);\n    }\n    async #getBlock(block, includeTransactions) {\n        // @TODO: Add CustomBlockPlugin check\n        if (isHexString(block, 32)) {\n            return await this.#perform({\n                method: \"getBlock\", blockHash: block, includeTransactions\n            });\n        }\n        let blockTag = this._getBlockTag(block);\n        if (typeof (blockTag) !== \"string\") {\n            blockTag = await blockTag;\n        }\n        return await this.#perform({\n            method: \"getBlock\", blockTag, includeTransactions\n        });\n    }\n    // Queries\n    async getBlock(block, prefetchTxs) {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#getBlock(block, !!prefetchTxs)\n        });\n        if (params == null) {\n            return null;\n        }\n        return this._wrapBlock(params, network);\n    }\n    async getTransaction(hash) {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransaction\", hash })\n        });\n        if (params == null) {\n            return null;\n        }\n        return this._wrapTransactionResponse(params, network);\n    }\n    async getTransactionReceipt(hash) {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransactionReceipt\", hash })\n        });\n        if (params == null) {\n            return null;\n        }\n        // Some backends did not backfill the effectiveGasPrice into old transactions\n        // in the receipt, so we look it up manually and inject it.\n        if (params.gasPrice == null && params.effectiveGasPrice == null) {\n            const tx = await this.#perform({ method: \"getTransaction\", hash });\n            if (tx == null) {\n                throw new Error(\"report this; could not find tx or effectiveGasPrice\");\n            }\n            params.effectiveGasPrice = tx.gasPrice;\n        }\n        return this._wrapTransactionReceipt(params, network);\n    }\n    async getTransactionResult(hash) {\n        const { result } = await resolveProperties({\n            network: this.getNetwork(),\n            result: this.#perform({ method: \"getTransactionResult\", hash })\n        });\n        if (result == null) {\n            return null;\n        }\n        return hexlify(result);\n    }\n    // Bloom-filter Queries\n    async getLogs(_filter) {\n        let filter = this._getFilter(_filter);\n        if (isPromise(filter)) {\n            filter = await filter;\n        }\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getLogs\", filter })\n        });\n        return params.map((p) => this._wrapLog(p, network));\n    }\n    // ENS\n    _getProvider(chainId) {\n        assert(false, \"provider cannot connect to target network\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_getProvider()\"\n        });\n    }\n    async getResolver(name) {\n        return await EnsResolver.fromName(this, name);\n    }\n    async getAvatar(name) {\n        const resolver = await this.getResolver(name);\n        if (resolver) {\n            return await resolver.getAvatar();\n        }\n        return null;\n    }\n    async resolveName(name) {\n        const resolver = await this.getResolver(name);\n        if (resolver) {\n            return await resolver.getAddress();\n        }\n        return null;\n    }\n    async lookupAddress(address) {\n        address = getAddress(address);\n        const node = namehash(address.substring(2).toLowerCase() + \".addr.reverse\");\n        try {\n            const ensAddr = await EnsResolver.getEnsAddress(this);\n            const ensContract = new Contract(ensAddr, [\n                \"function resolver(bytes32) view returns (address)\"\n            ], this);\n            const resolver = await ensContract.resolver(node);\n            if (resolver == null || resolver === ZeroAddress) {\n                return null;\n            }\n            const resolverContract = new Contract(resolver, [\n                \"function name(bytes32) view returns (string)\"\n            ], this);\n            const name = await resolverContract.name(node);\n            // Failed forward resolution\n            const check = await this.resolveName(name);\n            if (check !== address) {\n                return null;\n            }\n            return name;\n        }\n        catch (error) {\n            // No data was returned from the resolver\n            if (isError(error, \"BAD_DATA\") && error.value === \"0x\") {\n                return null;\n            }\n            // Something reerted\n            if (isError(error, \"CALL_EXCEPTION\")) {\n                return null;\n            }\n            throw error;\n        }\n        return null;\n    }\n    async waitForTransaction(hash, _confirms, timeout) {\n        const confirms = (_confirms != null) ? _confirms : 1;\n        if (confirms === 0) {\n            return this.getTransactionReceipt(hash);\n        }\n        return new Promise(async (resolve, reject) => {\n            let timer = null;\n            const listener = (async (blockNumber) => {\n                try {\n                    const receipt = await this.getTransactionReceipt(hash);\n                    if (receipt != null) {\n                        if (blockNumber - receipt.blockNumber + 1 >= confirms) {\n                            resolve(receipt);\n                            //this.off(\"block\", listener);\n                            if (timer) {\n                                clearTimeout(timer);\n                                timer = null;\n                            }\n                            return;\n                        }\n                    }\n                }\n                catch (error) {\n                    console.log(\"EEE\", error);\n                }\n                this.once(\"block\", listener);\n            });\n            if (timeout != null) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    this.off(\"block\", listener);\n                    reject(makeError(\"timeout\", \"TIMEOUT\", { reason: \"timeout\" }));\n                }, timeout);\n            }\n            listener(await this.getBlockNumber());\n        });\n    }\n    async waitForBlock(blockTag) {\n        assert(false, \"not implemented yet\", \"NOT_IMPLEMENTED\", {\n            operation: \"waitForBlock\"\n        });\n    }\n    /**\n     *  Clear a timer created using the [[_setTimeout]] method.\n     */\n    _clearTimeout(timerId) {\n        const timer = this.#timers.get(timerId);\n        if (!timer) {\n            return;\n        }\n        if (timer.timer) {\n            clearTimeout(timer.timer);\n        }\n        this.#timers.delete(timerId);\n    }\n    /**\n     *  Create a timer that will execute %%func%% after at least %%timeout%%\n     *  (in ms). If %%timeout%% is unspecified, then %%func%% will execute\n     *  in the next event loop.\n     *\n     *  [Pausing](AbstractProvider-paused) the provider will pause any\n     *  associated timers.\n     */\n    _setTimeout(_func, timeout) {\n        if (timeout == null) {\n            timeout = 0;\n        }\n        const timerId = this.#nextTimer++;\n        const func = () => {\n            this.#timers.delete(timerId);\n            _func();\n        };\n        if (this.paused) {\n            this.#timers.set(timerId, { timer: null, func, time: timeout });\n        }\n        else {\n            const timer = setTimeout(func, timeout);\n            this.#timers.set(timerId, { timer, func, time: getTime() });\n        }\n        return timerId;\n    }\n    /**\n     *  Perform %%func%% on each subscriber.\n     */\n    _forEachSubscriber(func) {\n        for (const sub of this.#subs.values()) {\n            func(sub.subscriber);\n        }\n    }\n    /**\n     *  Sub-classes may override this to customize subscription\n     *  implementations.\n     */\n    _getSubscriber(sub) {\n        switch (sub.type) {\n            case \"debug\":\n            case \"error\":\n            case \"network\":\n                return new UnmanagedSubscriber(sub.type);\n            case \"block\": {\n                const subscriber = new PollingBlockSubscriber(this);\n                subscriber.pollingInterval = this.pollingInterval;\n                return subscriber;\n            }\n            case \"safe\":\n            case \"finalized\":\n                return new PollingBlockTagSubscriber(this, sub.type);\n            case \"event\":\n                return new PollingEventSubscriber(this, sub.filter);\n            case \"transaction\":\n                return new PollingTransactionSubscriber(this, sub.hash);\n            case \"orphan\":\n                return new PollingOrphanSubscriber(this, sub.filter);\n        }\n        throw new Error(`unsupported event: ${sub.type}`);\n    }\n    /**\n     *  If a [[Subscriber]] fails and needs to replace itself, this\n     *  method may be used.\n     *\n     *  For example, this is used for providers when using the\n     *  ``eth_getFilterChanges`` method, which can return null if state\n     *  filters are not supported by the backend, allowing the Subscriber\n     *  to swap in a [[PollingEventSubscriber]].\n     */\n    _recoverSubscriber(oldSub, newSub) {\n        for (const sub of this.#subs.values()) {\n            if (sub.subscriber === oldSub) {\n                if (sub.started) {\n                    sub.subscriber.stop();\n                }\n                sub.subscriber = newSub;\n                if (sub.started) {\n                    newSub.start();\n                }\n                if (this.#pausedState != null) {\n                    newSub.pause(this.#pausedState);\n                }\n                break;\n            }\n        }\n    }\n    async #hasSub(event, emitArgs) {\n        let sub = await getSubscription(event, this);\n        // This is a log that is removing an existing log; we actually want\n        // to emit an orphan event for the removed log\n        if (sub.type === \"event\" && emitArgs && emitArgs.length > 0 && emitArgs[0].removed === true) {\n            sub = await getSubscription({ orphan: \"drop-log\", log: emitArgs[0] }, this);\n        }\n        return this.#subs.get(sub.tag) || null;\n    }\n    async #getSub(event) {\n        const subscription = await getSubscription(event, this);\n        // Prevent tampering with our tag in any subclass' _getSubscriber\n        const tag = subscription.tag;\n        let sub = this.#subs.get(tag);\n        if (!sub) {\n            const subscriber = this._getSubscriber(subscription);\n            const addressableMap = new WeakMap();\n            const nameMap = new Map();\n            sub = { subscriber, tag, addressableMap, nameMap, started: false, listeners: [] };\n            this.#subs.set(tag, sub);\n        }\n        return sub;\n    }\n    async on(event, listener) {\n        const sub = await this.#getSub(event);\n        sub.listeners.push({ listener, once: false });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) {\n                sub.subscriber.pause(this.#pausedState);\n            }\n        }\n        return this;\n    }\n    async once(event, listener) {\n        const sub = await this.#getSub(event);\n        sub.listeners.push({ listener, once: true });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) {\n                sub.subscriber.pause(this.#pausedState);\n            }\n        }\n        return this;\n    }\n    async emit(event, ...args) {\n        const sub = await this.#hasSub(event, args);\n        // If there is not subscription or if a recent emit removed\n        // the last of them (which also deleted the sub) do nothing\n        if (!sub || sub.listeners.length === 0) {\n            return false;\n        }\n        ;\n        const count = sub.listeners.length;\n        sub.listeners = sub.listeners.filter(({ listener, once }) => {\n            const payload = new EventPayload(this, (once ? null : listener), event);\n            try {\n                listener.call(this, ...args, payload);\n            }\n            catch (error) { }\n            return !once;\n        });\n        if (sub.listeners.length === 0) {\n            if (sub.started) {\n                sub.subscriber.stop();\n            }\n            this.#subs.delete(sub.tag);\n        }\n        return (count > 0);\n    }\n    async listenerCount(event) {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) {\n                return 0;\n            }\n            return sub.listeners.length;\n        }\n        let total = 0;\n        for (const { listeners } of this.#subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n    async listeners(event) {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) {\n                return [];\n            }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        let result = [];\n        for (const { listeners } of this.#subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n    async off(event, listener) {\n        const sub = await this.#hasSub(event);\n        if (!sub) {\n            return this;\n        }\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) {\n                sub.listeners.splice(index, 1);\n            }\n        }\n        if (!listener || sub.listeners.length === 0) {\n            if (sub.started) {\n                sub.subscriber.stop();\n            }\n            this.#subs.delete(sub.tag);\n        }\n        return this;\n    }\n    async removeAllListeners(event) {\n        if (event) {\n            const { tag, started, subscriber } = await this.#getSub(event);\n            if (started) {\n                subscriber.stop();\n            }\n            this.#subs.delete(tag);\n        }\n        else {\n            for (const [tag, { started, subscriber }] of this.#subs) {\n                if (started) {\n                    subscriber.stop();\n                }\n                this.#subs.delete(tag);\n            }\n        }\n        return this;\n    }\n    // Alias for \"on\"\n    async addListener(event, listener) {\n        return await this.on(event, listener);\n    }\n    // Alias for \"off\"\n    async removeListener(event, listener) {\n        return this.off(event, listener);\n    }\n    /**\n     *  If this provider has been destroyed using the [[destroy]] method.\n     *\n     *  Once destroyed, all resources are reclaimed, internal event loops\n     *  and timers are cleaned up and no further requests may be sent to\n     *  the provider.\n     */\n    get destroyed() {\n        return this.#destroyed;\n    }\n    /**\n     *  Sub-classes may use this to shutdown any sockets or release their\n     *  resources and reject any pending requests.\n     *\n     *  Sub-classes **must** call ``super.destroy()``.\n     */\n    destroy() {\n        // Stop all listeners\n        this.removeAllListeners();\n        // Shut down all tiemrs\n        for (const timerId of this.#timers.keys()) {\n            this._clearTimeout(timerId);\n        }\n        this.#destroyed = true;\n    }\n    /**\n     *  Whether the provider is currently paused.\n     *\n     *  A paused provider will not emit any events, and generally should\n     *  not make any requests to the network, but that is up to sub-classes\n     *  to manage.\n     *\n     *  Setting ``paused = true`` is identical to calling ``.pause(false)``,\n     *  which will buffer any events that occur while paused until the\n     *  provider is unpaused.\n     */\n    get paused() { return (this.#pausedState != null); }\n    set paused(pause) {\n        if (!!pause === this.paused) {\n            return;\n        }\n        if (this.paused) {\n            this.resume();\n        }\n        else {\n            this.pause(false);\n        }\n    }\n    /**\n     *  Pause the provider. If %%dropWhilePaused%%, any events that occur\n     *  while paused are dropped, otherwise all events will be emitted once\n     *  the provider is unpaused.\n     */\n    pause(dropWhilePaused) {\n        this.#lastBlockNumber = -1;\n        if (this.#pausedState != null) {\n            if (this.#pausedState == !!dropWhilePaused) {\n                return;\n            }\n            assert(false, \"cannot change pause type; resume first\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"pause\"\n            });\n        }\n        this._forEachSubscriber((s) => s.pause(dropWhilePaused));\n        this.#pausedState = !!dropWhilePaused;\n        for (const timer of this.#timers.values()) {\n            // Clear the timer\n            if (timer.timer) {\n                clearTimeout(timer.timer);\n            }\n            // Remaining time needed for when we become unpaused\n            timer.time = getTime() - timer.time;\n        }\n    }\n    /**\n     *  Resume the provider.\n     */\n    resume() {\n        if (this.#pausedState == null) {\n            return;\n        }\n        this._forEachSubscriber((s) => s.resume());\n        this.#pausedState = null;\n        for (const timer of this.#timers.values()) {\n            // Remaining time when we were paused\n            let timeout = timer.time;\n            if (timeout < 0) {\n                timeout = 0;\n            }\n            // Start time (in cause paused, so we con compute remaininf time)\n            timer.time = getTime();\n            // Start the timer\n            setTimeout(timer.func, timeout);\n        }\n    }\n}\nfunction _parseString(result, start) {\n    try {\n        const bytes = _parseBytes(result, start);\n        if (bytes) {\n            return toUtf8String(bytes);\n        }\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result, start) {\n    if (result === \"0x\") {\n        return null;\n    }\n    try {\n        const offset = getNumber(dataSlice(result, start, start + 32));\n        const length = getNumber(dataSlice(result, offset, offset + 32));\n        return dataSlice(result, offset + 32, offset + 32 + length);\n    }\n    catch (error) { }\n    return null;\n}\nfunction numPad(value) {\n    const result = toBeArray(value);\n    if (result.length > 32) {\n        throw new Error(\"internal; should not happen\");\n    }\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\nfunction bytesPad(value) {\n    if ((value.length % 32) === 0) {\n        return value;\n    }\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\nconst empty = new Uint8Array([]);\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas) {\n    const result = [];\n    let byteCount = 0;\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(empty);\n        byteCount += 32;\n    }\n    for (let i = 0; i < datas.length; i++) {\n        const data = getBytes(datas[i]);\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n    return concat(result);\n}\nconst zeros = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nfunction parseOffchainLookup(data) {\n    const result = {\n        sender: \"\", urls: [], calldata: \"\", selector: \"\", extraData: \"\", errorArgs: []\n    };\n    assert(dataLength(data) >= 5 * 32, \"insufficient OffchainLookup data\", \"OFFCHAIN_FAULT\", {\n        reason: \"insufficient OffchainLookup data\"\n    });\n    const sender = dataSlice(data, 0, 32);\n    assert(dataSlice(sender, 0, 12) === dataSlice(zeros, 0, 12), \"corrupt OffchainLookup sender\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup sender\"\n    });\n    result.sender = dataSlice(sender, 12);\n    // Read the URLs from the response\n    try {\n        const urls = [];\n        const urlsOffset = getNumber(dataSlice(data, 32, 64));\n        const urlsLength = getNumber(dataSlice(data, urlsOffset, urlsOffset + 32));\n        const urlsData = dataSlice(data, urlsOffset + 32);\n        for (let u = 0; u < urlsLength; u++) {\n            const url = _parseString(urlsData, u * 32);\n            if (url == null) {\n                throw new Error(\"abort\");\n            }\n            urls.push(url);\n        }\n        result.urls = urls;\n    }\n    catch (error) {\n        assert(false, \"corrupt OffchainLookup urls\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup urls\"\n        });\n    }\n    // Get the CCIP calldata to forward\n    try {\n        const calldata = _parseBytes(data, 64);\n        if (calldata == null) {\n            throw new Error(\"abort\");\n        }\n        result.calldata = calldata;\n    }\n    catch (error) {\n        assert(false, \"corrupt OffchainLookup calldata\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup calldata\"\n        });\n    }\n    // Get the callbackSelector (bytes4)\n    assert(dataSlice(data, 100, 128) === dataSlice(zeros, 0, 28), \"corrupt OffchainLookup callbaackSelector\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup callbaackSelector\"\n    });\n    result.selector = dataSlice(data, 96, 100);\n    // Get the extra data to send back to the contract as context\n    try {\n        const extraData = _parseBytes(data, 128);\n        if (extraData == null) {\n            throw new Error(\"abort\");\n        }\n        result.extraData = extraData;\n    }\n    catch (error) {\n        assert(false, \"corrupt OffchainLookup extraData\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup extraData\"\n        });\n    }\n    result.errorArgs = \"sender,urls,calldata,selector,extraData\".split(/,/).map((k) => result[k]);\n    return result;\n}\n//# sourceMappingURL=abstract-provider.js.map","/**\n *  Generally the [[Wallet]] and [[JsonRpcSigner]] and their sub-classes\n *  are sufficent for most developers, but this is provided to\n *  fascilitate more complex Signers.\n *\n *  @_section: api/providers/abstract-signer: Subclassing Signer [abstract-signer]\n */\nimport { resolveAddress } from \"../address/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport { defineProperties, getBigInt, resolveProperties, assert, assertArgument } from \"../utils/index.js\";\nimport { copyRequest } from \"./provider.js\";\nfunction checkProvider(signer, operation) {\n    if (signer.provider) {\n        return signer.provider;\n    }\n    assert(false, \"missing provider\", \"UNSUPPORTED_OPERATION\", { operation });\n}\nasync function populate(signer, tx) {\n    let pop = copyRequest(tx);\n    if (pop.to != null) {\n        pop.to = resolveAddress(pop.to, signer);\n    }\n    if (pop.from != null) {\n        const from = pop.from;\n        pop.from = Promise.all([\n            signer.getAddress(),\n            resolveAddress(from, signer)\n        ]).then(([address, from]) => {\n            assertArgument(address.toLowerCase() === from.toLowerCase(), \"transaction from mismatch\", \"tx.from\", from);\n            return address;\n        });\n    }\n    else {\n        pop.from = signer.getAddress();\n    }\n    return await resolveProperties(pop);\n}\n/**\n *  An **AbstractSigner** includes most of teh functionality required\n *  to get a [[Signer]] working as expected, but requires a few\n *  Signer-specific methods be overridden.\n *\n */\nexport class AbstractSigner {\n    /**\n     *  The provider this signer is connected to.\n     */\n    provider;\n    /**\n     *  Creates a new Signer connected to %%provider%%.\n     */\n    constructor(provider) {\n        defineProperties(this, { provider: (provider || null) });\n    }\n    async getNonce(blockTag) {\n        return checkProvider(this, \"getTransactionCount\").getTransactionCount(await this.getAddress(), blockTag);\n    }\n    async populateCall(tx) {\n        const pop = await populate(this, tx);\n        return pop;\n    }\n    async populateTransaction(tx) {\n        const provider = checkProvider(this, \"populateTransaction\");\n        const pop = await populate(this, tx);\n        if (pop.nonce == null) {\n            pop.nonce = await this.getNonce(\"pending\");\n        }\n        if (pop.gasLimit == null) {\n            pop.gasLimit = await this.estimateGas(pop);\n        }\n        // Populate the chain ID\n        const network = await (this.provider).getNetwork();\n        if (pop.chainId != null) {\n            const chainId = getBigInt(pop.chainId);\n            assertArgument(chainId === network.chainId, \"transaction chainId mismatch\", \"tx.chainId\", tx.chainId);\n        }\n        else {\n            pop.chainId = network.chainId;\n        }\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (pop.maxFeePerGas != null || pop.maxPriorityFeePerGas != null);\n        if (pop.gasPrice != null && (pop.type === 2 || hasEip1559)) {\n            assertArgument(false, \"eip-1559 transaction do not support gasPrice\", \"tx\", tx);\n        }\n        else if ((pop.type === 0 || pop.type === 1) && hasEip1559) {\n            assertArgument(false, \"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"tx\", tx);\n        }\n        if ((pop.type === 2 || pop.type == null) && (pop.maxFeePerGas != null && pop.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            pop.type = 2;\n        }\n        else if (pop.type === 0 || pop.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n            assert(feeData.gasPrice != null, \"network does not support gasPrice\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"getGasPrice\"\n            });\n            // Populate missing gasPrice\n            if (pop.gasPrice == null) {\n                pop.gasPrice = feeData.gasPrice;\n            }\n        }\n        else {\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n            if (pop.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n                    // Upgrade transaction from null to eip-1559\n                    pop.type = 2;\n                    if (pop.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = pop.gasPrice;\n                        delete pop.gasPrice;\n                        pop.maxFeePerGas = gasPrice;\n                        pop.maxPriorityFeePerGas = gasPrice;\n                    }\n                    else {\n                        // Populate missing fee data\n                        if (pop.maxFeePerGas == null) {\n                            pop.maxFeePerGas = feeData.maxFeePerGas;\n                        }\n                        if (pop.maxPriorityFeePerGas == null) {\n                            pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                        }\n                    }\n                }\n                else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n                    // ...but they are trying to use EIP-1559 properties\n                    assert(!hasEip1559, \"network does not support EIP-1559\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"populateTransaction\"\n                    });\n                    // Populate missing fee data\n                    if (pop.gasPrice == null) {\n                        pop.gasPrice = feeData.gasPrice;\n                    }\n                    // Explicitly set untyped transaction to legacy\n                    // @TODO: Maybe this shold allow type 1?\n                    pop.type = 0;\n                }\n                else {\n                    // getFeeData has failed us.\n                    assert(false, \"failed to get consistent fee data\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n            }\n            else if (pop.type === 2 || pop.type === 3) {\n                // Explicitly using EIP-1559 or EIP-4844\n                // Populate missing fee data\n                if (pop.maxFeePerGas == null) {\n                    pop.maxFeePerGas = feeData.maxFeePerGas;\n                }\n                if (pop.maxPriorityFeePerGas == null) {\n                    pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                }\n            }\n        }\n        //@TOOD: Don't await all over the place; save them up for\n        // the end for better batching\n        return await resolveProperties(pop);\n    }\n    async estimateGas(tx) {\n        return checkProvider(this, \"estimateGas\").estimateGas(await this.populateCall(tx));\n    }\n    async call(tx) {\n        return checkProvider(this, \"call\").call(await this.populateCall(tx));\n    }\n    async resolveName(name) {\n        const provider = checkProvider(this, \"resolveName\");\n        return await provider.resolveName(name);\n    }\n    async sendTransaction(tx) {\n        const provider = checkProvider(this, \"sendTransaction\");\n        const pop = await this.populateTransaction(tx);\n        delete pop.from;\n        const txObj = Transaction.from(pop);\n        return await provider.broadcastTransaction(await this.signTransaction(txObj));\n    }\n}\n/**\n *  A **VoidSigner** is a class deisgned to allow an address to be used\n *  in any API which accepts a Signer, but for which there are no\n *  credentials available to perform any actual signing.\n *\n *  This for example allow impersonating an account for the purpose of\n *  static calls or estimating gas, but does not allow sending transactions.\n */\nexport class VoidSigner extends AbstractSigner {\n    /**\n     *  The signer address.\n     */\n    address;\n    /**\n     *  Creates a new **VoidSigner** with %%address%% attached to\n     *  %%provider%%.\n     */\n    constructor(address, provider) {\n        super(provider);\n        defineProperties(this, { address });\n    }\n    async getAddress() { return this.address; }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n    #throwUnsupported(suffix, operation) {\n        assert(false, `VoidSigner cannot sign ${suffix}`, \"UNSUPPORTED_OPERATION\", { operation });\n    }\n    async signTransaction(tx) {\n        this.#throwUnsupported(\"transactions\", \"signTransaction\");\n    }\n    async signMessage(message) {\n        this.#throwUnsupported(\"messages\", \"signMessage\");\n    }\n    async signTypedData(domain, types, value) {\n        this.#throwUnsupported(\"typed-data\", \"signTypedData\");\n    }\n}\n//# sourceMappingURL=abstract-signer.js.map","import { isError } from \"../utils/index.js\";\nimport { PollingEventSubscriber } from \"./subscriber-polling.js\";\nfunction copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n/**\n *  Some backends support subscribing to events using a Filter ID.\n *\n *  When subscribing with this technique, the node issues a unique\n *  //Filter ID//. At this point the node dedicates resources to\n *  the filter, so that periodic calls to follow up on the //Filter ID//\n *  will receive any events since the last call.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdSubscriber {\n    #provider;\n    #filterIdPromise;\n    #poller;\n    #running;\n    #network;\n    #hault;\n    /**\n     *  Creates a new **FilterIdSubscriber** which will used [[_subscribe]]\n     *  and [[_emitResults]] to setup the subscription and provide the event\n     *  to the %%provider%%.\n     */\n    constructor(provider) {\n        this.#provider = provider;\n        this.#filterIdPromise = null;\n        this.#poller = this.#poll.bind(this);\n        this.#running = false;\n        this.#network = null;\n        this.#hault = false;\n    }\n    /**\n     *  Sub-classes **must** override this to begin the subscription.\n     */\n    _subscribe(provider) {\n        throw new Error(\"subclasses must override this\");\n    }\n    /**\n     *  Sub-classes **must** override this handle the events.\n     */\n    _emitResults(provider, result) {\n        throw new Error(\"subclasses must override this\");\n    }\n    /**\n     *  Sub-classes **must** override this handle recovery on errors.\n     */\n    _recover(provider) {\n        throw new Error(\"subclasses must override this\");\n    }\n    async #poll(blockNumber) {\n        try {\n            // Subscribe if necessary\n            if (this.#filterIdPromise == null) {\n                this.#filterIdPromise = this._subscribe(this.#provider);\n            }\n            // Get the Filter ID\n            let filterId = null;\n            try {\n                filterId = await this.#filterIdPromise;\n            }\n            catch (error) {\n                if (!isError(error, \"UNSUPPORTED_OPERATION\") || error.operation !== \"eth_newFilter\") {\n                    throw error;\n                }\n            }\n            // The backend does not support Filter ID; downgrade to\n            // polling\n            if (filterId == null) {\n                this.#filterIdPromise = null;\n                this.#provider._recoverSubscriber(this, this._recover(this.#provider));\n                return;\n            }\n            const network = await this.#provider.getNetwork();\n            if (!this.#network) {\n                this.#network = network;\n            }\n            if (this.#network.chainId !== network.chainId) {\n                throw new Error(\"chaid changed\");\n            }\n            if (this.#hault) {\n                return;\n            }\n            const result = await this.#provider.send(\"eth_getFilterChanges\", [filterId]);\n            await this._emitResults(this.#provider, result);\n        }\n        catch (error) {\n            console.log(\"@TODO\", error);\n        }\n        this.#provider.once(\"block\", this.#poller);\n    }\n    #teardown() {\n        const filterIdPromise = this.#filterIdPromise;\n        if (filterIdPromise) {\n            this.#filterIdPromise = null;\n            filterIdPromise.then((filterId) => {\n                if (this.#provider.destroyed) {\n                    return;\n                }\n                this.#provider.send(\"eth_uninstallFilter\", [filterId]);\n            });\n        }\n    }\n    start() {\n        if (this.#running) {\n            return;\n        }\n        this.#running = true;\n        this.#poll(-2);\n    }\n    stop() {\n        if (!this.#running) {\n            return;\n        }\n        this.#running = false;\n        this.#hault = true;\n        this.#teardown();\n        this.#provider.off(\"block\", this.#poller);\n    }\n    pause(dropWhilePaused) {\n        if (dropWhilePaused) {\n            this.#teardown();\n        }\n        this.#provider.off(\"block\", this.#poller);\n    }\n    resume() { this.start(); }\n}\n/**\n *  A **FilterIdSubscriber** for receiving contract events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdEventSubscriber extends FilterIdSubscriber {\n    #event;\n    /**\n     *  Creates a new **FilterIdEventSubscriber** attached to %%provider%%\n     *  listening for %%filter%%.\n     */\n    constructor(provider, filter) {\n        super(provider);\n        this.#event = copy(filter);\n    }\n    _recover(provider) {\n        return new PollingEventSubscriber(provider, this.#event);\n    }\n    async _subscribe(provider) {\n        const filterId = await provider.send(\"eth_newFilter\", [this.#event]);\n        return filterId;\n    }\n    async _emitResults(provider, results) {\n        for (const result of results) {\n            provider.emit(this.#event, provider._wrapLog(result, provider._network));\n        }\n    }\n}\n/**\n *  A **FilterIdSubscriber** for receiving pending transactions events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdPendingSubscriber extends FilterIdSubscriber {\n    async _subscribe(provider) {\n        return await provider.send(\"eth_newPendingTransactionFilter\", []);\n    }\n    async _emitResults(provider, results) {\n        for (const result of results) {\n            provider.emit(\"pending\", result);\n        }\n    }\n}\n//# sourceMappingURL=subscriber-filterid.js.map","/**\n *  One of the most common ways to interact with the blockchain is\n *  by a node running a JSON-RPC interface which can be connected to,\n *  based on the transport, using:\n *\n *  - HTTP or HTTPS - [[JsonRpcProvider]]\n *  - WebSocket - [[WebSocketProvider]]\n *  - IPC - [[IpcSocketProvider]]\n *\n * @_section: api/providers/jsonrpc:JSON-RPC Provider  [about-jsonrpcProvider]\n */\n// @TODO:\n// - Add the batching API\n// https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/eth1.0-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=true&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false\nimport { AbiCoder } from \"../abi/index.js\";\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { TypedDataEncoder } from \"../hash/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\nimport { defineProperties, getBigInt, hexlify, isHexString, toQuantity, toUtf8Bytes, isError, makeError, assert, assertArgument, FetchRequest, resolveProperties } from \"../utils/index.js\";\nimport { AbstractProvider, UnmanagedSubscriber } from \"./abstract-provider.js\";\nimport { AbstractSigner } from \"./abstract-signer.js\";\nimport { Network } from \"./network.js\";\nimport { FilterIdEventSubscriber, FilterIdPendingSubscriber } from \"./subscriber-filterid.js\";\nimport { PollingEventSubscriber } from \"./subscriber-polling.js\";\nconst Primitive = \"bigint,boolean,function,number,string,symbol\".split(/,/g);\n//const Methods = \"getAddress,then\".split(/,/g);\nfunction deepCopy(value) {\n    if (value == null || Primitive.indexOf(typeof (value)) >= 0) {\n        return value;\n    }\n    // Keep any Addressable\n    if (typeof (value.getAddress) === \"function\") {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        return (value.map(deepCopy));\n    }\n    if (typeof (value) === \"object\") {\n        return Object.keys(value).reduce((accum, key) => {\n            accum[key] = value[key];\n            return accum;\n        }, {});\n    }\n    throw new Error(`should not happen: ${value} (${typeof (value)})`);\n}\nfunction stall(duration) {\n    return new Promise((resolve) => { setTimeout(resolve, duration); });\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nfunction isPollable(value) {\n    return (value && typeof (value.pollingInterval) === \"number\");\n}\nconst defaultOptions = {\n    polling: false,\n    staticNetwork: null,\n    batchStallTime: 10,\n    batchMaxSize: (1 << 20),\n    batchMaxCount: 100,\n    cacheTimeout: 250,\n    pollingInterval: 4000\n};\n// @TODO: Unchecked Signers\nexport class JsonRpcSigner extends AbstractSigner {\n    address;\n    constructor(provider, address) {\n        super(provider);\n        address = getAddress(address);\n        defineProperties(this, { address });\n    }\n    connect(provider) {\n        assert(false, \"cannot reconnect JsonRpcSigner\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"signer.connect\"\n        });\n    }\n    async getAddress() {\n        return this.address;\n    }\n    // JSON-RPC will automatially fill in nonce, etc. so we just check from\n    async populateTransaction(tx) {\n        return await this.populateCall(tx);\n    }\n    // Returns just the hash of the transaction after sent, which is what\n    // the bare JSON-RPC API does;\n    async sendUncheckedTransaction(_tx) {\n        const tx = deepCopy(_tx);\n        const promises = [];\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const _from = tx.from;\n            promises.push((async () => {\n                const from = await resolveAddress(_from, this.provider);\n                assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(), \"from address mismatch\", \"transaction\", _tx);\n                tx.from = from;\n            })());\n        }\n        else {\n            tx.from = this.address;\n        }\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (tx.gasLimit == null) {\n            promises.push((async () => {\n                tx.gasLimit = await this.provider.estimateGas({ ...tx, from: this.address });\n            })());\n        }\n        // The address may be an ENS name or Addressable\n        if (tx.to != null) {\n            const _to = tx.to;\n            promises.push((async () => {\n                tx.to = await resolveAddress(_to, this.provider);\n            })());\n        }\n        // Wait until all of our properties are filled in\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return this.provider.send(\"eth_sendTransaction\", [hexTx]);\n    }\n    async sendTransaction(tx) {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider.getBlockNumber();\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(tx);\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return await (new Promise((resolve, reject) => {\n            const timeouts = [1000, 100];\n            let invalids = 0;\n            const checkTx = async () => {\n                try {\n                    // Try getting the transaction\n                    const tx = await this.provider.getTransaction(hash);\n                    if (tx != null) {\n                        resolve(tx.replaceableTransaction(blockNumber));\n                        return;\n                    }\n                }\n                catch (error) {\n                    // If we were cancelled: stop polling.\n                    // If the data is bad: the node returns bad transactions\n                    // If the network changed: calling again will also fail\n                    // If unsupported: likely destroyed\n                    if (isError(error, \"CANCELLED\") || isError(error, \"BAD_DATA\") ||\n                        isError(error, \"NETWORK_ERROR\") || isError(error, \"UNSUPPORTED_OPERATION\")) {\n                        if (error.info == null) {\n                            error.info = {};\n                        }\n                        error.info.sendTransactionHash = hash;\n                        reject(error);\n                        return;\n                    }\n                    // Stop-gap for misbehaving backends; see #4513\n                    if (isError(error, \"INVALID_ARGUMENT\")) {\n                        invalids++;\n                        if (error.info == null) {\n                            error.info = {};\n                        }\n                        error.info.sendTransactionHash = hash;\n                        if (invalids > 10) {\n                            reject(error);\n                            return;\n                        }\n                    }\n                    // Notify anyone that cares; but we will try again, since\n                    // it is likely an intermittent service error\n                    this.provider.emit(\"error\", makeError(\"failed to fetch transation after sending (will try again)\", \"UNKNOWN_ERROR\", { error }));\n                }\n                // Wait another 4 seconds\n                this.provider._setTimeout(() => { checkTx(); }, timeouts.pop() || 4000);\n            };\n            checkTx();\n        }));\n    }\n    async signTransaction(_tx) {\n        const tx = deepCopy(_tx);\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const from = await resolveAddress(tx.from, this.provider);\n            assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(), \"from address mismatch\", \"transaction\", _tx);\n            tx.from = from;\n        }\n        else {\n            tx.from = this.address;\n        }\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return await this.provider.send(\"eth_signTransaction\", [hexTx]);\n    }\n    async signMessage(_message) {\n        const message = ((typeof (_message) === \"string\") ? toUtf8Bytes(_message) : _message);\n        return await this.provider.send(\"personal_sign\", [\n            hexlify(message), this.address.toLowerCase()\n        ]);\n    }\n    async signTypedData(domain, types, _value) {\n        const value = deepCopy(_value);\n        // Populate any ENS names (in-place)\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (value) => {\n            const address = await resolveAddress(value);\n            assertArgument(address != null, \"TypedData does not support null address\", \"value\", value);\n            return address;\n        });\n        return await this.provider.send(\"eth_signTypedData_v4\", [\n            this.address.toLowerCase(),\n            JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n        ]);\n    }\n    async unlock(password) {\n        return this.provider.send(\"personal_unlockAccount\", [\n            this.address.toLowerCase(), password, null\n        ]);\n    }\n    // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n    async _legacySignMessage(_message) {\n        const message = ((typeof (_message) === \"string\") ? toUtf8Bytes(_message) : _message);\n        return await this.provider.send(\"eth_sign\", [\n            this.address.toLowerCase(), hexlify(message)\n        ]);\n    }\n}\n/**\n *  The JsonRpcApiProvider is an abstract class and **MUST** be\n *  sub-classed.\n *\n *  It provides the base for all JSON-RPC-based Provider interaction.\n *\n *  Sub-classing Notes:\n *  - a sub-class MUST override _send\n *  - a sub-class MUST call the `_start()` method once connected\n */\nexport class JsonRpcApiProvider extends AbstractProvider {\n    #options;\n    // The next ID to use for the JSON-RPC ID field\n    #nextId;\n    // Payloads are queued and triggered in batches using the drainTimer\n    #payloads;\n    #drainTimer;\n    #notReady;\n    #network;\n    #pendingDetectNetwork;\n    #scheduleDrain() {\n        if (this.#drainTimer) {\n            return;\n        }\n        // If we aren't using batching, no harm in sending it immediately\n        const stallTime = (this._getOption(\"batchMaxCount\") === 1) ? 0 : this._getOption(\"batchStallTime\");\n        this.#drainTimer = setTimeout(() => {\n            this.#drainTimer = null;\n            const payloads = this.#payloads;\n            this.#payloads = [];\n            while (payloads.length) {\n                // Create payload batches that satisfy our batch constraints\n                const batch = [(payloads.shift())];\n                while (payloads.length) {\n                    if (batch.length === this.#options.batchMaxCount) {\n                        break;\n                    }\n                    batch.push((payloads.shift()));\n                    const bytes = JSON.stringify(batch.map((p) => p.payload));\n                    if (bytes.length > this.#options.batchMaxSize) {\n                        payloads.unshift((batch.pop()));\n                        break;\n                    }\n                }\n                // Process the result to each payload\n                (async () => {\n                    const payload = ((batch.length === 1) ? batch[0].payload : batch.map((p) => p.payload));\n                    this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n                    try {\n                        const result = await this._send(payload);\n                        this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n                        // Process results in batch order\n                        for (const { resolve, reject, payload } of batch) {\n                            if (this.destroyed) {\n                                reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: payload.method }));\n                                continue;\n                            }\n                            // Find the matching result\n                            const resp = result.filter((r) => (r.id === payload.id))[0];\n                            // No result; the node failed us in unexpected ways\n                            if (resp == null) {\n                                const error = makeError(\"missing response for request\", \"BAD_DATA\", {\n                                    value: result, info: { payload }\n                                });\n                                this.emit(\"error\", error);\n                                reject(error);\n                                continue;\n                            }\n                            // The response is an error\n                            if (\"error\" in resp) {\n                                reject(this.getRpcError(payload, resp));\n                                continue;\n                            }\n                            // All good; send the result\n                            resolve(resp.result);\n                        }\n                    }\n                    catch (error) {\n                        this.emit(\"debug\", { action: \"receiveRpcError\", error });\n                        for (const { reject } of batch) {\n                            // @TODO: augment the error with the payload\n                            reject(error);\n                        }\n                    }\n                })();\n            }\n        }, stallTime);\n    }\n    constructor(network, options) {\n        super(network, options);\n        this.#nextId = 1;\n        this.#options = Object.assign({}, defaultOptions, options || {});\n        this.#payloads = [];\n        this.#drainTimer = null;\n        this.#network = null;\n        this.#pendingDetectNetwork = null;\n        {\n            let resolve = null;\n            const promise = new Promise((_resolve) => {\n                resolve = _resolve;\n            });\n            this.#notReady = { promise, resolve };\n        }\n        const staticNetwork = this._getOption(\"staticNetwork\");\n        if (typeof (staticNetwork) === \"boolean\") {\n            assertArgument(!staticNetwork || network !== \"any\", \"staticNetwork cannot be used on special network 'any'\", \"options\", options);\n            if (staticNetwork && network != null) {\n                this.#network = Network.from(network);\n            }\n        }\n        else if (staticNetwork) {\n            // Make sure any static network is compatbile with the provided netwrok\n            assertArgument(network == null || staticNetwork.matches(network), \"staticNetwork MUST match network object\", \"options\", options);\n            this.#network = staticNetwork;\n        }\n    }\n    /**\n     *  Returns the value associated with the option %%key%%.\n     *\n     *  Sub-classes can use this to inquire about configuration options.\n     */\n    _getOption(key) {\n        return this.#options[key];\n    }\n    /**\n     *  Gets the [[Network]] this provider has committed to. On each call, the network\n     *  is detected, and if it has changed, the call will reject.\n     */\n    get _network() {\n        assert(this.#network, \"network is not available yet\", \"NETWORK_ERROR\");\n        return this.#network;\n    }\n    /**\n     *  Resolves to the non-normalized value by performing %%req%%.\n     *\n     *  Sub-classes may override this to modify behavior of actions,\n     *  and should generally call ``super._perform`` as a fallback.\n     */\n    async _perform(req) {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (req.method === \"call\" || req.method === \"estimateGas\") {\n            let tx = req.transaction;\n            if (tx && tx.type != null && getBigInt(tx.type)) {\n                // If there are no EIP-1559 or newer properties, it might be pre-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        req = Object.assign({}, req, {\n                            transaction: Object.assign({}, tx, { type: undefined })\n                        });\n                    }\n                }\n            }\n        }\n        const request = this.getRpcRequest(req);\n        if (request != null) {\n            return await this.send(request.method, request.args);\n        }\n        return super._perform(req);\n    }\n    /**\n     *  Sub-classes may override this; it detects the *actual* network that\n     *  we are **currently** connected to.\n     *\n     *  Keep in mind that [[send]] may only be used once [[ready]], otherwise the\n     *  _send primitive must be used instead.\n     */\n    async _detectNetwork() {\n        const network = this._getOption(\"staticNetwork\");\n        if (network) {\n            if (network === true) {\n                if (this.#network) {\n                    return this.#network;\n                }\n            }\n            else {\n                return network;\n            }\n        }\n        if (this.#pendingDetectNetwork) {\n            return await this.#pendingDetectNetwork;\n        }\n        // If we are ready, use ``send``, which enabled requests to be batched\n        if (this.ready) {\n            this.#pendingDetectNetwork = (async () => {\n                try {\n                    const result = Network.from(getBigInt(await this.send(\"eth_chainId\", [])));\n                    this.#pendingDetectNetwork = null;\n                    return result;\n                }\n                catch (error) {\n                    this.#pendingDetectNetwork = null;\n                    throw error;\n                }\n            })();\n            return await this.#pendingDetectNetwork;\n        }\n        // We are not ready yet; use the primitive _send\n        this.#pendingDetectNetwork = (async () => {\n            const payload = {\n                id: this.#nextId++, method: \"eth_chainId\", params: [], jsonrpc: \"2.0\"\n            };\n            this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n            let result;\n            try {\n                result = (await this._send(payload))[0];\n                this.#pendingDetectNetwork = null;\n            }\n            catch (error) {\n                this.#pendingDetectNetwork = null;\n                this.emit(\"debug\", { action: \"receiveRpcError\", error });\n                throw error;\n            }\n            this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n            if (\"result\" in result) {\n                return Network.from(getBigInt(result.result));\n            }\n            throw this.getRpcError(payload, result);\n        })();\n        return await this.#pendingDetectNetwork;\n    }\n    /**\n     *  Sub-classes **MUST** call this. Until [[_start]] has been called, no calls\n     *  will be passed to [[_send]] from [[send]]. If it is overridden, then\n     *  ``super._start()`` **MUST** be called.\n     *\n     *  Calling it multiple times is safe and has no effect.\n     */\n    _start() {\n        if (this.#notReady == null || this.#notReady.resolve == null) {\n            return;\n        }\n        this.#notReady.resolve();\n        this.#notReady = null;\n        (async () => {\n            // Bootstrap the network\n            while (this.#network == null && !this.destroyed) {\n                try {\n                    this.#network = await this._detectNetwork();\n                }\n                catch (error) {\n                    if (this.destroyed) {\n                        break;\n                    }\n                    console.log(\"JsonRpcProvider failed to detect network and cannot start up; retry in 1s (perhaps the URL is wrong or the node is not started)\");\n                    this.emit(\"error\", makeError(\"failed to bootstrap network detection\", \"NETWORK_ERROR\", { event: \"initial-network-discovery\", info: { error } }));\n                    await stall(1000);\n                }\n            }\n            // Start dispatching requests\n            this.#scheduleDrain();\n        })();\n    }\n    /**\n     *  Resolves once the [[_start]] has been called. This can be used in\n     *  sub-classes to defer sending data until the connection has been\n     *  established.\n     */\n    async _waitUntilReady() {\n        if (this.#notReady == null) {\n            return;\n        }\n        return await this.#notReady.promise;\n    }\n    /**\n     *  Return a Subscriber that will manage the %%sub%%.\n     *\n     *  Sub-classes may override this to modify the behavior of\n     *  subscription management.\n     */\n    _getSubscriber(sub) {\n        // Pending Filters aren't availble via polling\n        if (sub.type === \"pending\") {\n            return new FilterIdPendingSubscriber(this);\n        }\n        if (sub.type === \"event\") {\n            if (this._getOption(\"polling\")) {\n                return new PollingEventSubscriber(this, sub.filter);\n            }\n            return new FilterIdEventSubscriber(this, sub.filter);\n        }\n        // Orphaned Logs are handled automatically, by the filter, since\n        // logs with removed are emitted by it\n        if (sub.type === \"orphan\" && sub.filter.orphan === \"drop-log\") {\n            return new UnmanagedSubscriber(\"orphan\");\n        }\n        return super._getSubscriber(sub);\n    }\n    /**\n     *  Returns true only if the [[_start]] has been called.\n     */\n    get ready() { return this.#notReady == null; }\n    /**\n     *  Returns %%tx%% as a normalized JSON-RPC transaction request,\n     *  which has all values hexlified and any numeric values converted\n     *  to Quantity values.\n     */\n    getRpcTransaction(tx) {\n        const result = {};\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            let dstKey = key;\n            if (key === \"gasLimit\") {\n                dstKey = \"gas\";\n            }\n            result[dstKey] = toQuantity(getBigInt(tx[key], `tx.${key}`));\n        });\n        // Make sure addresses and data are lowercase\n        [\"from\", \"to\", \"data\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            result[key] = hexlify(tx[key]);\n        });\n        // Normalize the access list object\n        if (tx.accessList) {\n            result[\"accessList\"] = accessListify(tx.accessList);\n        }\n        if (tx.blobVersionedHashes) {\n            // @TODO: Remove this <any> case once EIP-4844 added to prepared tx\n            result[\"blobVersionedHashes\"] = tx.blobVersionedHashes.map(h => h.toLowerCase());\n        }\n        // @TODO: blobs should probably also be copied over, optionally\n        // accounting for the kzg property to backfill blobVersionedHashes\n        // using the commitment. Or should that be left as an exercise to\n        // the caller?\n        return result;\n    }\n    /**\n     *  Returns the request method and arguments required to perform\n     *  %%req%%.\n     */\n    getRpcRequest(req) {\n        switch (req.method) {\n            case \"chainId\":\n                return { method: \"eth_chainId\", args: [] };\n            case \"getBlockNumber\":\n                return { method: \"eth_blockNumber\", args: [] };\n            case \"getGasPrice\":\n                return { method: \"eth_gasPrice\", args: [] };\n            case \"getPriorityFee\":\n                return { method: \"eth_maxPriorityFeePerGas\", args: [] };\n            case \"getBalance\":\n                return {\n                    method: \"eth_getBalance\",\n                    args: [getLowerCase(req.address), req.blockTag]\n                };\n            case \"getTransactionCount\":\n                return {\n                    method: \"eth_getTransactionCount\",\n                    args: [getLowerCase(req.address), req.blockTag]\n                };\n            case \"getCode\":\n                return {\n                    method: \"eth_getCode\",\n                    args: [getLowerCase(req.address), req.blockTag]\n                };\n            case \"getStorage\":\n                return {\n                    method: \"eth_getStorageAt\",\n                    args: [\n                        getLowerCase(req.address),\n                        (\"0x\" + req.position.toString(16)),\n                        req.blockTag\n                    ]\n                };\n            case \"broadcastTransaction\":\n                return {\n                    method: \"eth_sendRawTransaction\",\n                    args: [req.signedTransaction]\n                };\n            case \"getBlock\":\n                if (\"blockTag\" in req) {\n                    return {\n                        method: \"eth_getBlockByNumber\",\n                        args: [req.blockTag, !!req.includeTransactions]\n                    };\n                }\n                else if (\"blockHash\" in req) {\n                    return {\n                        method: \"eth_getBlockByHash\",\n                        args: [req.blockHash, !!req.includeTransactions]\n                    };\n                }\n                break;\n            case \"getTransaction\":\n                return {\n                    method: \"eth_getTransactionByHash\",\n                    args: [req.hash]\n                };\n            case \"getTransactionReceipt\":\n                return {\n                    method: \"eth_getTransactionReceipt\",\n                    args: [req.hash]\n                };\n            case \"call\":\n                return {\n                    method: \"eth_call\",\n                    args: [this.getRpcTransaction(req.transaction), req.blockTag]\n                };\n            case \"estimateGas\": {\n                return {\n                    method: \"eth_estimateGas\",\n                    args: [this.getRpcTransaction(req.transaction)]\n                };\n            }\n            case \"getLogs\":\n                if (req.filter && req.filter.address != null) {\n                    if (Array.isArray(req.filter.address)) {\n                        req.filter.address = req.filter.address.map(getLowerCase);\n                    }\n                    else {\n                        req.filter.address = getLowerCase(req.filter.address);\n                    }\n                }\n                return { method: \"eth_getLogs\", args: [req.filter] };\n        }\n        return null;\n    }\n    /**\n     *  Returns an ethers-style Error for the given JSON-RPC error\n     *  %%payload%%, coalescing the various strings and error shapes\n     *  that different nodes return, coercing them into a machine-readable\n     *  standardized error.\n     */\n    getRpcError(payload, _error) {\n        const { method } = payload;\n        const { error } = _error;\n        if (method === \"eth_estimateGas\" && error.message) {\n            const msg = error.message;\n            if (!msg.match(/revert/i) && msg.match(/insufficient funds/i)) {\n                return makeError(\"insufficient funds\", \"INSUFFICIENT_FUNDS\", {\n                    transaction: (payload.params[0]),\n                    info: { payload, error }\n                });\n            }\n        }\n        if (method === \"eth_call\" || method === \"eth_estimateGas\") {\n            const result = spelunkData(error);\n            const e = AbiCoder.getBuiltinCallException((method === \"eth_call\") ? \"call\" : \"estimateGas\", (payload.params[0]), (result ? result.data : null));\n            e.info = { error, payload };\n            return e;\n        }\n        // Only estimateGas and call can return arbitrary contract-defined text, so now we\n        // we can process text safely.\n        const message = JSON.stringify(spelunkMessage(error));\n        if (typeof (error.message) === \"string\" && error.message.match(/user denied|ethers-user-denied/i)) {\n            const actionMap = {\n                eth_sign: \"signMessage\",\n                personal_sign: \"signMessage\",\n                eth_signTypedData_v4: \"signTypedData\",\n                eth_signTransaction: \"signTransaction\",\n                eth_sendTransaction: \"sendTransaction\",\n                eth_requestAccounts: \"requestAccess\",\n                wallet_requestAccounts: \"requestAccess\",\n            };\n            return makeError(`user rejected action`, \"ACTION_REJECTED\", {\n                action: (actionMap[method] || \"unknown\"),\n                reason: \"rejected\",\n                info: { payload, error }\n            });\n        }\n        if (method === \"eth_sendRawTransaction\" || method === \"eth_sendTransaction\") {\n            const transaction = (payload.params[0]);\n            if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n                return makeError(\"insufficient funds for intrinsic transaction cost\", \"INSUFFICIENT_FUNDS\", {\n                    transaction, info: { error }\n                });\n            }\n            if (message.match(/nonce/i) && message.match(/too low/i)) {\n                return makeError(\"nonce has already been used\", \"NONCE_EXPIRED\", { transaction, info: { error } });\n            }\n            // \"replacement transaction underpriced\"\n            if (message.match(/replacement transaction/i) && message.match(/underpriced/i)) {\n                return makeError(\"replacement fee too low\", \"REPLACEMENT_UNDERPRICED\", { transaction, info: { error } });\n            }\n            if (message.match(/only replay-protected/i)) {\n                return makeError(\"legacy pre-eip-155 transactions not supported\", \"UNSUPPORTED_OPERATION\", {\n                    operation: method, info: { transaction, info: { error } }\n                });\n            }\n        }\n        let unsupported = !!message.match(/the method .* does not exist/i);\n        if (!unsupported) {\n            if (error && error.details && error.details.startsWith(\"Unauthorized method:\")) {\n                unsupported = true;\n            }\n        }\n        if (unsupported) {\n            return makeError(\"unsupported operation\", \"UNSUPPORTED_OPERATION\", {\n                operation: payload.method, info: { error, payload }\n            });\n        }\n        return makeError(\"could not coalesce error\", \"UNKNOWN_ERROR\", { error, payload });\n    }\n    /**\n     *  Requests the %%method%% with %%params%% via the JSON-RPC protocol\n     *  over the underlying channel. This can be used to call methods\n     *  on the backend that do not have a high-level API within the Provider\n     *  API.\n     *\n     *  This method queues requests according to the batch constraints\n     *  in the options, assigns the request a unique ID.\n     *\n     *  **Do NOT override** this method in sub-classes; instead\n     *  override [[_send]] or force the options values in the\n     *  call to the constructor to modify this method's behavior.\n     */\n    send(method, params) {\n        // @TODO: cache chainId?? purge on switch_networks\n        // We have been destroyed; no operations are supported anymore\n        if (this.destroyed) {\n            return Promise.reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: method }));\n        }\n        const id = this.#nextId++;\n        const promise = new Promise((resolve, reject) => {\n            this.#payloads.push({\n                resolve, reject,\n                payload: { method, params, id, jsonrpc: \"2.0\" }\n            });\n        });\n        // If there is not a pending drainTimer, set one\n        this.#scheduleDrain();\n        return promise;\n    }\n    /**\n     *  Resolves to the [[Signer]] account for  %%address%% managed by\n     *  the client.\n     *\n     *  If the %%address%% is a number, it is used as an index in the\n     *  the accounts from [[listAccounts]].\n     *\n     *  This can only be used on clients which manage accounts (such as\n     *  Geth with imported account or MetaMask).\n     *\n     *  Throws if the account doesn't exist.\n     */\n    async getSigner(address) {\n        if (address == null) {\n            address = 0;\n        }\n        const accountsPromise = this.send(\"eth_accounts\", []);\n        // Account index\n        if (typeof (address) === \"number\") {\n            const accounts = (await accountsPromise);\n            if (address >= accounts.length) {\n                throw new Error(\"no such account\");\n            }\n            return new JsonRpcSigner(this, accounts[address]);\n        }\n        const { accounts } = await resolveProperties({\n            network: this.getNetwork(),\n            accounts: accountsPromise\n        });\n        // Account address\n        address = getAddress(address);\n        for (const account of accounts) {\n            if (getAddress(account) === address) {\n                return new JsonRpcSigner(this, address);\n            }\n        }\n        throw new Error(\"invalid account\");\n    }\n    async listAccounts() {\n        const accounts = await this.send(\"eth_accounts\", []);\n        return accounts.map((a) => new JsonRpcSigner(this, a));\n    }\n    destroy() {\n        // Stop processing requests\n        if (this.#drainTimer) {\n            clearTimeout(this.#drainTimer);\n            this.#drainTimer = null;\n        }\n        // Cancel all pending requests\n        for (const { payload, reject } of this.#payloads) {\n            reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: payload.method }));\n        }\n        this.#payloads = [];\n        // Parent clean-up\n        super.destroy();\n    }\n}\n// @TODO: remove this in v7, it is not exported because this functionality\n// is exposed in the JsonRpcApiProvider by setting polling to true. It should\n// be safe to remove regardless, because it isn't reachable, but just in case.\n/**\n *  @_ignore:\n */\nexport class JsonRpcApiPollingProvider extends JsonRpcApiProvider {\n    #pollingInterval;\n    constructor(network, options) {\n        super(network, options);\n        let pollingInterval = this._getOption(\"pollingInterval\");\n        if (pollingInterval == null) {\n            pollingInterval = defaultOptions.pollingInterval;\n        }\n        this.#pollingInterval = pollingInterval;\n    }\n    _getSubscriber(sub) {\n        const subscriber = super._getSubscriber(sub);\n        if (isPollable(subscriber)) {\n            subscriber.pollingInterval = this.#pollingInterval;\n        }\n        return subscriber;\n    }\n    /**\n     *  The polling interval (default: 4000 ms)\n     */\n    get pollingInterval() { return this.#pollingInterval; }\n    set pollingInterval(value) {\n        if (!Number.isInteger(value) || value < 0) {\n            throw new Error(\"invalid interval\");\n        }\n        this.#pollingInterval = value;\n        this._forEachSubscriber((sub) => {\n            if (isPollable(sub)) {\n                sub.pollingInterval = this.#pollingInterval;\n            }\n        });\n    }\n}\n/**\n *  The JsonRpcProvider is one of the most common Providers,\n *  which performs all operations over HTTP (or HTTPS) requests.\n *\n *  Events are processed by polling the backend for the current block\n *  number; when it advances, all block-base events are then checked\n *  for updates.\n */\nexport class JsonRpcProvider extends JsonRpcApiPollingProvider {\n    #connect;\n    constructor(url, network, options) {\n        if (url == null) {\n            url = \"http:/\\/localhost:8545\";\n        }\n        super(network, options);\n        if (typeof (url) === \"string\") {\n            this.#connect = new FetchRequest(url);\n        }\n        else {\n            this.#connect = url.clone();\n        }\n    }\n    _getConnection() {\n        return this.#connect.clone();\n    }\n    async send(method, params) {\n        // All requests are over HTTP, so we can just start handling requests\n        // We do this here rather than the constructor so that we don't send any\n        // requests to the network (i.e. eth_chainId) until we absolutely have to.\n        await this._start();\n        return await super.send(method, params);\n    }\n    async _send(payload) {\n        // Configure a POST connection for the requested method\n        const request = this._getConnection();\n        request.body = JSON.stringify(payload);\n        request.setHeader(\"content-type\", \"application/json\");\n        const response = await request.send();\n        response.assertOk();\n        let resp = response.bodyJson;\n        if (!Array.isArray(resp)) {\n            resp = [resp];\n        }\n        return resp;\n    }\n}\nfunction spelunkData(value) {\n    if (value == null) {\n        return null;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof (value.message) === \"string\" && value.message.match(/revert/i) && isHexString(value.data)) {\n        return { message: value.message, data: value.data };\n    }\n    // Spelunk further...\n    if (typeof (value) === \"object\") {\n        for (const key in value) {\n            const result = spelunkData(value[key]);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof (value) === \"string\") {\n        try {\n            return spelunkData(JSON.parse(value));\n        }\n        catch (error) { }\n    }\n    return null;\n}\nfunction _spelunkMessage(value, result) {\n    if (value == null) {\n        return;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof (value.message) === \"string\") {\n        result.push(value.message);\n    }\n    // Spelunk further...\n    if (typeof (value) === \"object\") {\n        for (const key in value) {\n            _spelunkMessage(value[key], result);\n        }\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof (value) === \"string\") {\n        try {\n            return _spelunkMessage(JSON.parse(value), result);\n        }\n        catch (error) { }\n    }\n}\nfunction spelunkMessage(value) {\n    const result = [];\n    _spelunkMessage(value, result);\n    return result;\n}\n//# sourceMappingURL=provider-jsonrpc.js.map","import { getAddress, resolveAddress } from \"../address/index.js\";\nimport { hashMessage, TypedDataEncoder } from \"../hash/index.js\";\nimport { AbstractSigner, copyRequest } from \"../providers/index.js\";\nimport { computeAddress, Transaction } from \"../transaction/index.js\";\nimport { defineProperties, resolveProperties, assert, assertArgument } from \"../utils/index.js\";\n/**\n *  The **BaseWallet** is a stream-lined implementation of a\n *  [[Signer]] that operates with a private key.\n *\n *  It is preferred to use the [[Wallet]] class, as it offers\n *  additional functionality and simplifies loading a variety\n *  of JSON formats, Mnemonic Phrases, etc.\n *\n *  This class may be of use for those attempting to implement\n *  a minimal Signer.\n */\nexport class BaseWallet extends AbstractSigner {\n    /**\n     *  The wallet address.\n     */\n    address;\n    #signingKey;\n    /**\n     *  Creates a new BaseWallet for %%privateKey%%, optionally\n     *  connected to %%provider%%.\n     *\n     *  If %%provider%% is not specified, only offline methods can\n     *  be used.\n     */\n    constructor(privateKey, provider) {\n        super(provider);\n        assertArgument(privateKey && typeof (privateKey.sign) === \"function\", \"invalid private key\", \"privateKey\", \"[ REDACTED ]\");\n        this.#signingKey = privateKey;\n        const address = computeAddress(this.signingKey.publicKey);\n        defineProperties(this, { address });\n    }\n    // Store private values behind getters to reduce visibility\n    // in console.log\n    /**\n     *  The [[SigningKey]] used for signing payloads.\n     */\n    get signingKey() { return this.#signingKey; }\n    /**\n     *  The private key for this wallet.\n     */\n    get privateKey() { return this.signingKey.privateKey; }\n    async getAddress() { return this.address; }\n    connect(provider) {\n        return new BaseWallet(this.#signingKey, provider);\n    }\n    async signTransaction(tx) {\n        tx = copyRequest(tx);\n        // Replace any Addressable or ENS name with an address\n        const { to, from } = await resolveProperties({\n            to: (tx.to ? resolveAddress(tx.to, this.provider) : undefined),\n            from: (tx.from ? resolveAddress(tx.from, this.provider) : undefined)\n        });\n        if (to != null) {\n            tx.to = to;\n        }\n        if (from != null) {\n            tx.from = from;\n        }\n        if (tx.from != null) {\n            assertArgument(getAddress((tx.from)) === this.address, \"transaction from address mismatch\", \"tx.from\", tx.from);\n            delete tx.from;\n        }\n        // Build the transaction\n        const btx = Transaction.from(tx);\n        btx.signature = this.signingKey.sign(btx.unsignedHash);\n        return btx.serialized;\n    }\n    async signMessage(message) {\n        return this.signMessageSync(message);\n    }\n    // @TODO: Add a secialized signTx and signTyped sync that enforces\n    // all parameters are known?\n    /**\n     *  Returns the signature for %%message%% signed with this wallet.\n     */\n    signMessageSync(message) {\n        return this.signingKey.sign(hashMessage(message)).serialized;\n    }\n    async signTypedData(domain, types, value) {\n        // Populate any ENS names\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (name) => {\n            // @TODO: this should use resolveName; addresses don't\n            //        need a provider\n            assert(this.provider != null, \"cannot resolve ENS names without a provider\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"resolveName\",\n                info: { name }\n            });\n            const address = await this.provider.resolveName(name);\n            assert(address != null, \"unconfigured ENS name\", \"UNCONFIGURED_NAME\", {\n                value: name\n            });\n            return address;\n        });\n        return this.signingKey.sign(TypedDataEncoder.hash(populated.domain, types, populated.value)).serialized;\n    }\n}\n//# sourceMappingURL=base-wallet.js.map","import { keccak256 } from \"../crypto/index.js\";\nimport { MessagePrefix } from \"../constants/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport { concat, toUtf8Bytes } from \"../utils/index.js\";\n/**\n *  Computes the [[link-eip-191]] personal-sign message digest to sign.\n *\n *  This prefixes the message with [[MessagePrefix]] and the decimal length\n *  of %%message%% and computes the [[keccak256]] digest.\n *\n *  If %%message%% is a string, it is converted to its UTF-8 bytes\n *  first. To compute the digest of a [[DataHexString]], it must be converted\n *  to [bytes](getBytes).\n *\n *  @example:\n *    hashMessage(\"Hello World\")\n *    //_result:\n *\n *    // Hashes the SIX (6) string characters, i.e.\n *    // [ \"0\", \"x\", \"4\", \"2\", \"4\", \"3\" ]\n *    hashMessage(\"0x4243\")\n *    //_result:\n *\n *    // Hashes the TWO (2) bytes [ 0x42, 0x43 ]...\n *    hashMessage(getBytes(\"0x4243\"))\n *    //_result:\n *\n *    // ...which is equal to using data\n *    hashMessage(new Uint8Array([ 0x42, 0x43 ]))\n *    //_result:\n *\n */\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(MessagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n/**\n *  Return the address of the private key that produced\n *  the signature %%sig%% during signing for %%message%%.\n */\nexport function verifyMessage(message, sig) {\n    const digest = hashMessage(message);\n    return recoverAddress(digest, sig);\n}\n//# sourceMappingURL=message.js.map","// NFKC (composed)             // (decomposed)\n/**\n *  A constant for the ether symbol (normalized using NFKC).\n *\n *  (**i.e.** ``\"\\\\u039e\"``)\n */\nexport const EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n/**\n *  A constant for the [[link-eip-191]] personal message prefix.\n *\n *  (**i.e.** ``\"\\\\x19Ethereum Signed Message:\\\\n\"``)\n */\nexport const MessagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n//# sourceMappingURL=strings.js.map","/**\n *  An **HMAC** enables verification that a given key was used\n *  to authenticate a payload.\n *\n *  See: [[link-wiki-hmac]]\n *\n *  @_subsection: api/crypto:HMAC  [about-hmac]\n */\nimport { createHmac } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\nlet locked = false;\nconst _computeHmac = function (algorithm, key, data) {\n    return createHmac(algorithm, key).update(data).digest();\n};\nlet __computeHmac = _computeHmac;\n/**\n *  Return the HMAC for %%data%% using the %%key%% key with the underlying\n *  %%algo%% used for compression.\n *\n *  @example:\n *    key = id(\"some-secret\")\n *\n *    // Compute the HMAC\n *    computeHmac(\"sha256\", key, \"0x1337\")\n *    //_result:\n *\n *    // To compute the HMAC of UTF-8 data, the data must be\n *    // converted to UTF-8 bytes\n *    computeHmac(\"sha256\", key, toUtf8Bytes(\"Hello World\"))\n *    //_result:\n *\n */\nexport function computeHmac(algorithm, _key, _data) {\n    const key = getBytes(_key, \"key\");\n    const data = getBytes(_data, \"data\");\n    return hexlify(__computeHmac(algorithm, key, data));\n}\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock = function () { locked = true; };\ncomputeHmac.register = function (func) {\n    if (locked) {\n        throw new Error(\"computeHmac is locked\");\n    }\n    __computeHmac = func;\n};\nObject.freeze(computeHmac);\n//# sourceMappingURL=hmac.js.map","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = /* @__PURE__ */ [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n//# sourceMappingURL=ripemd160.js.map","import { ripemd160 as noble_ripemd160 } from \"@noble/hashes/ripemd160\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\nlet locked = false;\nconst _ripemd160 = function (data) {\n    return noble_ripemd160(data);\n};\nlet __ripemd160 = _ripemd160;\n/**\n *  Compute the cryptographic RIPEMD-160 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    ripemd160(\"0x\")\n *    //_result:\n *\n *    ripemd160(\"0x1337\")\n *    //_result:\n *\n *    ripemd160(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function ripemd160(_data) {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__ripemd160(data));\n}\nripemd160._ = _ripemd160;\nripemd160.lock = function () { locked = true; };\nripemd160.register = function (func) {\n    if (locked) {\n        throw new TypeError(\"ripemd160 is locked\");\n    }\n    __ripemd160 = func;\n};\nObject.freeze(ripemd160);\n//# sourceMappingURL=ripemd160.js.map","/**\n *  A **Cryptographically Secure Random Value** is one that has been\n *  generated with additional care take to prevent side-channels\n *  from allowing others to detect it and prevent others from through\n *  coincidence generate the same values.\n *\n *  @_subsection: api/crypto:Random Values  [about-crypto-random]\n */\nimport { randomBytes as crypto_random } from \"./crypto.js\";\nlet locked = false;\nconst _randomBytes = function (length) {\n    return new Uint8Array(crypto_random(length));\n};\nlet __randomBytes = _randomBytes;\n/**\n *  Return %%length%% bytes of cryptographically secure random data.\n *\n *  @example:\n *    randomBytes(8)\n *    //_result:\n */\nexport function randomBytes(length) {\n    return __randomBytes(length);\n}\nrandomBytes._ = _randomBytes;\nrandomBytes.lock = function () { locked = true; };\nrandomBytes.register = function (func) {\n    if (locked) {\n        throw new Error(\"randomBytes is locked\");\n    }\n    __randomBytes = func;\n};\nObject.freeze(randomBytes);\n//# sourceMappingURL=random.js.map","import { assertArgument } from \"../utils/index.js\";\nconst subsChrs = \" !#$%&'()*+,-./<=>?@[]^_`{|}~\";\nconst Word = /^[a-z]*$/i;\nfunction unfold(words, sep) {\n    let initial = 97;\n    return words.reduce((accum, word) => {\n        if (word === sep) {\n            initial++;\n        }\n        else if (word.match(Word)) {\n            accum.push(String.fromCharCode(initial) + word);\n        }\n        else {\n            initial = 97;\n            accum.push(word);\n        }\n        return accum;\n    }, []);\n}\n/**\n *  @_ignore\n */\nexport function decode(data, subs) {\n    // Replace all the substitutions with their expanded form\n    for (let i = subsChrs.length - 1; i >= 0; i--) {\n        data = data.split(subsChrs[i]).join(subs.substring(2 * i, 2 * i + 2));\n    }\n    // Get all tle clumps; each suffix, first-increment and second-increment\n    const clumps = [];\n    const leftover = data.replace(/(:|([0-9])|([A-Z][a-z]*))/g, (all, item, semi, word) => {\n        if (semi) {\n            for (let i = parseInt(semi); i >= 0; i--) {\n                clumps.push(\";\");\n            }\n        }\n        else {\n            clumps.push(item.toLowerCase());\n        }\n        return \"\";\n    });\n    /* c8 ignore start */\n    if (leftover) {\n        throw new Error(`leftovers: ${JSON.stringify(leftover)}`);\n    }\n    /* c8 ignore stop */\n    return unfold(unfold(clumps, \";\"), \":\");\n}\n/**\n *  @_ignore\n */\nexport function decodeOwl(data) {\n    assertArgument(data[0] === \"0\", \"unsupported auwl data\", \"data\", data);\n    return decode(data.substring(1 + 2 * subsChrs.length), data.substring(1, 1 + 2 * subsChrs.length));\n}\n//# sourceMappingURL=decode-owl.js.map","import { defineProperties } from \"../utils/index.js\";\n/**\n *  A Wordlist represents a collection of language-specific\n *  words used to encode and devoce [[link-bip-39]] encoded data\n *  by mapping words to 11-bit values and vice versa.\n */\nexport class Wordlist {\n    locale;\n    /**\n     *  Creates a new Wordlist instance.\n     *\n     *  Sub-classes MUST call this if they provide their own constructor,\n     *  passing in the locale string of the language.\n     *\n     *  Generally there is no need to create instances of a Wordlist,\n     *  since each language-specific Wordlist creates an instance and\n     *  there is no state kept internally, so they are safe to share.\n     */\n    constructor(locale) {\n        defineProperties(this, { locale });\n    }\n    /**\n     *  Sub-classes may override this to provide a language-specific\n     *  method for spliting %%phrase%% into individual words.\n     *\n     *  By default, %%phrase%% is split using any sequences of\n     *  white-space as defined by regular expressions (i.e. ``/\\s+/``).\n     */\n    split(phrase) {\n        return phrase.toLowerCase().split(/\\s+/g);\n    }\n    /**\n     *  Sub-classes may override this to provider a language-specific\n     *  method for joining %%words%% into a phrase.\n     *\n     *  By default, %%words%% are joined by a single space.\n     */\n    join(words) {\n        return words.join(\" \");\n    }\n}\n//# sourceMappingURL=wordlist.js.map","// Use the encode-latin.js script to create the necessary\n// data files to be consumed by this class\nimport { id } from \"../hash/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\nimport { decodeOwl } from \"./decode-owl.js\";\nimport { Wordlist } from \"./wordlist.js\";\n/**\n *  An OWL format Wordlist is an encoding method that exploits\n *  the general locality of alphabetically sorted words to\n *  achieve a simple but effective means of compression.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on ASCII-7 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create the necessary data.\n */\nexport class WordlistOwl extends Wordlist {\n    #data;\n    #checksum;\n    /**\n     *  Creates a new Wordlist for %%locale%% using the OWL %%data%%\n     *  and validated against the %%checksum%%.\n     */\n    constructor(locale, data, checksum) {\n        super(locale);\n        this.#data = data;\n        this.#checksum = checksum;\n        this.#words = null;\n    }\n    /**\n     *  The OWL-encoded data.\n     */\n    get _data() { return this.#data; }\n    /**\n     *  Decode all the words for the wordlist.\n     */\n    _decodeWords() {\n        return decodeOwl(this.#data);\n    }\n    #words;\n    #loadWords() {\n        if (this.#words == null) {\n            const words = this._decodeWords();\n            // Verify the computed list matches the official list\n            const checksum = id(words.join(\"\\n\") + \"\\n\");\n            /* c8 ignore start */\n            if (checksum !== this.#checksum) {\n                throw new Error(`BIP39 Wordlist for ${this.locale} FAILED`);\n            }\n            /* c8 ignore stop */\n            this.#words = words;\n        }\n        return this.#words;\n    }\n    getWord(index) {\n        const words = this.#loadWords();\n        assertArgument(index >= 0 && index < words.length, `invalid word index: ${index}`, \"index\", index);\n        return words[index];\n    }\n    getWordIndex(word) {\n        return this.#loadWords().indexOf(word);\n    }\n}\n//# sourceMappingURL=wordlist-owl.js.map","import { WordlistOwl } from \"./wordlist-owl.js\";\nconst words = \"0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO\";\nconst checksum = \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-en]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangEn extends WordlistOwl {\n    /**\n     *  Creates a new instance of the English language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langEn]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"en\", words, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangEn``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangEn();\n        }\n        return wordlist;\n    }\n}\n//# sourceMappingURL=lang-en.js.map","/**\n *  A **Password-Based Key-Derivation Function** is designed to create\n *  a sequence of bytes suitible as a **key** from a human-rememberable\n *  password.\n *\n *  @_subsection: api/crypto:Passwords  [about-pbkdf]\n */\nimport { pbkdf2Sync } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\nlet locked = false;\nconst _pbkdf2 = function (password, salt, iterations, keylen, algo) {\n    return pbkdf2Sync(password, salt, iterations, keylen, algo);\n};\nlet __pbkdf2 = _pbkdf2;\n/**\n *  Return the [[link-pbkdf2]] for %%keylen%% bytes for %%password%% using\n *  the %%salt%% and using %%iterations%% of %%algo%%.\n *\n *  This PBKDF is outdated and should not be used in new projects, but is\n *  required to decrypt older files.\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the PBKDF2\n *    pbkdf2(passwordBytes, salt, 1024, 16, \"sha256\")\n *    //_result:\n */\nexport function pbkdf2(_password, _salt, iterations, keylen, algo) {\n    const password = getBytes(_password, \"password\");\n    const salt = getBytes(_salt, \"salt\");\n    return hexlify(__pbkdf2(password, salt, iterations, keylen, algo));\n}\npbkdf2._ = _pbkdf2;\npbkdf2.lock = function () { locked = true; };\npbkdf2.register = function (func) {\n    if (locked) {\n        throw new Error(\"pbkdf2 is locked\");\n    }\n    __pbkdf2 = func;\n};\nObject.freeze(pbkdf2);\n//# sourceMappingURL=pbkdf2.js.map","import { pbkdf2, sha256 } from \"../crypto/index.js\";\nimport { defineProperties, getBytes, hexlify, assertNormalize, assertPrivate, assertArgument, toUtf8Bytes } from \"../utils/index.js\";\nimport { LangEn } from \"../wordlists/lang-en.js\";\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits) & 0xff;\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return ((1 << bits) - 1) & 0xff;\n}\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    assertNormalize(\"NFKD\");\n    if (wordlist == null) {\n        wordlist = LangEn.wordlist();\n    }\n    const words = wordlist.split(mnemonic);\n    assertArgument((words.length % 3) === 0 && words.length >= 12 && words.length <= 24, \"invalid mnemonic length\", \"mnemonic\", \"[ REDACTED ]\");\n    const entropy = new Uint8Array(Math.ceil(11 * words.length / 8));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        assertArgument(index >= 0, `invalid mnemonic word at index ${i}`, \"mnemonic\", \"[ REDACTED ]\");\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = getBytes(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    assertArgument(checksum === (entropy[entropy.length - 1] & checksumMask), \"invalid mnemonic checksum\", \"mnemonic\", \"[ REDACTED ]\");\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertArgument((entropy.length % 4) === 0 && entropy.length >= 16 && entropy.length <= 32, \"invalid entropy size\", \"entropy\", \"[ REDACTED ]\");\n    if (wordlist == null) {\n        wordlist = LangEn.wordlist();\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = parseInt(sha256(entropy).substring(2, 4), 16) & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nconst _guard = {};\n/**\n *  A **Mnemonic** wraps all properties required to compute [[link-bip-39]]\n *  seeds and convert between phrases and entropy.\n */\nexport class Mnemonic {\n    /**\n     *  The mnemonic phrase of 12, 15, 18, 21 or 24 words.\n     *\n     *  Use the [[wordlist]] ``split`` method to get the individual words.\n     */\n    phrase;\n    /**\n     *  The password used for this mnemonic. If no password is used this\n     *  is the empty string (i.e. ``\"\"``) as per the specification.\n     */\n    password;\n    /**\n     *  The wordlist for this mnemonic.\n     */\n    wordlist;\n    /**\n     *  The underlying entropy which the mnemonic encodes.\n     */\n    entropy;\n    /**\n     *  @private\n     */\n    constructor(guard, entropy, phrase, password, wordlist) {\n        if (password == null) {\n            password = \"\";\n        }\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        assertPrivate(guard, _guard, \"Mnemonic\");\n        defineProperties(this, { phrase, password, wordlist, entropy });\n    }\n    /**\n     *  Returns the seed for the mnemonic.\n     */\n    computeSeed() {\n        const salt = toUtf8Bytes(\"mnemonic\" + this.password, \"NFKD\");\n        return pbkdf2(toUtf8Bytes(this.phrase, \"NFKD\"), salt, 2048, 64, \"sha512\");\n    }\n    /**\n     *  Creates a new Mnemonic for the %%phrase%%.\n     *\n     *  The default %%password%% is the empty string and the default\n     *  wordlist is the [English wordlists](LangEn).\n     */\n    static fromPhrase(phrase, password, wordlist) {\n        // Normalize the case and space; throws if invalid\n        const entropy = mnemonicToEntropy(phrase, wordlist);\n        phrase = entropyToMnemonic(getBytes(entropy), wordlist);\n        return new Mnemonic(_guard, entropy, phrase, password, wordlist);\n    }\n    /**\n     *  Create a new **Mnemonic** from the %%entropy%%.\n     *\n     *  The default %%password%% is the empty string and the default\n     *  wordlist is the [English wordlists](LangEn).\n     */\n    static fromEntropy(_entropy, password, wordlist) {\n        const entropy = getBytes(_entropy, \"entropy\");\n        const phrase = entropyToMnemonic(entropy, wordlist);\n        return new Mnemonic(_guard, hexlify(entropy), phrase, password, wordlist);\n    }\n    /**\n     *  Returns the phrase for %%mnemonic%%.\n     */\n    static entropyToPhrase(_entropy, wordlist) {\n        const entropy = getBytes(_entropy, \"entropy\");\n        return entropyToMnemonic(entropy, wordlist);\n    }\n    /**\n     *  Returns the entropy for %%phrase%%.\n     */\n    static phraseToEntropy(phrase, wordlist) {\n        return mnemonicToEntropy(phrase, wordlist);\n    }\n    /**\n     *  Returns true if %%phrase%% is a valid [[link-bip-39]] phrase.\n     *\n     *  This checks all the provided words belong to the %%wordlist%%,\n     *  that the length is valid and the checksum is correct.\n     */\n    static isValidMnemonic(phrase, wordlist) {\n        try {\n            mnemonicToEntropy(phrase, wordlist);\n            return true;\n        }\n        catch (error) { }\n        return false;\n    }\n}\n//# sourceMappingURL=mnemonic.js.map","/*! MIT License. Copyright 2015-2022 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AES_key, _AES_Kd, _AES_Ke;\n// Number of rounds by keysize\nconst numberOfRounds = { 16: 10, 24: 12, 32: 14 };\n// Round constant words\nconst rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n// S-box and Inverse S-box (S is for Substitution)\nconst S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\nconst Si = [0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n// Transformations for encryption\nconst T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\nconst T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\nconst T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\nconst T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n// Transformations for decryption\nconst T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\nconst T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\nconst T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\nconst T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n// Transformations for decryption key expansion\nconst U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\nconst U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\nconst U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\nconst U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\nfunction convertToInt32(bytes) {\n    const result = [];\n    for (let i = 0; i < bytes.length; i += 4) {\n        result.push((bytes[i] << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] << 8) | bytes[i + 3]);\n    }\n    return result;\n}\nexport class AES {\n    get key() { return __classPrivateFieldGet(this, _AES_key, \"f\").slice(); }\n    constructor(key) {\n        _AES_key.set(this, void 0);\n        _AES_Kd.set(this, void 0);\n        _AES_Ke.set(this, void 0);\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n        __classPrivateFieldSet(this, _AES_key, new Uint8Array(key), \"f\");\n        const rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new TypeError('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n        // encryption round keys\n        __classPrivateFieldSet(this, _AES_Ke, [], \"f\");\n        // decryption round keys\n        __classPrivateFieldSet(this, _AES_Kd, [], \"f\");\n        for (let i = 0; i <= rounds; i++) {\n            __classPrivateFieldGet(this, _AES_Ke, \"f\").push([0, 0, 0, 0]);\n            __classPrivateFieldGet(this, _AES_Kd, \"f\").push([0, 0, 0, 0]);\n        }\n        const roundKeyCount = (rounds + 1) * 4;\n        const KC = this.key.length / 4;\n        // convert the key into ints\n        const tk = convertToInt32(this.key);\n        // copy values into round key arrays\n        let index;\n        for (let i = 0; i < KC; i++) {\n            index = i >> 2;\n            __classPrivateFieldGet(this, _AES_Ke, \"f\")[index][i % 4] = tk[i];\n            __classPrivateFieldGet(this, _AES_Kd, \"f\")[rounds - index][i % 4] = tk[i];\n        }\n        // key expansion (fips-197 section 5.2)\n        let rconpointer = 0;\n        let t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                (S[(tt >> 8) & 0xFF] << 16) ^\n                (S[tt & 0xFF] << 8) ^\n                S[(tt >> 24) & 0xFF] ^\n                (rcon[rconpointer] << 24));\n            rconpointer += 1;\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (let i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            }\n            else {\n                for (let i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n                tk[KC / 2] ^= (S[tt & 0xFF] ^\n                    (S[(tt >> 8) & 0xFF] << 8) ^\n                    (S[(tt >> 16) & 0xFF] << 16) ^\n                    (S[(tt >> 24) & 0xFF] << 24));\n                for (let i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n            // copy values into round key arrays\n            let i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                __classPrivateFieldGet(this, _AES_Ke, \"f\")[r][c] = tk[i];\n                __classPrivateFieldGet(this, _AES_Kd, \"f\")[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (let r = 1; r < rounds; r++) {\n            for (let c = 0; c < 4; c++) {\n                tt = __classPrivateFieldGet(this, _AES_Kd, \"f\")[r][c];\n                __classPrivateFieldGet(this, _AES_Kd, \"f\")[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                    U2[(tt >> 16) & 0xFF] ^\n                    U3[(tt >> 8) & 0xFF] ^\n                    U4[tt & 0xFF]);\n            }\n        }\n    }\n    encrypt(plaintext) {\n        if (plaintext.length != 16) {\n            throw new TypeError('invalid plaintext size (must be 16 bytes)');\n        }\n        const rounds = __classPrivateFieldGet(this, _AES_Ke, \"f\").length - 1;\n        const a = [0, 0, 0, 0];\n        // convert plaintext to (ints ^ key)\n        let t = convertToInt32(plaintext);\n        for (let i = 0; i < 4; i++) {\n            t[i] ^= __classPrivateFieldGet(this, _AES_Ke, \"f\")[0][i];\n        }\n        // apply round transforms\n        for (let r = 1; r < rounds; r++) {\n            for (let i = 0; i < 4; i++) {\n                a[i] = (T1[(t[i] >> 24) & 0xff] ^\n                    T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                    T3[(t[(i + 2) % 4] >> 8) & 0xff] ^\n                    T4[t[(i + 3) % 4] & 0xff] ^\n                    __classPrivateFieldGet(this, _AES_Ke, \"f\")[r][i]);\n            }\n            t = a.slice();\n        }\n        // the last round is special\n        const result = new Uint8Array(16);\n        let tt = 0;\n        for (let i = 0; i < 4; i++) {\n            tt = __classPrivateFieldGet(this, _AES_Ke, \"f\")[rounds][i];\n            result[4 * i] = (S[(t[i] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >> 8) & 0xff] ^ (tt >> 8)) & 0xff;\n            result[4 * i + 3] = (S[t[(i + 3) % 4] & 0xff] ^ tt) & 0xff;\n        }\n        return result;\n    }\n    decrypt(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new TypeError('invalid ciphertext size (must be 16 bytes)');\n        }\n        const rounds = __classPrivateFieldGet(this, _AES_Kd, \"f\").length - 1;\n        const a = [0, 0, 0, 0];\n        // convert plaintext to (ints ^ key)\n        let t = convertToInt32(ciphertext);\n        for (let i = 0; i < 4; i++) {\n            t[i] ^= __classPrivateFieldGet(this, _AES_Kd, \"f\")[0][i];\n        }\n        // apply round transforms\n        for (let r = 1; r < rounds; r++) {\n            for (let i = 0; i < 4; i++) {\n                a[i] = (T5[(t[i] >> 24) & 0xff] ^\n                    T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                    T7[(t[(i + 2) % 4] >> 8) & 0xff] ^\n                    T8[t[(i + 1) % 4] & 0xff] ^\n                    __classPrivateFieldGet(this, _AES_Kd, \"f\")[r][i]);\n            }\n            t = a.slice();\n        }\n        // the last round is special\n        const result = new Uint8Array(16);\n        let tt = 0;\n        for (let i = 0; i < 4; i++) {\n            tt = __classPrivateFieldGet(this, _AES_Kd, \"f\")[rounds][i];\n            result[4 * i] = (Si[(t[i] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >> 8) & 0xff] ^ (tt >> 8)) & 0xff;\n            result[4 * i + 3] = (Si[t[(i + 1) % 4] & 0xff] ^ tt) & 0xff;\n        }\n        return result;\n    }\n}\n_AES_key = new WeakMap(), _AES_Kd = new WeakMap(), _AES_Ke = new WeakMap();\n//# sourceMappingURL=aes.js.map","import { AES } from \"./aes.js\";\nexport class ModeOfOperation {\n    constructor(name, key, cls) {\n        if (cls && !(this instanceof cls)) {\n            throw new Error(`${name} must be instantiated with \"new\"`);\n        }\n        Object.defineProperties(this, {\n            aes: { enumerable: true, value: new AES(key) },\n            name: { enumerable: true, value: name }\n        });\n    }\n}\n//# sourceMappingURL=mode.js.map","// Cipher Block Chaining\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CBC_iv, _CBC_lastBlock;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class CBC extends ModeOfOperation {\n    constructor(key, iv) {\n        super(\"ECC\", key, CBC);\n        _CBC_iv.set(this, void 0);\n        _CBC_lastBlock.set(this, void 0);\n        if (iv) {\n            if (iv.length % 16) {\n                throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n            }\n            __classPrivateFieldSet(this, _CBC_iv, new Uint8Array(iv), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _CBC_iv, new Uint8Array(16), \"f\");\n        }\n        __classPrivateFieldSet(this, _CBC_lastBlock, this.iv, \"f\");\n    }\n    get iv() { return new Uint8Array(__classPrivateFieldGet(this, _CBC_iv, \"f\")); }\n    encrypt(plaintext) {\n        if (plaintext.length % 16) {\n            throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n        }\n        const ciphertext = new Uint8Array(plaintext.length);\n        for (let i = 0; i < plaintext.length; i += 16) {\n            for (let j = 0; j < 16; j++) {\n                __classPrivateFieldGet(this, _CBC_lastBlock, \"f\")[j] ^= plaintext[i + j];\n            }\n            __classPrivateFieldSet(this, _CBC_lastBlock, this.aes.encrypt(__classPrivateFieldGet(this, _CBC_lastBlock, \"f\")), \"f\");\n            ciphertext.set(__classPrivateFieldGet(this, _CBC_lastBlock, \"f\"), i);\n        }\n        return ciphertext;\n    }\n    decrypt(ciphertext) {\n        if (ciphertext.length % 16) {\n            throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n        }\n        const plaintext = new Uint8Array(ciphertext.length);\n        for (let i = 0; i < ciphertext.length; i += 16) {\n            const block = this.aes.decrypt(ciphertext.subarray(i, i + 16));\n            for (let j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ __classPrivateFieldGet(this, _CBC_lastBlock, \"f\")[j];\n                __classPrivateFieldGet(this, _CBC_lastBlock, \"f\")[j] = ciphertext[i + j];\n            }\n        }\n        return plaintext;\n    }\n}\n_CBC_iv = new WeakMap(), _CBC_lastBlock = new WeakMap();\n//# sourceMappingURL=mode-cbc.js.map","// Cipher Feedback\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CFB_instances, _CFB_iv, _CFB_shiftRegister, _CFB_shift;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class CFB extends ModeOfOperation {\n    constructor(key, iv, segmentSize = 8) {\n        super(\"CFB\", key, CFB);\n        _CFB_instances.add(this);\n        _CFB_iv.set(this, void 0);\n        _CFB_shiftRegister.set(this, void 0);\n        // This library currently only handles byte-aligned segmentSize\n        if (!Number.isInteger(segmentSize) || (segmentSize % 8)) {\n            throw new TypeError(\"invalid segmentSize\");\n        }\n        Object.defineProperties(this, {\n            segmentSize: { enumerable: true, value: segmentSize }\n        });\n        if (iv) {\n            if (iv.length % 16) {\n                throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n            }\n            __classPrivateFieldSet(this, _CFB_iv, new Uint8Array(iv), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _CFB_iv, new Uint8Array(16), \"f\");\n        }\n        __classPrivateFieldSet(this, _CFB_shiftRegister, this.iv, \"f\");\n    }\n    get iv() { return new Uint8Array(__classPrivateFieldGet(this, _CFB_iv, \"f\")); }\n    encrypt(plaintext) {\n        if (8 * plaintext.length % this.segmentSize) {\n            throw new TypeError(\"invalid plaintext size (must be multiple of segmentSize bytes)\");\n        }\n        const segmentSize = this.segmentSize / 8;\n        const ciphertext = new Uint8Array(plaintext);\n        for (let i = 0; i < ciphertext.length; i += segmentSize) {\n            const xorSegment = this.aes.encrypt(__classPrivateFieldGet(this, _CFB_shiftRegister, \"f\"));\n            for (let j = 0; j < segmentSize; j++) {\n                ciphertext[i + j] ^= xorSegment[j];\n            }\n            __classPrivateFieldGet(this, _CFB_instances, \"m\", _CFB_shift).call(this, ciphertext.subarray(i));\n        }\n        return ciphertext;\n    }\n    decrypt(ciphertext) {\n        if (8 * ciphertext.length % this.segmentSize) {\n            throw new TypeError(\"invalid ciphertext size (must be multiple of segmentSize bytes)\");\n        }\n        const segmentSize = this.segmentSize / 8;\n        const plaintext = new Uint8Array(ciphertext);\n        for (let i = 0; i < plaintext.length; i += segmentSize) {\n            const xorSegment = this.aes.encrypt(__classPrivateFieldGet(this, _CFB_shiftRegister, \"f\"));\n            for (let j = 0; j < segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n            __classPrivateFieldGet(this, _CFB_instances, \"m\", _CFB_shift).call(this, ciphertext.subarray(i));\n        }\n        return plaintext;\n    }\n}\n_CFB_iv = new WeakMap(), _CFB_shiftRegister = new WeakMap(), _CFB_instances = new WeakSet(), _CFB_shift = function _CFB_shift(data) {\n    const segmentSize = this.segmentSize / 8;\n    // Shift the register\n    __classPrivateFieldGet(this, _CFB_shiftRegister, \"f\").set(__classPrivateFieldGet(this, _CFB_shiftRegister, \"f\").subarray(segmentSize));\n    __classPrivateFieldGet(this, _CFB_shiftRegister, \"f\").set(data.subarray(0, segmentSize), 16 - segmentSize);\n};\n//# sourceMappingURL=mode-cfb.js.map","// Counter Mode\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CTR_remaining, _CTR_remainingIndex, _CTR_counter;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class CTR extends ModeOfOperation {\n    constructor(key, initialValue) {\n        super(\"CTR\", key, CTR);\n        // Remaining bytes for the one-time pad\n        _CTR_remaining.set(this, void 0);\n        _CTR_remainingIndex.set(this, void 0);\n        // The current counter\n        _CTR_counter.set(this, void 0);\n        __classPrivateFieldSet(this, _CTR_counter, new Uint8Array(16), \"f\");\n        __classPrivateFieldGet(this, _CTR_counter, \"f\").fill(0);\n        __classPrivateFieldSet(this, _CTR_remaining, __classPrivateFieldGet(this, _CTR_counter, \"f\"), \"f\"); // This will be discarded immediately\n        __classPrivateFieldSet(this, _CTR_remainingIndex, 16, \"f\");\n        if (initialValue == null) {\n            initialValue = 1;\n        }\n        if (typeof (initialValue) === \"number\") {\n            this.setCounterValue(initialValue);\n        }\n        else {\n            this.setCounterBytes(initialValue);\n        }\n    }\n    get counter() { return new Uint8Array(__classPrivateFieldGet(this, _CTR_counter, \"f\")); }\n    setCounterValue(value) {\n        if (!Number.isInteger(value) || value < 0 || value > Number.MAX_SAFE_INTEGER) {\n            throw new TypeError(\"invalid counter initial integer value\");\n        }\n        for (let index = 15; index >= 0; --index) {\n            __classPrivateFieldGet(this, _CTR_counter, \"f\")[index] = value % 256;\n            value = Math.floor(value / 256);\n        }\n    }\n    setCounterBytes(value) {\n        if (value.length !== 16) {\n            throw new TypeError(\"invalid counter initial Uint8Array value length\");\n        }\n        __classPrivateFieldGet(this, _CTR_counter, \"f\").set(value);\n    }\n    increment() {\n        for (let i = 15; i >= 0; i--) {\n            if (__classPrivateFieldGet(this, _CTR_counter, \"f\")[i] === 255) {\n                __classPrivateFieldGet(this, _CTR_counter, \"f\")[i] = 0;\n            }\n            else {\n                __classPrivateFieldGet(this, _CTR_counter, \"f\")[i]++;\n                break;\n            }\n        }\n    }\n    encrypt(plaintext) {\n        var _a, _b;\n        const crypttext = new Uint8Array(plaintext);\n        for (let i = 0; i < crypttext.length; i++) {\n            if (__classPrivateFieldGet(this, _CTR_remainingIndex, \"f\") === 16) {\n                __classPrivateFieldSet(this, _CTR_remaining, this.aes.encrypt(__classPrivateFieldGet(this, _CTR_counter, \"f\")), \"f\");\n                __classPrivateFieldSet(this, _CTR_remainingIndex, 0, \"f\");\n                this.increment();\n            }\n            crypttext[i] ^= __classPrivateFieldGet(this, _CTR_remaining, \"f\")[__classPrivateFieldSet(this, _CTR_remainingIndex, (_b = __classPrivateFieldGet(this, _CTR_remainingIndex, \"f\"), _a = _b++, _b), \"f\"), _a];\n        }\n        return crypttext;\n    }\n    decrypt(ciphertext) {\n        return this.encrypt(ciphertext);\n    }\n}\n_CTR_remaining = new WeakMap(), _CTR_remainingIndex = new WeakMap(), _CTR_counter = new WeakMap();\n//# sourceMappingURL=mode-ctr.js.map","// Output Feedback\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _OFB_iv, _OFB_lastPrecipher, _OFB_lastPrecipherIndex;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class OFB extends ModeOfOperation {\n    constructor(key, iv) {\n        super(\"OFB\", key, OFB);\n        _OFB_iv.set(this, void 0);\n        _OFB_lastPrecipher.set(this, void 0);\n        _OFB_lastPrecipherIndex.set(this, void 0);\n        if (iv) {\n            if (iv.length % 16) {\n                throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n            }\n            __classPrivateFieldSet(this, _OFB_iv, new Uint8Array(iv), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _OFB_iv, new Uint8Array(16), \"f\");\n        }\n        __classPrivateFieldSet(this, _OFB_lastPrecipher, this.iv, \"f\");\n        __classPrivateFieldSet(this, _OFB_lastPrecipherIndex, 16, \"f\");\n    }\n    get iv() { return new Uint8Array(__classPrivateFieldGet(this, _OFB_iv, \"f\")); }\n    encrypt(plaintext) {\n        var _a, _b;\n        if (plaintext.length % 16) {\n            throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n        }\n        const ciphertext = new Uint8Array(plaintext);\n        for (let i = 0; i < ciphertext.length; i++) {\n            if (__classPrivateFieldGet(this, _OFB_lastPrecipherIndex, \"f\") === 16) {\n                __classPrivateFieldSet(this, _OFB_lastPrecipher, this.aes.encrypt(__classPrivateFieldGet(this, _OFB_lastPrecipher, \"f\")), \"f\");\n                __classPrivateFieldSet(this, _OFB_lastPrecipherIndex, 0, \"f\");\n            }\n            ciphertext[i] ^= __classPrivateFieldGet(this, _OFB_lastPrecipher, \"f\")[__classPrivateFieldSet(this, _OFB_lastPrecipherIndex, (_b = __classPrivateFieldGet(this, _OFB_lastPrecipherIndex, \"f\"), _a = _b++, _b), \"f\"), _a];\n        }\n        return ciphertext;\n    }\n    decrypt(ciphertext) {\n        if (ciphertext.length % 16) {\n            throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n        }\n        return this.encrypt(ciphertext);\n    }\n}\n_OFB_iv = new WeakMap(), _OFB_lastPrecipher = new WeakMap(), _OFB_lastPrecipherIndex = new WeakMap();\n//# sourceMappingURL=mode-ofb.js.map","import { number as assertNumber } from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { asyncLoop, checkOpts, u32 } from './utils.js';\n// RFC 7914 Scrypt KDF\n// Left rotate for uint32\nconst rotl = (a, b) => (a << b) | (a >>> (32 - b));\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(prev, pi, input, ii, out, oi) {\n    // Based on https://cr.yp.to/salsa20.html\n    // Xor blocks\n    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n    // Save state to temporary variables (salsa)\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    // Main loop (salsa)\n    for (let i = 0; i < 8; i += 2) {\n        x04 ^= rotl(x00 + x12 | 0, 7);\n        x08 ^= rotl(x04 + x00 | 0, 9);\n        x12 ^= rotl(x08 + x04 | 0, 13);\n        x00 ^= rotl(x12 + x08 | 0, 18);\n        x09 ^= rotl(x05 + x01 | 0, 7);\n        x13 ^= rotl(x09 + x05 | 0, 9);\n        x01 ^= rotl(x13 + x09 | 0, 13);\n        x05 ^= rotl(x01 + x13 | 0, 18);\n        x14 ^= rotl(x10 + x06 | 0, 7);\n        x02 ^= rotl(x14 + x10 | 0, 9);\n        x06 ^= rotl(x02 + x14 | 0, 13);\n        x10 ^= rotl(x06 + x02 | 0, 18);\n        x03 ^= rotl(x15 + x11 | 0, 7);\n        x07 ^= rotl(x03 + x15 | 0, 9);\n        x11 ^= rotl(x07 + x03 | 0, 13);\n        x15 ^= rotl(x11 + x07 | 0, 18);\n        x01 ^= rotl(x00 + x03 | 0, 7);\n        x02 ^= rotl(x01 + x00 | 0, 9);\n        x03 ^= rotl(x02 + x01 | 0, 13);\n        x00 ^= rotl(x03 + x02 | 0, 18);\n        x06 ^= rotl(x05 + x04 | 0, 7);\n        x07 ^= rotl(x06 + x05 | 0, 9);\n        x04 ^= rotl(x07 + x06 | 0, 13);\n        x05 ^= rotl(x04 + x07 | 0, 18);\n        x11 ^= rotl(x10 + x09 | 0, 7);\n        x08 ^= rotl(x11 + x10 | 0, 9);\n        x09 ^= rotl(x08 + x11 | 0, 13);\n        x10 ^= rotl(x09 + x08 | 0, 18);\n        x12 ^= rotl(x15 + x14 | 0, 7);\n        x13 ^= rotl(x12 + x15 | 0, 9);\n        x14 ^= rotl(x13 + x12 | 0, 13);\n        x15 ^= rotl(x14 + x13 | 0, 18);\n    }\n    // Write output (salsa)\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\nfunction BlockMix(input, ii, out, oi, r) {\n    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n    let head = oi + 0;\n    let tail = oi + 16 * r;\n    for (let i = 0; i < 16; i++)\n        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n    for (let i = 0; i < r; i++, head += 16, ii += 16) {\n        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n        if (i > 0)\n            tail += 16; // First iteration overwrites tmp value in tail\n        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n    }\n}\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password, salt, _opts) {\n    // Maxmem - 1GB+1KB by default\n    const opts = checkOpts({\n        dkLen: 32,\n        asyncTick: 10,\n        maxmem: 1024 ** 3 + 1024,\n    }, _opts);\n    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n    assertNumber(N);\n    assertNumber(r);\n    assertNumber(p);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    assertNumber(maxmem);\n    if (onProgress !== undefined && typeof onProgress !== 'function')\n        throw new Error('progressCb should be function');\n    const blockSize = 128 * r;\n    const blockSize32 = blockSize / 4;\n    if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n        // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n        // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n        throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');\n    }\n    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');\n    }\n    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');\n    }\n    const memUsed = blockSize * (N + p);\n    if (memUsed > maxmem) {\n        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);\n    }\n    // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n    // Since it has only one iteration there is no reason to use async variant\n    const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n    const B32 = u32(B);\n    // Re-used between parallel iterations. Array(iterations) of B\n    const V = u32(new Uint8Array(blockSize * N));\n    const tmp = u32(new Uint8Array(blockSize));\n    let blockMixCb = () => { };\n    if (onProgress) {\n        const totalBlockMix = 2 * N * p;\n        // Invoke callback if progress changes from 10.01 to 10.02\n        // Allows to draw smooth progress bar on up to 8K screen\n        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n        let blockMixCnt = 0;\n        blockMixCb = () => {\n            blockMixCnt++;\n            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n                onProgress(blockMixCnt / totalBlockMix);\n        };\n    }\n    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\nfunction scryptOutput(password, dkLen, B, V, tmp) {\n    const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n    B.fill(0);\n    V.fill(0);\n    tmp.fill(0);\n    return res;\n}\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        for (let i = 0, pos = 0; i < N - 1; i++) {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        }\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        for (let i = 0; i < N; i++) {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        }\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        let pos = 0;\n        await asyncLoop(N - 1, asyncTick, () => {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        });\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        await asyncLoop(N, asyncTick, () => {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        });\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n//# sourceMappingURL=scrypt.js.map","import { scrypt as _nobleSync, scryptAsync as _nobleAsync } from \"@noble/hashes/scrypt\";\nimport { getBytes, hexlify as H } from \"../utils/index.js\";\nlet lockedSync = false, lockedAsync = false;\nconst _scryptAsync = async function (passwd, salt, N, r, p, dkLen, onProgress) {\n    return await _nobleAsync(passwd, salt, { N, r, p, dkLen, onProgress });\n};\nconst _scryptSync = function (passwd, salt, N, r, p, dkLen) {\n    return _nobleSync(passwd, salt, { N, r, p, dkLen });\n};\nlet __scryptAsync = _scryptAsync;\nlet __scryptSync = _scryptSync;\n/**\n *  The [[link-wiki-scrypt]] uses a memory and cpu hard method of\n *  derivation to increase the resource cost to brute-force a password\n *  for a given key.\n *\n *  This means this algorithm is intentionally slow, and can be tuned to\n *  become slower. As computation and memory speed improve over time,\n *  increasing the difficulty maintains the cost of an attacker.\n *\n *  For example, if a target time of 5 seconds is used, a legitimate user\n *  which knows their password requires only 5 seconds to unlock their\n *  account. A 6 character password has 68 billion possibilities, which\n *  would require an attacker to invest over 10,000 years of CPU time. This\n *  is of course a crude example (as password generally aren't random),\n *  but demonstrates to value of imposing large costs to decryption.\n *\n *  For this reason, if building a UI which involved decrypting or\n *  encrypting datsa using scrypt, it is recommended to use a\n *  [[ProgressCallback]] (as event short periods can seem lik an eternity\n *  if the UI freezes). Including the phrase //\"decrypting\"// in the UI\n *  can also help, assuring the user their waiting is for a good reason.\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scrypt(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nexport async function scrypt(_passwd, _salt, N, r, p, dkLen, progress) {\n    const passwd = getBytes(_passwd, \"passwd\");\n    const salt = getBytes(_salt, \"salt\");\n    return H(await __scryptAsync(passwd, salt, N, r, p, dkLen, progress));\n}\nscrypt._ = _scryptAsync;\nscrypt.lock = function () { lockedAsync = true; };\nscrypt.register = function (func) {\n    if (lockedAsync) {\n        throw new Error(\"scrypt is locked\");\n    }\n    __scryptAsync = func;\n};\nObject.freeze(scrypt);\n/**\n *  Provides a synchronous variant of [[scrypt]].\n *\n *  This will completely lock up and freeze the UI in a browser and will\n *  prevent any event loop from progressing. For this reason, it is\n *  preferred to use the [async variant](scrypt).\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scryptSync(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nexport function scryptSync(_passwd, _salt, N, r, p, dkLen) {\n    const passwd = getBytes(_passwd, \"passwd\");\n    const salt = getBytes(_salt, \"salt\");\n    return H(__scryptSync(passwd, salt, N, r, p, dkLen));\n}\nscryptSync._ = _scryptSync;\nscryptSync.lock = function () { lockedSync = true; };\nscryptSync.register = function (func) {\n    if (lockedSync) {\n        throw new Error(\"scryptSync is locked\");\n    }\n    __scryptSync = func;\n};\nObject.freeze(scryptSync);\n//# sourceMappingURL=scrypt.js.map","/**\n *  Explain UUID and link to RFC here.\n *\n *  @_subsection: api/utils:UUID  [about-uuid]\n */\nimport { getBytes, hexlify } from \"./data.js\";\n/**\n *  Returns the version 4 [[link-uuid]] for the %%randomBytes%%.\n *\n *  @see: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n */\nexport function uuidV4(randomBytes) {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=uuid.js.map","/**\n *  @_ignore\n */\nimport { getBytesCopy, assertArgument, toUtf8Bytes } from \"../utils/index.js\";\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === \"string\" && !hexString.startsWith(\"0x\")) {\n        hexString = \"0x\" + hexString;\n    }\n    return getBytesCopy(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, \"NFKC\");\n    }\n    return getBytesCopy(password);\n}\nexport function spelunk(object, _path) {\n    const match = _path.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);\n    assertArgument(match != null, \"invalid path\", \"path\", _path);\n    const path = match[1];\n    const type = match[3];\n    const reqd = (match[4] === \"!\");\n    let cur = object;\n    for (const comp of path.toLowerCase().split('.')) {\n        // Search for a child object with a case-insensitive matching key\n        if (Array.isArray(cur)) {\n            if (!comp.match(/^[0-9]+$/)) {\n                break;\n            }\n            cur = cur[parseInt(comp)];\n        }\n        else if (typeof (cur) === \"object\") {\n            let found = null;\n            for (const key in cur) {\n                if (key.toLowerCase() === comp) {\n                    found = cur[key];\n                    break;\n                }\n            }\n            cur = found;\n        }\n        else {\n            cur = null;\n        }\n        if (cur == null) {\n            break;\n        }\n    }\n    assertArgument(!reqd || cur != null, \"missing required value\", \"path\", path);\n    if (type && cur != null) {\n        if (type === \"int\") {\n            if (typeof (cur) === \"string\" && cur.match(/^-?[0-9]+$/)) {\n                return parseInt(cur);\n            }\n            else if (Number.isSafeInteger(cur)) {\n                return cur;\n            }\n        }\n        if (type === \"number\") {\n            if (typeof (cur) === \"string\" && cur.match(/^-?[0-9.]*$/)) {\n                return parseFloat(cur);\n            }\n        }\n        if (type === \"data\") {\n            if (typeof (cur) === \"string\") {\n                return looseArrayify(cur);\n            }\n        }\n        if (type === \"array\" && Array.isArray(cur)) {\n            return cur;\n        }\n        if (type === typeof (cur)) {\n            return cur;\n        }\n        assertArgument(false, `wrong type found for ${type} `, \"path\", path);\n    }\n    return cur;\n}\n/*\nexport function follow(object: any, path: string): null | string {\n    let currentChild = object;\n\n    for (const comp of path.toLowerCase().split('/')) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comp) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        if (matchingChild === null) { return null; }\n\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// \"path/to/something:type!\"\nexport function followRequired(data: any, path: string): string {\n    const value = follow(data, path);\n    if (value != null) { return value; }\n    return logger.throwArgumentError(\"invalid value\", `data:${ path }`,\n    JSON.stringify(data));\n}\n*/\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n/*\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n*/\n//# sourceMappingURL=utils.js.map","/**\n *  The JSON Wallet formats allow a simple way to store the private\n *  keys needed in Ethereum along with related information and allows\n *  for extensible forms of encryption.\n *\n *  These utilities facilitate decrypting and encrypting the most common\n *  JSON Wallet formats.\n *\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\nimport { CTR } from \"aes-js\";\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256, pbkdf2, randomBytes, scrypt, scryptSync } from \"../crypto/index.js\";\nimport { computeAddress } from \"../transaction/index.js\";\nimport { concat, getBytes, hexlify, uuidV4, assert, assertArgument } from \"../utils/index.js\";\nimport { getPassword, spelunk, zpad } from \"./utils.js\";\nimport { version } from \"../_version.js\";\nconst defaultPath = \"m/44'/60'/0'/0/0\";\n/**\n *  Returns true if %%json%% is a valid JSON Keystore Wallet.\n */\nexport function isKeystoreJson(json) {\n    try {\n        const data = JSON.parse(json);\n        const version = ((data.version != null) ? parseInt(data.version) : 0);\n        if (version === 3) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction decrypt(data, key, ciphertext) {\n    const cipher = spelunk(data, \"crypto.cipher:string\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = spelunk(data, \"crypto.cipherparams.iv:data!\");\n        const aesCtr = new CTR(key, iv);\n        return hexlify(aesCtr.decrypt(ciphertext));\n    }\n    assert(false, \"unsupported cipher\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"decrypt\"\n    });\n}\nfunction getAccount(data, _key) {\n    const key = getBytes(_key);\n    const ciphertext = spelunk(data, \"crypto.ciphertext:data!\");\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    assertArgument(computedMAC === spelunk(data, \"crypto.mac:string!\").toLowerCase(), \"incorrect password\", \"password\", \"[ REDACTED ]\");\n    const privateKey = decrypt(data, key.slice(0, 16), ciphertext);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (!check.startsWith(\"0x\")) {\n            check = \"0x\" + check;\n        }\n        assertArgument(getAddress(check) === address, \"keystore address/privateKey mismatch\", \"address\", data.address);\n    }\n    const account = { address, privateKey };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    const version = spelunk(data, \"x-ethers.version:string\");\n    if (version === \"0.1\") {\n        const mnemonicKey = key.slice(32, 64);\n        const mnemonicCiphertext = spelunk(data, \"x-ethers.mnemonicCiphertext:data!\");\n        const mnemonicIv = spelunk(data, \"x-ethers.mnemonicCounter:data!\");\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n        account.mnemonic = {\n            path: (spelunk(data, \"x-ethers.path:string\") || defaultPath),\n            locale: (spelunk(data, \"x-ethers.locale:string\") || \"en\"),\n            entropy: hexlify(getBytes(mnemonicAesCtr.decrypt(mnemonicCiphertext)))\n        };\n    }\n    return account;\n}\nfunction getDecryptKdfParams(data) {\n    const kdf = spelunk(data, \"crypto.kdf:string\");\n    if (kdf && typeof (kdf) === \"string\") {\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = spelunk(data, \"crypto.kdfparams.salt:data!\");\n            const N = spelunk(data, \"crypto.kdfparams.n:int!\");\n            const r = spelunk(data, \"crypto.kdfparams.r:int!\");\n            const p = spelunk(data, \"crypto.kdfparams.p:int!\");\n            // Make sure N is a power of 2\n            assertArgument(N > 0 && (N & (N - 1)) === 0, \"invalid kdf.N\", \"kdf.N\", N);\n            assertArgument(r > 0 && p > 0, \"invalid kdf\", \"kdf\", kdf);\n            const dkLen = spelunk(data, \"crypto.kdfparams.dklen:int!\");\n            assertArgument(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dflen\", dkLen);\n            return { name: \"scrypt\", salt, N, r, p, dkLen: 64 };\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = spelunk(data, \"crypto.kdfparams.salt:data!\");\n            const prf = spelunk(data, \"crypto.kdfparams.prf:string!\");\n            const algorithm = prf.split(\"-\").pop();\n            assertArgument(algorithm === \"sha256\" || algorithm === \"sha512\", \"invalid kdf.pdf\", \"kdf.pdf\", prf);\n            const count = spelunk(data, \"crypto.kdfparams.c:int!\");\n            const dkLen = spelunk(data, \"crypto.kdfparams.dklen:int!\");\n            assertArgument(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dklen\", dkLen);\n            return { name: \"pbkdf2\", salt, count, dkLen, algorithm };\n        }\n    }\n    assertArgument(false, \"unsupported key-derivation function\", \"kdf\", kdf);\n}\n/**\n *  Returns the account details for the JSON Keystore Wallet %%json%%\n *  using %%password%%.\n *\n *  It is preferred to use the [async version](decryptKeystoreJson)\n *  instead, which allows a [[ProgressCallback]] to keep the user informed\n *  as to the decryption status.\n *\n *  This method will block the event loop (freezing all UI) until decryption\n *  is complete, which can take quite some time, depending on the wallet\n *  paramters and platform.\n */\nexport function decryptKeystoreJsonSync(json, _password) {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        return getAccount(data, key);\n    }\n    assert(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params });\n    const { salt, N, r, p, dkLen } = params;\n    const key = scryptSync(password, salt, N, r, p, dkLen);\n    return getAccount(data, key);\n}\nfunction stall(duration) {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\n/**\n *  Resolves to the decrypted JSON Keystore Wallet %%json%% using the\n *  %%password%%.\n *\n *  If provided, %%progress%% will be called periodically during the\n *  decrpytion to provide feedback, and if the function returns\n *  ``false`` will halt decryption.\n *\n *  The %%progressCallback%% will **always** receive ``0`` before\n *  decryption begins and ``1`` when complete.\n */\nexport async function decryptKeystoreJson(json, _password, progress) {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        if (progress) {\n            progress(0);\n            await stall(0);\n        }\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        if (progress) {\n            progress(1);\n            await stall(0);\n        }\n        return getAccount(data, key);\n    }\n    assert(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params });\n    const { salt, N, r, p, dkLen } = params;\n    const key = await scrypt(password, salt, N, r, p, dkLen, progress);\n    return getAccount(data, key);\n}\nfunction getEncryptKdfParams(options) {\n    // Check/generate the salt\n    const salt = (options.salt != null) ? getBytes(options.salt, \"options.salt\") : randomBytes(32);\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    assertArgument(typeof (N) === \"number\" && N > 0 && Number.isSafeInteger(N) && (BigInt(N) & BigInt(N - 1)) === BigInt(0), \"invalid scrypt N parameter\", \"options.N\", N);\n    assertArgument(typeof (r) === \"number\" && r > 0 && Number.isSafeInteger(r), \"invalid scrypt r parameter\", \"options.r\", r);\n    assertArgument(typeof (p) === \"number\" && p > 0 && Number.isSafeInteger(p), \"invalid scrypt p parameter\", \"options.p\", p);\n    return { name: \"scrypt\", dkLen: 32, salt, N, r, p };\n}\nfunction _encryptKeystore(key, kdf, account, options) {\n    const privateKey = getBytes(account.privateKey, \"privateKey\");\n    // Override initialization vector\n    const iv = (options.iv != null) ? getBytes(options.iv, \"options.iv\") : randomBytes(16);\n    assertArgument(iv.length === 16, \"invalid options.iv length\", \"options.iv\", options.iv);\n    // Override the uuid\n    const uuidRandom = (options.uuid != null) ? getBytes(options.uuid, \"options.uuid\") : randomBytes(16);\n    assertArgument(uuidRandom.length === 16, \"invalid options.uuid length\", \"options.uuid\", options.iv);\n    // This will be used to encrypt the wallet (as per Web3 secret storage)\n    // - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    // - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    const derivedKey = key.slice(0, 16);\n    const macPrefix = key.slice(16, 32);\n    // Encrypt the private key\n    const aesCtr = new CTR(derivedKey, iv);\n    const ciphertext = getBytes(aesCtr.encrypt(privateKey));\n    // Compute the message authentication code, used to check the password\n    const mac = keccak256(concat([macPrefix, ciphertext]));\n    // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n    const data = {\n        address: account.address.substring(2).toLowerCase(),\n        id: uuidV4(uuidRandom),\n        version: 3,\n        Crypto: {\n            cipher: \"aes-128-ctr\",\n            cipherparams: {\n                iv: hexlify(iv).substring(2),\n            },\n            ciphertext: hexlify(ciphertext).substring(2),\n            kdf: \"scrypt\",\n            kdfparams: {\n                salt: hexlify(kdf.salt).substring(2),\n                n: kdf.N,\n                dklen: 32,\n                p: kdf.p,\n                r: kdf.r\n            },\n            mac: mac.substring(2)\n        }\n    };\n    // If we have a mnemonic, encrypt it into the JSON wallet\n    if (account.mnemonic) {\n        const client = (options.client != null) ? options.client : `ethers/${version}`;\n        const path = account.mnemonic.path || defaultPath;\n        const locale = account.mnemonic.locale || \"en\";\n        const mnemonicKey = key.slice(32, 64);\n        const entropy = getBytes(account.mnemonic.entropy, \"account.mnemonic.entropy\");\n        const mnemonicIv = randomBytes(16);\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n        const mnemonicCiphertext = getBytes(mnemonicAesCtr.encrypt(entropy));\n        const now = new Date();\n        const timestamp = (now.getUTCFullYear() + \"-\" +\n            zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n            zpad(now.getUTCDate(), 2) + \"T\" +\n            zpad(now.getUTCHours(), 2) + \"-\" +\n            zpad(now.getUTCMinutes(), 2) + \"-\" +\n            zpad(now.getUTCSeconds(), 2) + \".0Z\");\n        const gethFilename = (\"UTC--\" + timestamp + \"--\" + data.address);\n        data[\"x-ethers\"] = {\n            client, gethFilename, path, locale,\n            mnemonicCounter: hexlify(mnemonicIv).substring(2),\n            mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n            version: \"0.1\"\n        };\n    }\n    return JSON.stringify(data);\n}\n/**\n *  Return the JSON Keystore Wallet for %%account%% encrypted with\n *  %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used. Any provided [[ProgressCallback]] is ignord.\n */\nexport function encryptKeystoreJsonSync(account, password, options) {\n    if (options == null) {\n        options = {};\n    }\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = scryptSync(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n/**\n *  Resolved to the JSON Keystore Wallet for %%account%% encrypted\n *  with %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used and provide a [[ProgressCallback]] to receive periodic updates\n *  on the completion status..\n */\nexport async function encryptKeystoreJson(account, password, options) {\n    if (options == null) {\n        options = {};\n    }\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = await scrypt(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64, options.progressCallback);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n//# sourceMappingURL=json-keystore.js.map","/**\n *  Explain HD Wallets..\n *\n *  @_subsection: api/wallet:HD Wallets  [hd-wallets]\n */\nimport { computeHmac, randomBytes, ripemd160, SigningKey, sha256 } from \"../crypto/index.js\";\nimport { VoidSigner } from \"../providers/index.js\";\nimport { computeAddress } from \"../transaction/index.js\";\nimport { concat, dataSlice, decodeBase58, defineProperties, encodeBase58, getBytes, hexlify, isBytesLike, getNumber, toBeArray, toBigInt, toBeHex, assertPrivate, assert, assertArgument } from \"../utils/index.js\";\nimport { LangEn } from \"../wordlists/lang-en.js\";\nimport { BaseWallet } from \"./base-wallet.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\nimport { encryptKeystoreJson, encryptKeystoreJsonSync, } from \"./json-keystore.js\";\n/**\n *  The default derivation path for Ethereum HD Nodes. (i.e. ``\"m/44'/60'/0'/0/0\"``)\n */\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n// \"Bitcoin seed\"\nconst MasterSecret = new Uint8Array([66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100]);\nconst HardenedBit = 0x80000000;\nconst N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\nconst Nibbles = \"0123456789abcdef\";\nfunction zpad(value, length) {\n    let result = \"\";\n    while (value) {\n        result = Nibbles[value % 16] + result;\n        value = Math.trunc(value / 16);\n    }\n    while (result.length < length * 2) {\n        result = \"0\" + result;\n    }\n    return \"0x\" + result;\n}\nfunction encodeBase58Check(_value) {\n    const value = getBytes(_value);\n    const check = dataSlice(sha256(sha256(value)), 0, 4);\n    const bytes = concat([value, check]);\n    return encodeBase58(bytes);\n}\nconst _guard = {};\nfunction ser_I(index, chainCode, publicKey, privateKey) {\n    const data = new Uint8Array(37);\n    if (index & HardenedBit) {\n        assert(privateKey != null, \"cannot derive child of neutered node\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"deriveChild\"\n        });\n        // Data = 0x00 || ser_256(k_par)\n        data.set(getBytes(privateKey), 1);\n    }\n    else {\n        // Data = ser_p(point(k_par))\n        data.set(getBytes(publicKey));\n    }\n    // Data += ser_32(i)\n    for (let i = 24; i >= 0; i -= 8) {\n        data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n    }\n    const I = getBytes(computeHmac(\"sha512\", chainCode, data));\n    return { IL: I.slice(0, 32), IR: I.slice(32) };\n}\nfunction derivePath(node, path) {\n    const components = path.split(\"/\");\n    assertArgument(components.length > 0, \"invalid path\", \"path\", path);\n    if (components[0] === \"m\") {\n        assertArgument(node.depth === 0, `cannot derive root path (i.e. path starting with \"m/\") for a node at non-zero depth ${node.depth}`, \"path\", path);\n        components.shift();\n    }\n    let result = node;\n    for (let i = 0; i < components.length; i++) {\n        const component = components[i];\n        if (component.match(/^[0-9]+'$/)) {\n            const index = parseInt(component.substring(0, component.length - 1));\n            assertArgument(index < HardenedBit, \"invalid path index\", `path[${i}]`, component);\n            result = result.deriveChild(HardenedBit + index);\n        }\n        else if (component.match(/^[0-9]+$/)) {\n            const index = parseInt(component);\n            assertArgument(index < HardenedBit, \"invalid path index\", `path[${i}]`, component);\n            result = result.deriveChild(index);\n        }\n        else {\n            assertArgument(false, \"invalid path component\", `path[${i}]`, component);\n        }\n    }\n    return result;\n}\n/**\n *  An **HDNodeWallet** is a [[Signer]] backed by the private key derived\n *  from an HD Node using the [[link-bip-32]] stantard.\n *\n *  An HD Node forms a hierarchal structure with each HD Node having a\n *  private key and the ability to derive child HD Nodes, defined by\n *  a path indicating the index of each child.\n */\nexport class HDNodeWallet extends BaseWallet {\n    /**\n     *  The compressed public key.\n     */\n    publicKey;\n    /**\n     *  The fingerprint.\n     *\n     *  A fingerprint allows quick qay to detect parent and child nodes,\n     *  but developers should be prepared to deal with collisions as it\n     *  is only 4 bytes.\n     */\n    fingerprint;\n    /**\n     *  The parent fingerprint.\n     */\n    parentFingerprint;\n    /**\n     *  The mnemonic used to create this HD Node, if available.\n     *\n     *  Sources such as extended keys do not encode the mnemonic, in\n     *  which case this will be ``null``.\n     */\n    mnemonic;\n    /**\n     *  The chaincode, which is effectively a public key used\n     *  to derive children.\n     */\n    chainCode;\n    /**\n     *  The derivation path of this wallet.\n     *\n     *  Since extended keys do not provide full path details, this\n     *  may be ``null``, if instantiated from a source that does not\n     *  encode it.\n     */\n    path;\n    /**\n     *  The child index of this wallet. Values over ``2 *\\* 31`` indicate\n     *  the node is hardened.\n     */\n    index;\n    /**\n     *  The depth of this wallet, which is the number of components\n     *  in its path.\n     */\n    depth;\n    /**\n     *  @private\n     */\n    constructor(guard, signingKey, parentFingerprint, chainCode, path, index, depth, mnemonic, provider) {\n        super(signingKey, provider);\n        assertPrivate(guard, _guard, \"HDNodeWallet\");\n        defineProperties(this, { publicKey: signingKey.compressedPublicKey });\n        const fingerprint = dataSlice(ripemd160(sha256(this.publicKey)), 0, 4);\n        defineProperties(this, {\n            parentFingerprint, fingerprint,\n            chainCode, path, index, depth\n        });\n        defineProperties(this, { mnemonic });\n    }\n    connect(provider) {\n        return new HDNodeWallet(_guard, this.signingKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, this.mnemonic, provider);\n    }\n    #account() {\n        const account = { address: this.address, privateKey: this.privateKey };\n        const m = this.mnemonic;\n        if (this.path && m && m.wordlist.locale === \"en\" && m.password === \"\") {\n            account.mnemonic = {\n                path: this.path,\n                locale: \"en\",\n                entropy: m.entropy\n            };\n        }\n        return account;\n    }\n    /**\n     *  Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with\n     *  %%password%%.\n     *\n     *  If %%progressCallback%% is specified, it will receive periodic\n     *  updates as the encryption process progreses.\n     */\n    async encrypt(password, progressCallback) {\n        return await encryptKeystoreJson(this.#account(), password, { progressCallback });\n    }\n    /**\n     *  Returns a [JSON Keystore Wallet](json-wallets) encryped with\n     *  %%password%%.\n     *\n     *  It is preferred to use the [async version](encrypt) instead,\n     *  which allows a [[ProgressCallback]] to keep the user informed.\n     *\n     *  This method will block the event loop (freezing all UI) until\n     *  it is complete, which may be a non-trivial duration.\n     */\n    encryptSync(password) {\n        return encryptKeystoreJsonSync(this.#account(), password);\n    }\n    /**\n     *  The extended key.\n     *\n     *  This key will begin with the prefix ``xpriv`` and can be used to\n     *  reconstruct this HD Node to derive its children.\n     */\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        assert(this.depth < 256, \"Depth too deep\", \"UNSUPPORTED_OPERATION\", { operation: \"extendedKey\" });\n        return encodeBase58Check(concat([\n            \"0x0488ADE4\", zpad(this.depth, 1), this.parentFingerprint,\n            zpad(this.index, 4), this.chainCode,\n            concat([\"0x00\", this.privateKey])\n        ]));\n    }\n    /**\n     *  Returns true if this wallet has a path, providing a Type Guard\n     *  that the path is non-null.\n     */\n    hasPath() { return (this.path != null); }\n    /**\n     *  Returns a neutered HD Node, which removes the private details\n     *  of an HD Node.\n     *\n     *  A neutered node has no private key, but can be used to derive\n     *  child addresses and other public data about the HD Node.\n     */\n    neuter() {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, this.provider);\n    }\n    /**\n     *  Return the child for %%index%%.\n     */\n    deriveChild(_index) {\n        const index = getNumber(_index, \"index\");\n        assertArgument(index <= 0xffffffff, \"invalid index\", \"index\", index);\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) {\n                path += \"'\";\n            }\n        }\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, this.privateKey);\n        const ki = new SigningKey(toBeHex((toBigInt(IL) + BigInt(this.privateKey)) % N, 32));\n        return new HDNodeWallet(_guard, ki, this.fingerprint, hexlify(IR), path, index, this.depth + 1, this.mnemonic, this.provider);\n    }\n    /**\n     *  Return the HDNode for %%path%% from this node.\n     */\n    derivePath(path) {\n        return derivePath(this, path);\n    }\n    static #fromSeed(_seed, mnemonic) {\n        assertArgument(isBytesLike(_seed), \"invalid seed\", \"seed\", \"[REDACTED]\");\n        const seed = getBytes(_seed, \"seed\");\n        assertArgument(seed.length >= 16 && seed.length <= 64, \"invalid seed\", \"seed\", \"[REDACTED]\");\n        const I = getBytes(computeHmac(\"sha512\", MasterSecret, seed));\n        const signingKey = new SigningKey(hexlify(I.slice(0, 32)));\n        return new HDNodeWallet(_guard, signingKey, \"0x00000000\", hexlify(I.slice(32)), \"m\", 0, 0, mnemonic, null);\n    }\n    /**\n     *  Creates a new HD Node from %%extendedKey%%.\n     *\n     *  If the %%extendedKey%% will either have a prefix or ``xpub`` or\n     *  ``xpriv``, returning a neutered HD Node ([[HDNodeVoidWallet]])\n     *  or full HD Node ([[HDNodeWallet) respectively.\n     */\n    static fromExtendedKey(extendedKey) {\n        const bytes = toBeArray(decodeBase58(extendedKey)); // @TODO: redact\n        assertArgument(bytes.length === 82 || encodeBase58Check(bytes.slice(0, 78)) === extendedKey, \"invalid extended key\", \"extendedKey\", \"[ REDACTED ]\");\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\": {\n                const publicKey = hexlify(key);\n                return new HDNodeVoidWallet(_guard, computeAddress(publicKey), publicKey, parentFingerprint, chainCode, null, index, depth, null);\n            }\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNodeWallet(_guard, new SigningKey(key.slice(1)), parentFingerprint, chainCode, null, index, depth, null, null);\n        }\n        assertArgument(false, \"invalid extended key prefix\", \"extendedKey\", \"[ REDACTED ]\");\n    }\n    /**\n     *  Creates a new random HDNode.\n     */\n    static createRandom(password, path, wordlist) {\n        if (password == null) {\n            password = \"\";\n        }\n        if (path == null) {\n            path = defaultPath;\n        }\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        const mnemonic = Mnemonic.fromEntropy(randomBytes(16), password, wordlist);\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n    /**\n     *  Create an HD Node from %%mnemonic%%.\n     */\n    static fromMnemonic(mnemonic, path) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n    /**\n     *  Creates an HD Node from a mnemonic %%phrase%%.\n     */\n    static fromPhrase(phrase, password, path, wordlist) {\n        if (password == null) {\n            password = \"\";\n        }\n        if (path == null) {\n            path = defaultPath;\n        }\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        const mnemonic = Mnemonic.fromPhrase(phrase, password, wordlist);\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n    /**\n     *  Creates an HD Node from a %%seed%%.\n     */\n    static fromSeed(seed) {\n        return HDNodeWallet.#fromSeed(seed, null);\n    }\n}\n/**\n *  A **HDNodeVoidWallet** cannot sign, but provides access to\n *  the children nodes of a [[link-bip-32]] HD wallet addresses.\n *\n *  The can be created by using an extended ``xpub`` key to\n *  [[HDNodeWallet_fromExtendedKey]] or by\n *  [nuetering](HDNodeWallet-neuter) a [[HDNodeWallet]].\n */\nexport class HDNodeVoidWallet extends VoidSigner {\n    /**\n     *  The compressed public key.\n     */\n    publicKey;\n    /**\n     *  The fingerprint.\n     *\n     *  A fingerprint allows quick qay to detect parent and child nodes,\n     *  but developers should be prepared to deal with collisions as it\n     *  is only 4 bytes.\n     */\n    fingerprint;\n    /**\n     *  The parent node fingerprint.\n     */\n    parentFingerprint;\n    /**\n     *  The chaincode, which is effectively a public key used\n     *  to derive children.\n     */\n    chainCode;\n    /**\n     *  The derivation path of this wallet.\n     *\n     *  Since extended keys do not provider full path details, this\n     *  may be ``null``, if instantiated from a source that does not\n     *  enocde it.\n     */\n    path;\n    /**\n     *  The child index of this wallet. Values over ``2 *\\* 31`` indicate\n     *  the node is hardened.\n     */\n    index;\n    /**\n     *  The depth of this wallet, which is the number of components\n     *  in its path.\n     */\n    depth;\n    /**\n     *  @private\n     */\n    constructor(guard, address, publicKey, parentFingerprint, chainCode, path, index, depth, provider) {\n        super(address, provider);\n        assertPrivate(guard, _guard, \"HDNodeVoidWallet\");\n        defineProperties(this, { publicKey });\n        const fingerprint = dataSlice(ripemd160(sha256(publicKey)), 0, 4);\n        defineProperties(this, {\n            publicKey, fingerprint, parentFingerprint, chainCode, path, index, depth\n        });\n    }\n    connect(provider) {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, provider);\n    }\n    /**\n     *  The extended key.\n     *\n     *  This key will begin with the prefix ``xpub`` and can be used to\n     *  reconstruct this neutered key to derive its children addresses.\n     */\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        assert(this.depth < 256, \"Depth too deep\", \"UNSUPPORTED_OPERATION\", { operation: \"extendedKey\" });\n        return encodeBase58Check(concat([\n            \"0x0488B21E\",\n            zpad(this.depth, 1),\n            this.parentFingerprint,\n            zpad(this.index, 4),\n            this.chainCode,\n            this.publicKey,\n        ]));\n    }\n    /**\n     *  Returns true if this wallet has a path, providing a Type Guard\n     *  that the path is non-null.\n     */\n    hasPath() { return (this.path != null); }\n    /**\n     *  Return the child for %%index%%.\n     */\n    deriveChild(_index) {\n        const index = getNumber(_index, \"index\");\n        assertArgument(index <= 0xffffffff, \"invalid index\", \"index\", index);\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) {\n                path += \"'\";\n            }\n        }\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, null);\n        const Ki = SigningKey.addPoints(IL, this.publicKey, true);\n        const address = computeAddress(Ki);\n        return new HDNodeVoidWallet(_guard, address, Ki, this.fingerprint, hexlify(IR), path, index, this.depth + 1, this.provider);\n    }\n    /**\n     *  Return the signer for %%path%% from this node.\n     */\n    derivePath(path) {\n        return derivePath(this, path);\n    }\n}\n/*\nexport class HDNodeWalletManager {\n    #root: HDNodeWallet;\n\n    constructor(phrase: string, password?: null | string, path?: null | string, locale?: null | Wordlist) {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = \"m/44'/60'/0'/0\"; }\n        if (locale == null) { locale = LangEn.wordlist(); }\n        this.#root = HDNodeWallet.fromPhrase(phrase, password, path, locale);\n    }\n\n    getSigner(index?: number): HDNodeWallet {\n        return this.#root.deriveChild((index == null) ? 0: index);\n    }\n}\n*/\n/**\n *  Returns the [[link-bip-32]] path for the account at %%index%%.\n *\n *  This is the pattern used by wallets like Ledger.\n *\n *  There is also an [alternate pattern](getIndexedAccountPath) used by\n *  some software.\n */\nexport function getAccountPath(_index) {\n    const index = getNumber(_index, \"index\");\n    assertArgument(index >= 0 && index < HardenedBit, \"invalid account index\", \"index\", index);\n    return `m/44'/60'/${index}'/0/0`;\n}\n/**\n *  Returns the path using an alternative pattern for deriving accounts,\n *  at %%index%%.\n *\n *  This derivation path uses the //index// component rather than the\n *  //account// component to derive sequential accounts.\n *\n *  This is the pattern used by wallets like MetaMask.\n */\nexport function getIndexedAccountPath(_index) {\n    const index = getNumber(_index, \"index\");\n    assertArgument(index >= 0 && index < HardenedBit, \"invalid account index\", \"index\", index);\n    return `m/44'/60'/0'/0/${index}`;\n}\n//# sourceMappingURL=hdwallet.js.map","/**\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\nimport { CBC, pkcs7Strip } from \"aes-js\";\nimport { getAddress } from \"../address/index.js\";\nimport { pbkdf2 } from \"../crypto/index.js\";\nimport { id } from \"../hash/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\nimport { getPassword, looseArrayify, spelunk } from \"./utils.js\";\n/**\n *  Returns true if %%json%% is a valid JSON Crowdsale wallet.\n */\nexport function isCrowdsaleJson(json) {\n    try {\n        const data = JSON.parse(json);\n        if (data.encseed) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\n// See: https://github.com/ethereum/pyethsaletool\n/**\n *  Before Ethereum launched, it was necessary to create a wallet\n *  format for backers to use, which would be used to receive ether\n *  as a reward for contributing to the project.\n *\n *  The [[link-crowdsale]] format is now obsolete, but it is still\n *  useful to support and the additional code is fairly trivial as\n *  all the primitives required are used through core portions of\n *  the library.\n */\nexport function decryptCrowdsaleJson(json, _password) {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n    // Ethereum Address\n    const address = getAddress(spelunk(data, \"ethaddr:string!\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(spelunk(data, \"encseed:string!\"));\n    assertArgument(encseed && (encseed.length % 16) === 0, \"invalid encseed\", \"json\", json);\n    const key = getBytes(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new CBC(key, iv);\n    const seed = pkcs7Strip(getBytes(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    return { address, privateKey: id(seedHex) };\n}\n//# sourceMappingURL=json-crowdsale.js.map","export function pkcs7Pad(data) {\n    const padder = 16 - (data.length % 16);\n    const result = new Uint8Array(data.length + padder);\n    result.set(data);\n    for (let i = data.length; i < result.length; i++) {\n        result[i] = padder;\n    }\n    return result;\n}\nexport function pkcs7Strip(data) {\n    if (data.length < 16) {\n        throw new TypeError('PKCS#7 invalid length');\n    }\n    const padder = data[data.length - 1];\n    if (padder > 16) {\n        throw new TypeError('PKCS#7 padding byte out of range');\n    }\n    const length = data.length - padder;\n    for (let i = 0; i < padder; i++) {\n        if (data[length + i] !== padder) {\n            throw new TypeError('PKCS#7 invalid padding byte');\n        }\n    }\n    return new Uint8Array(data.subarray(0, length));\n}\n//# sourceMappingURL=padding.js.map","import { SigningKey } from \"../crypto/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\nimport { BaseWallet } from \"./base-wallet.js\";\nimport { HDNodeWallet } from \"./hdwallet.js\";\nimport { decryptCrowdsaleJson, isCrowdsaleJson } from \"./json-crowdsale.js\";\nimport { decryptKeystoreJson, decryptKeystoreJsonSync, encryptKeystoreJson, encryptKeystoreJsonSync, isKeystoreJson } from \"./json-keystore.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\nfunction stall(duration) {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\n/**\n *  A **Wallet** manages a single private key which is used to sign\n *  transactions, messages and other common payloads.\n *\n *  This class is generally the main entry point for developers\n *  that wish to use a private key directly, as it can create\n *  instances from a large variety of common sources, including\n *  raw private key, [[link-bip-39]] mnemonics and encrypte JSON\n *  wallets.\n */\nexport class Wallet extends BaseWallet {\n    /**\n     *  Create a new wallet for the private %%key%%, optionally connected\n     *  to %%provider%%.\n     */\n    constructor(key, provider) {\n        if (typeof (key) === \"string\" && !key.startsWith(\"0x\")) {\n            key = \"0x\" + key;\n        }\n        let signingKey = (typeof (key) === \"string\") ? new SigningKey(key) : key;\n        super(signingKey, provider);\n    }\n    connect(provider) {\n        return new Wallet(this.signingKey, provider);\n    }\n    /**\n     *  Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with\n     *  %%password%%.\n     *\n     *  If %%progressCallback%% is specified, it will receive periodic\n     *  updates as the encryption process progreses.\n     */\n    async encrypt(password, progressCallback) {\n        const account = { address: this.address, privateKey: this.privateKey };\n        return await encryptKeystoreJson(account, password, { progressCallback });\n    }\n    /**\n     *  Returns a [JSON Keystore Wallet](json-wallets) encryped with\n     *  %%password%%.\n     *\n     *  It is preferred to use the [async version](encrypt) instead,\n     *  which allows a [[ProgressCallback]] to keep the user informed.\n     *\n     *  This method will block the event loop (freezing all UI) until\n     *  it is complete, which may be a non-trivial duration.\n     */\n    encryptSync(password) {\n        const account = { address: this.address, privateKey: this.privateKey };\n        return encryptKeystoreJsonSync(account, password);\n    }\n    static #fromAccount(account) {\n        assertArgument(account, \"invalid JSON wallet\", \"json\", \"[ REDACTED ]\");\n        if (\"mnemonic\" in account && account.mnemonic && account.mnemonic.locale === \"en\") {\n            const mnemonic = Mnemonic.fromEntropy(account.mnemonic.entropy);\n            const wallet = HDNodeWallet.fromMnemonic(mnemonic, account.mnemonic.path);\n            if (wallet.address === account.address && wallet.privateKey === account.privateKey) {\n                return wallet;\n            }\n            console.log(\"WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key\");\n        }\n        const wallet = new Wallet(account.privateKey);\n        assertArgument(wallet.address === account.address, \"address/privateKey mismatch\", \"json\", \"[ REDACTED ]\");\n        return wallet;\n    }\n    /**\n     *  Creates (asynchronously) a **Wallet** by decrypting the %%json%%\n     *  with %%password%%.\n     *\n     *  If %%progress%% is provided, it is called periodically during\n     *  decryption so that any UI can be updated.\n     */\n    static async fromEncryptedJson(json, password, progress) {\n        let account = null;\n        if (isKeystoreJson(json)) {\n            account = await decryptKeystoreJson(json, password, progress);\n        }\n        else if (isCrowdsaleJson(json)) {\n            if (progress) {\n                progress(0);\n                await stall(0);\n            }\n            account = decryptCrowdsaleJson(json, password);\n            if (progress) {\n                progress(1);\n                await stall(0);\n            }\n        }\n        return Wallet.#fromAccount(account);\n    }\n    /**\n     *  Creates a **Wallet** by decrypting the %%json%% with %%password%%.\n     *\n     *  The [[fromEncryptedJson]] method is preferred, as this method\n     *  will lock up and freeze the UI during decryption, which may take\n     *  some time.\n     */\n    static fromEncryptedJsonSync(json, password) {\n        let account = null;\n        if (isKeystoreJson(json)) {\n            account = decryptKeystoreJsonSync(json, password);\n        }\n        else if (isCrowdsaleJson(json)) {\n            account = decryptCrowdsaleJson(json, password);\n        }\n        else {\n            assertArgument(false, \"invalid JSON wallet\", \"json\", \"[ REDACTED ]\");\n        }\n        return Wallet.#fromAccount(account);\n    }\n    /**\n     *  Creates a new random [[HDNodeWallet]] using the available\n     *  [cryptographic random source](randomBytes).\n     *\n     *  If there is no crytographic random source, this will throw.\n     */\n    static createRandom(provider) {\n        const wallet = HDNodeWallet.createRandom();\n        if (provider) {\n            return wallet.connect(provider);\n        }\n        return wallet;\n    }\n    /**\n     *  Creates a [[HDNodeWallet]] for %%phrase%%.\n     */\n    static fromPhrase(phrase, provider) {\n        const wallet = HDNodeWallet.fromPhrase(phrase);\n        if (provider) {\n            return wallet.connect(provider);\n        }\n        return wallet;\n    }\n}\n//# sourceMappingURL=wallet.js.map","import { getClientFetch } from \"../utils/fetch.js\";\nimport { resolveScheme } from \"../utils/ipfs.js\";\n/**\n * @description Downloads a file from the specified IPFS, Arweave, or HTTP URI.\n *\n * `download` will parse the provided URI based on its scheme (ipfs://, ar://, https://) and convert it to a URL to fetch the file from thirdweb's storage service.\n *\n * @param options - The download options.\n * @param options.client - The Thirdweb client. See [createThirdwebClient](https://portal.thirdweb.com/references/typescript/v5/createThirdwebClient).\n * @param options.uri - The URI of the file to download. Can be IPFS, Arweave, or HTTP.\n * @param [options.requestTimeoutMs] - The maximum time in milliseconds to wait for the request to complete. Defaults to 60 seconds (60,000 milliseconds).\n *\n * @returns Asynchronously returns the network response from fetching the file.\n * @throws An error if the URI scheme is invalid or if the request fails.\n *\n * @example\n * Download a file from IPFS:\n * ```ts\n * import { download } from \"thirdweb/storage\";\n * import { createThirdwebClient } from \"@thirdweb-dev/sdk\";\n *\n * const client = createThirdwebClient({ clientId: \"YOUR_CLIENT_ID\" });\n *\n * const file = await download({\n *  client,\n *  uri: \"ipfs://Qm...\",\n * });\n * ```\n *\n * Download a file from Arweave:\n * ```ts\n * import { download } from \"thirdweb/storage\";\n * import { createThirdwebClient } from \"@thirdweb-dev/sdk\";\n *\n * const client = createThirdwebClient({ clientId: \"YOUR_CLIENT_ID\" });\n *\n * const file = await download({\n *  client,\n *  uri: \"ar://{arweave-transaction-id}\",\n * });\n * ```\n *\n * Download a file from HTTP:\n * ```ts\n * import { download } from \"thirdweb/storage\";\n * import { createThirdwebClient } from \"@thirdweb-dev/sdk\";\n *\n * const client = createThirdwebClient({ clientId: \"YOUR_CLIENT_ID\" });\n *\n * const file = await download({\n *  client,\n *  uri: \"https://example.com/file.txt\",\n * });\n * ```\n *\n * @storage\n */\nexport async function download(options) {\n    let url;\n    if (options.uri.startsWith(\"ar://\")) {\n        const { resolveArweaveScheme } = await import(\"../utils/arweave.js\");\n        url = resolveArweaveScheme(options);\n    }\n    else {\n        url = resolveScheme(options);\n    }\n    const res = await getClientFetch(options.client)(url, {\n        keepalive: options.client.config?.storage?.fetch?.keepalive,\n        headers: options.client.config?.storage?.fetch?.headers,\n        requestTimeoutMs: options.requestTimeoutMs ??\n            options.client.config?.storage?.fetch?.requestTimeoutMs ??\n            60000,\n    });\n    if (!res.ok) {\n        res.body?.cancel();\n        throw new Error(`Failed to download file: ${res.statusText}`);\n    }\n    return res;\n}\n//# sourceMappingURL=download.js.map","const DEFAULT_GATEWAY = \"https://{clientId}.ipfscdn.io/ipfs/{cid}\";\n/**\n * Resolves the scheme of a given URI and returns the corresponding URL.\n * If the URI starts with \"ipfs://\", it constructs a URL using the IPFS client ID and the IPFS gateway.\n * If the URI starts with \"http\", it returns the URI as is.\n * Otherwise, it throws an error indicating an invalid URI scheme.\n * @param options - The options object containing the URI and the IPFS client.\n * @returns The resolved URL.\n * @throws Error if the URI scheme is invalid.\n * @example\n * ```ts\n * import { resolveScheme } from \"thirdweb/storage\";\n * const url = resolveScheme({\n *  client,\n *  uri: \"ipfs://Qm...\",\n * });\n * ```\n * @storage\n */\nexport function resolveScheme(options) {\n    if (options.uri.startsWith(\"ipfs://\")) {\n        const gateway = options.client.config?.storage?.gatewayUrl ?? DEFAULT_GATEWAY;\n        const clientId = options.client.clientId;\n        const cid = findIPFSCidFromUri(options.uri);\n        let bundleId = undefined;\n        if (typeof globalThis !== \"undefined\" && \"Application\" in globalThis) {\n            // shims use wallet connect RN module which injects Application info in globalThis\n            // biome-ignore lint/suspicious/noExplicitAny: get around globalThis typing\n            bundleId = globalThis.Application.applicationId;\n        }\n        // purposefully using SPLIT here and not replace for CID to avoid cases where users don't know the schema\n        // also only splitting on `/ipfs` to avoid cases where people pass non `/` terminated gateway urls\n        return `${gateway.replace(\"{clientId}\", clientId).split(\"/ipfs\")[0]}/ipfs/${cid}${bundleId ? `?bundleId=${bundleId}` : \"\"}`;\n    }\n    if (options.uri.startsWith(\"http\")) {\n        return options.uri;\n    }\n    throw new Error(`Invalid URI scheme, expected \"ipfs://\" or \"http(s)://\"`);\n}\n/**\n * @internal\n */\nexport function findIPFSCidFromUri(uri) {\n    if (!uri.startsWith(\"ipfs://\")) {\n        // do not touch URIs that are not ipfs URIs\n        return uri;\n    }\n    // first index of `/Qm` or `/bafy` in the uri (case insensitive)\n    const firstIndex = uri.search(/\\/(Qm|baf)/i);\n    // we start one character after the first `/` to avoid including it in the CID\n    return uri.slice(firstIndex + 1);\n}\n/**\n * Uploads or extracts URIs from the given files.\n * @template T - The type of the files (File, Buffer, String).\n * @param files - The files to upload or extract URIs from.\n * @param client - The Thirdweb client.\n * @param [startNumber] - The starting number for rewriting file names.\n * @returns - A promise that resolves to an array of URIs.\n * @throws {Error} - If the files are not all of the same type (all URI or all FileOrBufferOrString).\n * @internal\n *\n */\nexport async function uploadOrExtractURIs(files, client, startNumber) {\n    if (isUriList(files)) {\n        return files;\n    }\n    if (isMetadataList(files)) {\n        const { upload } = await import(\"../storage/upload.js\");\n        const uris = await upload({\n            client,\n            files,\n            rewriteFileNames: {\n                fileStartNumber: startNumber || 0,\n            },\n        });\n        return Array.isArray(uris) ? uris : [uris];\n    }\n    throw new Error(\"Files must all be of the same type (all URI or all FileOrBufferOrString)\");\n}\n/**\n * Retrieves the base URI from a batch of URIs.\n *\n * @param uris - An array of URIs.\n * @returns The base URI shared by all URIs in the batch.\n * @throws If the batch contains URIs with different base URIs or if no base URI is found.\n * @internal\n */\nexport function getBaseUriFromBatch(uris) {\n    // biome-ignore lint/style/noParameterAssign: lemme do my stuff\n    uris = Array.isArray(uris) ? uris : [uris];\n    const [base, ...rest] = uris.map((uri) => {\n        // remove query parameters\n        // biome-ignore lint/style/noParameterAssign: lemme do my stuff\n        [uri] = uri.split(\"?\");\n        // remove fragments\n        // biome-ignore lint/style/noParameterAssign: lemme do my stuff\n        [uri] = uri.split(\"#\");\n        // if the URI ends with a `/`, remove it\n        if (uri.endsWith(\"/\")) {\n            // biome-ignore lint/style/noParameterAssign: lemme do my stuff\n            uri = uri.slice(0, -1);\n        }\n        // remove the last part of the URI & add the trailing `/`\n        return `${uri.split(\"/\").slice(0, -1).join(\"/\")}/`;\n    });\n    if (!base) {\n        throw new Error(\"Batch of URIs is empty\");\n    }\n    if (rest.some((uri) => uri !== base)) {\n        throw new Error(\"All URIs in the batch must have the same base URI\");\n    }\n    return base;\n}\nfunction isUriList(metadatas) {\n    return metadatas.every((m) => typeof m === \"string\");\n}\nfunction isMetadataList(metadatas) {\n    return metadatas.every((m) => typeof m !== \"string\");\n}\n//# sourceMappingURL=ipfs.js.map","import { getVersion } from './internal/errors.js';\n/**\n * Base error class inherited by all errors thrown by ox.\n *\n * @example\n * ```ts\n * import { Errors } from 'ox'\n * throw new Errors.BaseError('An error occurred')\n * ```\n */\nexport class BaseError extends Error {\n    constructor(shortMessage, options = {}) {\n        const details = (() => {\n            if (options.cause instanceof BaseError) {\n                if (options.cause.details)\n                    return options.cause.details;\n                if (options.cause.shortMessage)\n                    return options.cause.shortMessage;\n            }\n            if (options.cause?.message)\n                return options.cause.message;\n            return options.details;\n        })();\n        const docsPath = (() => {\n            if (options.cause instanceof BaseError)\n                return options.cause.docsPath || options.docsPath;\n            return options.docsPath;\n        })();\n        const docsBaseUrl = 'https://oxlib.sh';\n        const docs = `${docsBaseUrl}${docsPath ?? ''}`;\n        const message = [\n            shortMessage || 'An error occurred.',\n            ...(options.metaMessages ? ['', ...options.metaMessages] : []),\n            ...(details || docsPath\n                ? [\n                    '',\n                    details ? `Details: ${details}` : undefined,\n                    docsPath ? `See: ${docs}` : undefined,\n                ]\n                : []),\n        ]\n            .filter((x) => typeof x === 'string')\n            .join('\\n');\n        super(message, options.cause ? { cause: options.cause } : undefined);\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BaseError'\n        });\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `ox@${getVersion()}`\n        });\n        this.cause = options.cause;\n        this.details = details;\n        this.docs = docs;\n        this.docsPath = docsPath;\n        this.shortMessage = shortMessage;\n    }\n    walk(fn) {\n        return walk(this, fn);\n    }\n}\n/** @internal */\nfunction walk(err, fn) {\n    if (fn?.(err))\n        return err;\n    if (err && typeof err === 'object' && 'cause' in err && err.cause)\n        return walk(err.cause, fn);\n    return fn ? null : err;\n}\n//# sourceMappingURL=Errors.js.map","import * as Hex from '../Hex.js';\n/** @internal */\nexport function assertSize(hex, size_) {\n    if (Hex.size(hex) > size_)\n        throw new Hex.SizeOverflowError({\n            givenSize: Hex.size(hex),\n            maxSize: size_,\n        });\n}\n/** @internal */\nexport function assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > Hex.size(value) - 1)\n        throw new Hex.SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: Hex.size(value),\n        });\n}\n/** @internal */\nexport function assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        Hex.size(value) !== end - start) {\n        throw new Hex.SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: Hex.size(value),\n        });\n    }\n}\n/** @internal */\nexport function pad(hex_, options = {}) {\n    const { dir, size = 32 } = options;\n    if (size === 0)\n        return hex_;\n    const hex = hex_.replace('0x', '');\n    if (hex.length > size * 2)\n        throw new Hex.SizeExceedsPaddingSizeError({\n            size: Math.ceil(hex.length / 2),\n            targetSize: size,\n            type: 'Hex',\n        });\n    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n}\n/** @internal */\nexport function trim(value, options = {}) {\n    const { dir = 'left' } = options;\n    let data = value.replace('0x', '');\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    if (data === '0')\n        return '0x';\n    if (dir === 'right' && data.length % 2 === 1)\n        return `0x${data}0`;\n    return `0x${data}`;\n}\n//# sourceMappingURL=hex.js.map","import { equalBytes } from '@noble/curves/abstract/utils';\nimport * as Bytes from './Bytes.js';\nimport * as Errors from './Errors.js';\nimport * as Json from './Json.js';\nimport * as internal_bytes from './internal/bytes.js';\nimport * as internal from './internal/hex.js';\nconst encoder = /*#__PURE__*/ new TextEncoder();\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\n/**\n * Asserts if the given value is {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert('abc')\n * // @error: InvalidHexValueTypeError:\n * // @error: Value `\"abc\"` of type `string` is an invalid hex type.\n * // @error: Hex types must be represented as `\"0x\\${string}\"`.\n * ```\n *\n * @param value - The value to assert.\n * @param options - Options.\n */\nexport function assert(value, options = {}) {\n    const { strict = false } = options;\n    if (!value)\n        throw new InvalidHexTypeError(value);\n    if (typeof value !== 'string')\n        throw new InvalidHexTypeError(value);\n    if (strict) {\n        if (!/^0x[0-9a-fA-F]*$/.test(value))\n            throw new InvalidHexValueError(value);\n    }\n    if (!value.startsWith('0x'))\n        throw new InvalidHexValueError(value);\n}\n/**\n * Concatenates two or more {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.concat('0x123', '0x456')\n * // @log: '0x123456'\n * ```\n *\n * @param values - The {@link ox#Hex.Hex} values to concatenate.\n * @returns The concatenated {@link ox#Hex.Hex} value.\n */\nexport function concat(...values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n/**\n * Instantiates a {@link ox#Hex.Hex} value from a hex string or {@link ox#Bytes.Bytes} value.\n *\n * :::tip\n *\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\n *\n * - `Hex.fromBoolean`\n *\n * - `Hex.fromString`\n *\n * - `Hex.fromNumber`\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.from('0x48656c6c6f20576f726c6421')\n * // @log: '0x48656c6c6f20576f726c6421'\n *\n * Hex.from(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function from(value) {\n    if (value instanceof Uint8Array)\n        return fromBytes(value);\n    if (Array.isArray(value))\n        return fromBytes(new Uint8Array(value));\n    return value;\n}\n/**\n * Encodes a boolean into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromBoolean(true)\n * // @log: '0x1'\n *\n * Hex.fromBoolean(false)\n * // @log: '0x0'\n *\n * Hex.fromBoolean(true, { size: 32 })\n * // @log: '0x0000000000000000000000000000000000000000000000000000000000000001'\n * ```\n *\n * @param value - The boolean value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromBoolean(value, options = {}) {\n    const hex = `0x${Number(value)}`;\n    if (typeof options.size === 'number') {\n        internal.assertSize(hex, options.size);\n        return padLeft(hex, options.size);\n    }\n    return hex;\n}\n/**\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.fromBytes(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromBytes(value, options = {}) {\n    let string = '';\n    for (let i = 0; i < value.length; i++)\n        string += hexes[value[i]];\n    const hex = `0x${string}`;\n    if (typeof options.size === 'number') {\n        internal.assertSize(hex, options.size);\n        return padRight(hex, options.size);\n    }\n    return hex;\n}\n/**\n * Encodes a number or bigint into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromNumber(420)\n * // @log: '0x1a4'\n *\n * Hex.fromNumber(420, { size: 32 })\n * // @log: '0x00000000000000000000000000000000000000000000000000000000000001a4'\n * ```\n *\n * @param value - The number or bigint value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromNumber(value, options = {}) {\n    const { signed, size } = options;\n    const value_ = BigInt(value);\n    let maxValue;\n    if (size) {\n        if (signed)\n            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n        else\n            maxValue = 2n ** (BigInt(size) * 8n) - 1n;\n    }\n    else if (typeof value === 'number') {\n        maxValue = BigInt(Number.MAX_SAFE_INTEGER);\n    }\n    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;\n    if ((maxValue && value_ > maxValue) || value_ < minValue) {\n        const suffix = typeof value === 'bigint' ? 'n' : '';\n        throw new IntegerOutOfRangeError({\n            max: maxValue ? `${maxValue}${suffix}` : undefined,\n            min: `${minValue}${suffix}`,\n            signed,\n            size,\n            value: `${value}${suffix}`,\n        });\n    }\n    const stringValue = (signed && value_ < 0 ? (1n << BigInt(size * 8)) + BigInt(value_) : value_).toString(16);\n    const hex = `0x${stringValue}`;\n    if (size)\n        return padLeft(hex, size);\n    return hex;\n}\n/**\n * Encodes a string into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n * Hex.fromString('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * Hex.fromString('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n * ```\n *\n * @param value - The string value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromString(value, options = {}) {\n    return fromBytes(encoder.encode(value), options);\n}\n/**\n * Checks if two {@link ox#Hex.Hex} values are equal.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.isEqual('0xdeadbeef', '0xdeadbeef')\n * // @log: true\n *\n * Hex.isEqual('0xda', '0xba')\n * // @log: false\n * ```\n *\n * @param hexA - The first {@link ox#Hex.Hex} value.\n * @param hexB - The second {@link ox#Hex.Hex} value.\n * @returns `true` if the two {@link ox#Hex.Hex} values are equal, `false` otherwise.\n */\nexport function isEqual(hexA, hexB) {\n    return equalBytes(Bytes.fromHex(hexA), Bytes.fromHex(hexB));\n}\n/**\n * Pads a {@link ox#Hex.Hex} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.padLeft('0x1234', 4)\n * // @log: '0x00001234'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to pad.\n * @param size - The size (in bytes) of the output hex value.\n * @returns The padded {@link ox#Hex.Hex} value.\n */\nexport function padLeft(value, size) {\n    return internal.pad(value, { dir: 'left', size });\n}\n/**\n * Pads a {@link ox#Hex.Hex} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts\n * import { Hex } from 'ox'\n *\n * Hex.padRight('0x1234', 4)\n * // @log: '0x12340000'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to pad.\n * @param size - The size (in bytes) of the output hex value.\n * @returns The padded {@link ox#Hex.Hex} value.\n */\nexport function padRight(value, size) {\n    return internal.pad(value, { dir: 'right', size });\n}\n/**\n * Generates a random {@link ox#Hex.Hex} value of the specified length.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * const hex = Hex.random(32)\n * // @log: '0x...'\n * ```\n *\n * @returns Random {@link ox#Hex.Hex} value.\n */\nexport function random(length) {\n    return fromBytes(Bytes.random(length));\n}\n/**\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.slice('0x0123456789', 1, 4)\n * // @log: '0x234567'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to slice.\n * @param start - The start offset (in bytes).\n * @param end - The end offset (in bytes).\n * @param options - Options.\n * @returns The sliced {@link ox#Hex.Hex} value.\n */\nexport function slice(value, start, end, options = {}) {\n    const { strict } = options;\n    internal.assertStartOffset(value, start);\n    const value_ = `0x${value\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value.length) * 2)}`;\n    if (strict)\n        internal.assertEndOffset(value_, start, end);\n    return value_;\n}\n/**\n * Retrieves the size of a {@link ox#Hex.Hex} value (in bytes).\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.size('0xdeadbeef')\n * // @log: 4\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to get the size of.\n * @returns The size of the {@link ox#Hex.Hex} value (in bytes).\n */\nexport function size(value) {\n    return Math.ceil((value.length - 2) / 2);\n}\n/**\n * Trims leading zeros from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.trimLeft('0x00000000deadbeef')\n * // @log: '0xdeadbeef'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to trim.\n * @returns The trimmed {@link ox#Hex.Hex} value.\n */\nexport function trimLeft(value) {\n    return internal.trim(value, { dir: 'left' });\n}\n/**\n * Trims trailing zeros from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.trimRight('0xdeadbeef00000000')\n * // @log: '0xdeadbeef'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to trim.\n * @returns The trimmed {@link ox#Hex.Hex} value.\n */\nexport function trimRight(value) {\n    return internal.trim(value, { dir: 'right' });\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a BigInt.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBigInt('0x1a4')\n * // @log: 420n\n *\n * Hex.toBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // @log: 420n\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded BigInt.\n */\nexport function toBigInt(hex, options = {}) {\n    const { signed } = options;\n    if (options.size)\n        internal.assertSize(hex, options.size);\n    const value = BigInt(hex);\n    if (!signed)\n        return value;\n    const size = (hex.length - 2) / 2;\n    const max_unsigned = (1n << (BigInt(size) * 8n)) - 1n;\n    const max_signed = max_unsigned >> 1n;\n    if (value <= max_signed)\n        return value;\n    return value - max_unsigned - 1n;\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBoolean('0x01')\n * // @log: true\n *\n * Hex.toBoolean('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // @log: true\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded boolean.\n */\nexport function toBoolean(hex, options = {}) {\n    if (options.size)\n        internal.assertSize(hex, options.size);\n    const hex_ = trimLeft(hex);\n    if (hex_ === '0x')\n        return false;\n    if (hex_ === '0x1')\n        return true;\n    throw new InvalidHexBooleanError(hex);\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * const data = Hex.toBytes('0x48656c6c6f20776f726c6421')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded {@link ox#Bytes.Bytes}.\n */\nexport function toBytes(hex, options = {}) {\n    return Bytes.fromHex(hex, options);\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a number.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toNumber('0x1a4')\n * // @log: 420\n *\n * Hex.toNumber('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // @log: 420\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded number.\n */\nexport function toNumber(hex, options = {}) {\n    const { signed, size } = options;\n    if (!signed && !size)\n        return Number(hex);\n    return Number(toBigInt(hex, options));\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a string.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toString('0x48656c6c6f20576f726c6421')\n * // @log: 'Hello world!'\n *\n * Hex.toString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // @log: 'Hello world'\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded string.\n */\nexport function toString(hex, options = {}) {\n    const { size } = options;\n    let bytes = Bytes.fromHex(hex);\n    if (size) {\n        internal_bytes.assertSize(bytes, size);\n        bytes = Bytes.trimRight(bytes);\n    }\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Checks if the given value is {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.validate('0xdeadbeef')\n * // @log: true\n *\n * Hex.validate(Bytes.from([1, 2, 3]))\n * // @log: false\n * ```\n *\n * @param value - The value to check.\n * @param options - Options.\n * @returns `true` if the value is a {@link ox#Hex.Hex}, `false` otherwise.\n */\nexport function validate(value, options = {}) {\n    const { strict = false } = options;\n    try {\n        assert(value, { strict });\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Thrown when the provided integer is out of range, and cannot be represented as a hex value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromNumber(420182738912731283712937129)\n * // @error: Hex.IntegerOutOfRangeError: Number \\`4.2018273891273126e+26\\` is not in safe unsigned integer range (`0` to `9007199254740991`)\n * ```\n */\nexport class IntegerOutOfRangeError extends Errors.BaseError {\n    constructor({ max, min, signed, size, value, }) {\n        super(`Number \\`${value}\\` is not in safe${size ? ` ${size * 8}-bit` : ''}${signed ? ' signed' : ' unsigned'} integer range ${max ? `(\\`${min}\\` to \\`${max}\\`)` : `(above \\`${min}\\`)`}`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.IntegerOutOfRangeError'\n        });\n    }\n}\n/**\n * Thrown when the provided hex value cannot be represented as a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBoolean('0xa')\n * // @error: Hex.InvalidHexBooleanError: Hex value `\"0xa\"` is not a valid boolean.\n * // @error: The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).\n * ```\n */\nexport class InvalidHexBooleanError extends Errors.BaseError {\n    constructor(hex) {\n        super(`Hex value \\`\"${hex}\"\\` is not a valid boolean.`, {\n            metaMessages: [\n                'The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.InvalidHexBooleanError'\n        });\n    }\n}\n/**\n * Thrown when the provided value is not a valid hex type.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert(1)\n * // @error: Hex.InvalidHexTypeError: Value `1` of type `number` is an invalid hex type.\n * ```\n */\nexport class InvalidHexTypeError extends Errors.BaseError {\n    constructor(value) {\n        super(`Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid hex type.`, {\n            metaMessages: ['Hex types must be represented as `\"0x${string}\"`.'],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.InvalidHexTypeError'\n        });\n    }\n}\n/**\n * Thrown when the provided hex value is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert('0x0123456789abcdefg')\n * // @error: Hex.InvalidHexValueError: Value `0x0123456789abcdefg` is an invalid hex value.\n * // @error: Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).\n * ```\n */\nexport class InvalidHexValueError extends Errors.BaseError {\n    constructor(value) {\n        super(`Value \\`${value}\\` is an invalid hex value.`, {\n            metaMessages: [\n                'Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.InvalidHexValueError'\n        });\n    }\n}\n/**\n * Thrown when the provided hex value is an odd length.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.fromHex('0xabcde')\n * // @error: Hex.InvalidLengthError: Hex value `\"0xabcde\"` is an odd length (5 nibbles).\n * ```\n */\nexport class InvalidLengthError extends Errors.BaseError {\n    constructor(value) {\n        super(`Hex value \\`\"${value}\"\\` is an odd length (${value.length - 2} nibbles).`, {\n            metaMessages: ['It must be an even length.'],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.InvalidLengthError'\n        });\n    }\n}\n/**\n * Thrown when the size of the value exceeds the expected max size.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromString('Hello World!', { size: 8 })\n * // @error: Hex.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\n * ```\n */\nexport class SizeOverflowError extends Errors.BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.SizeOverflowError'\n        });\n    }\n}\n/**\n * Thrown when the slice offset exceeds the bounds of the value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.slice('0x0123456789', 6)\n * // @error: Hex.SliceOffsetOutOfBoundsError: Slice starting at offset `6` is out-of-bounds (size: `5`).\n * ```\n */\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.SliceOffsetOutOfBoundsError'\n        });\n    }\n}\n/**\n * Thrown when the size of the value exceeds the pad size.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.padLeft('0x1a4e12a45a21323123aaa87a897a897a898a6567a578a867a98778a667a85a875a87a6a787a65a675a6a9', 32)\n * // @error: Hex.SizeExceedsPaddingSizeError: Hex size (`43`) exceeds padding size (`32`).\n * ```\n */\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.SizeExceedsPaddingSizeError'\n        });\n    }\n}\n//# sourceMappingURL=Hex.js.map","const bigIntSuffix = /*#__PURE__*/ '#__bigint';\n/**\n * Parses a JSON string, with support for `bigint`.\n *\n * @example\n * ```ts twoslash\n * import { Json } from 'ox'\n *\n * const json = Json.parse('{\"foo\":\"bar\",\"baz\":\"69420694206942069420694206942069420694206942069420#__bigint\"}')\n * // @log: {\n * // @log:   foo: 'bar',\n * // @log:   baz: 69420694206942069420694206942069420694206942069420n\n * // @log: }\n * ```\n *\n * @param string - The value to parse.\n * @param reviver - A function that transforms the results.\n * @returns The parsed value.\n */\nexport function parse(string, reviver) {\n    return JSON.parse(string, (key, value_) => {\n        const value = value_;\n        if (typeof value === 'string' && value.endsWith(bigIntSuffix))\n            return BigInt(value.slice(0, -bigIntSuffix.length));\n        return typeof reviver === 'function' ? reviver(key, value) : value;\n    });\n}\n/**\n * Stringifies a value to its JSON representation, with support for `bigint`.\n *\n * @example\n * ```ts twoslash\n * import { Json } from 'ox'\n *\n * const json = Json.stringify({\n *   foo: 'bar',\n *   baz: 69420694206942069420694206942069420694206942069420n,\n * })\n * // @log: '{\"foo\":\"bar\",\"baz\":\"69420694206942069420694206942069420694206942069420#__bigint\"}'\n * ```\n *\n * @param value - The value to stringify.\n * @param replacer - A function that transforms the results. It is passed the key and value of the property, and must return the value to be used in the JSON string. If this function returns `undefined`, the property is not included in the resulting JSON string.\n * @param space - A string or number that determines the indentation of the JSON string. If it is a number, it indicates the number of spaces to use as indentation; if it is a string (e.g. `'\\t'`), it uses the string as the indentation character.\n * @returns The JSON string.\n */\nexport function stringify(value, replacer, space) {\n    return JSON.stringify(value, (key, value) => {\n        if (typeof replacer === 'function')\n            return replacer(key, value);\n        if (typeof value === 'bigint')\n            return value.toString() + bigIntSuffix;\n        return value;\n    }, space);\n}\n//# sourceMappingURL=Json.js.map","import * as Bytes from '../Bytes.js';\n/** @internal */\nexport function assertSize(bytes, size_) {\n    if (Bytes.size(bytes) > size_)\n        throw new Bytes.SizeOverflowError({\n            givenSize: Bytes.size(bytes),\n            maxSize: size_,\n        });\n}\n/** @internal */\nexport function assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > Bytes.size(value) - 1)\n        throw new Bytes.SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: Bytes.size(value),\n        });\n}\n/** @internal */\nexport function assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        Bytes.size(value) !== end - start) {\n        throw new Bytes.SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: Bytes.size(value),\n        });\n    }\n}\n/** @internal */\nexport const charCodeMap = {\n    zero: 48,\n    nine: 57,\n    A: 65,\n    F: 70,\n    a: 97,\n    f: 102,\n};\n/** @internal */\nexport function charCodeToBase16(char) {\n    if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n        return char - charCodeMap.zero;\n    if (char >= charCodeMap.A && char <= charCodeMap.F)\n        return char - (charCodeMap.A - 10);\n    if (char >= charCodeMap.a && char <= charCodeMap.f)\n        return char - (charCodeMap.a - 10);\n    return undefined;\n}\n/** @internal */\nexport function pad(bytes, options = {}) {\n    const { dir, size = 32 } = options;\n    if (size === 0)\n        return bytes;\n    if (bytes.length > size)\n        throw new Bytes.SizeExceedsPaddingSizeError({\n            size: bytes.length,\n            targetSize: size,\n            type: 'Bytes',\n        });\n    const paddedBytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n        const padEnd = dir === 'right';\n        paddedBytes[padEnd ? i : size - i - 1] =\n            bytes[padEnd ? i : bytes.length - i - 1];\n    }\n    return paddedBytes;\n}\n/** @internal */\nexport function trim(value, options = {}) {\n    const { dir = 'left' } = options;\n    let data = value;\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    return data;\n}\n//# sourceMappingURL=bytes.js.map","import { equalBytes } from '@noble/curves/abstract/utils';\nimport * as Errors from './Errors.js';\nimport * as Hex from './Hex.js';\nimport * as Json from './Json.js';\nimport * as internal from './internal/bytes.js';\nimport * as internal_hex from './internal/hex.js';\nconst decoder = /*#__PURE__*/ new TextDecoder();\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Asserts if the given value is {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.assert('abc')\n * // @error: Bytes.InvalidBytesTypeError:\n * // @error: Value `\"abc\"` of type `string` is an invalid Bytes value.\n * // @error: Bytes values must be of type `Uint8Array`.\n * ```\n *\n * @param value - Value to assert.\n */\nexport function assert(value) {\n    if (value instanceof Uint8Array)\n        return;\n    if (!value)\n        throw new InvalidBytesTypeError(value);\n    if (typeof value !== 'object')\n        throw new InvalidBytesTypeError(value);\n    if (!('BYTES_PER_ELEMENT' in value))\n        throw new InvalidBytesTypeError(value);\n    if (value.BYTES_PER_ELEMENT !== 1 || value.constructor.name !== 'Uint8Array')\n        throw new InvalidBytesTypeError(value);\n}\n/**\n * Concatenates two or more {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const bytes = Bytes.concat(\n *   Bytes.from([1]),\n *   Bytes.from([69]),\n *   Bytes.from([420, 69]),\n * )\n * // @log: Uint8Array [ 1, 69, 420, 69 ]\n * ```\n *\n * @param values - Values to concatenate.\n * @returns Concatenated {@link ox#Bytes.Bytes}.\n */\nexport function concat(...values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    for (let i = 0, index = 0; i < values.length; i++) {\n        const arr = values[i];\n        result.set(arr, index);\n        index += arr.length;\n    }\n    return result;\n}\n/**\n * Instantiates a {@link ox#Bytes.Bytes} value from a `Uint8Array`, a hex string, or an array of unsigned 8-bit integers.\n *\n * :::tip\n *\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\n *\n * - `Bytes.fromBoolean`\n *\n * - `Bytes.fromString`\n *\n * - `Bytes.fromNumber`\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.from([255, 124, 5, 4])\n * // @log: Uint8Array([255, 124, 5, 4])\n *\n * const data = Bytes.from('0xdeadbeef')\n * // @log: Uint8Array([222, 173, 190, 239])\n * ```\n *\n * @param value - Value to convert.\n * @returns A {@link ox#Bytes.Bytes} instance.\n */\nexport function from(value) {\n    if (value instanceof Uint8Array)\n        return value;\n    if (typeof value === 'string')\n        return fromHex(value);\n    return fromArray(value);\n}\n/**\n * Converts an array of unsigned 8-bit integers into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromArray([255, 124, 5, 4])\n * // @log: Uint8Array([255, 124, 5, 4])\n * ```\n *\n * @param value - Value to convert.\n * @returns A {@link ox#Bytes.Bytes} instance.\n */\nexport function fromArray(value) {\n    return value instanceof Uint8Array ? value : new Uint8Array(value);\n}\n/**\n * Encodes a boolean value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromBoolean(true)\n * // @log: Uint8Array([1])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromBoolean(true, { size: 32 })\n * // @log: Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n * ```\n *\n * @param value - Boolean value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromBoolean(value, options = {}) {\n    const { size } = options;\n    const bytes = new Uint8Array(1);\n    bytes[0] = Number(value);\n    if (typeof size === 'number') {\n        internal.assertSize(bytes, size);\n        return padLeft(bytes, size);\n    }\n    return bytes;\n}\n/**\n * Encodes a {@link ox#Hex.Hex} value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421', { size: 32 })\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n * ```\n *\n * @param value - {@link ox#Hex.Hex} value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromHex(value, options = {}) {\n    const { size } = options;\n    let hex = value;\n    if (size) {\n        internal_hex.assertSize(value, size);\n        hex = Hex.padRight(value, size);\n    }\n    let hexString = hex.slice(2);\n    if (hexString.length % 2)\n        hexString = `0${hexString}`;\n    const length = hexString.length / 2;\n    const bytes = new Uint8Array(length);\n    for (let index = 0, j = 0; index < length; index++) {\n        const nibbleLeft = internal.charCodeToBase16(hexString.charCodeAt(j++));\n        const nibbleRight = internal.charCodeToBase16(hexString.charCodeAt(j++));\n        if (nibbleLeft === undefined || nibbleRight === undefined) {\n            throw new Errors.BaseError(`Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`);\n        }\n        bytes[index] = nibbleLeft * 16 + nibbleRight;\n    }\n    return bytes;\n}\n/**\n * Encodes a number value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromNumber(420)\n * // @log: Uint8Array([1, 164])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromNumber(420, { size: 4 })\n * // @log: Uint8Array([0, 0, 1, 164])\n * ```\n *\n * @param value - Number value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromNumber(value, options) {\n    const hex = Hex.fromNumber(value, options);\n    return fromHex(hex);\n}\n/**\n * Encodes a string into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromString('Hello world!')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromString('Hello world!', { size: 32 })\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n * ```\n *\n * @param value - String to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromString(value, options = {}) {\n    const { size } = options;\n    const bytes = encoder.encode(value);\n    if (typeof size === 'number') {\n        internal.assertSize(bytes, size);\n        return padRight(bytes, size);\n    }\n    return bytes;\n}\n/**\n * Checks if two {@link ox#Bytes.Bytes} values are equal.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([1]))\n * // @log: true\n *\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([2]))\n * // @log: false\n * ```\n *\n * @param bytesA - First {@link ox#Bytes.Bytes} value.\n * @param bytesB - Second {@link ox#Bytes.Bytes} value.\n * @returns `true` if the two values are equal, otherwise `false`.\n */\nexport function isEqual(bytesA, bytesB) {\n    return equalBytes(bytesA, bytesB);\n}\n/**\n * Pads a {@link ox#Bytes.Bytes} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padLeft(Bytes.from([1]), 4)\n * // @log: Uint8Array([0, 0, 0, 1])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value to pad.\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\n * @returns Padded {@link ox#Bytes.Bytes} value.\n */\nexport function padLeft(value, size) {\n    return internal.pad(value, { dir: 'left', size });\n}\n/**\n * Pads a {@link ox#Bytes.Bytes} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padRight(Bytes.from([1]), 4)\n * // @log: Uint8Array([1, 0, 0, 0])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value to pad.\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\n * @returns Padded {@link ox#Bytes.Bytes} value.\n */\nexport function padRight(value, size) {\n    return internal.pad(value, { dir: 'right', size });\n}\n/**\n * Generates random {@link ox#Bytes.Bytes} of the specified length.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const bytes = Bytes.random(32)\n * // @log: Uint8Array([... x32])\n * ```\n *\n * @param length - Length of the random {@link ox#Bytes.Bytes} to generate.\n * @returns Random {@link ox#Bytes.Bytes} of the specified length.\n */\nexport function random(length) {\n    return crypto.getRandomValues(new Uint8Array(length));\n}\n/**\n * Retrieves the size of a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.size(Bytes.from([1, 2, 3, 4]))\n * // @log: 4\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Size of the {@link ox#Bytes.Bytes} value.\n */\nexport function size(value) {\n    return value.length;\n}\n/**\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.slice(\n *   Bytes.from([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n *   1,\n *   4,\n * )\n * // @log: Uint8Array([2, 3, 4])\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value.\n * @param start - Start offset.\n * @param end - End offset.\n * @param options - Slice options.\n * @returns Sliced {@link ox#Bytes.Bytes} value.\n */\nexport function slice(value, start, end, options = {}) {\n    const { strict } = options;\n    internal.assertStartOffset(value, start);\n    const value_ = value.slice(start, end);\n    if (strict)\n        internal.assertEndOffset(value_, start, end);\n    return value_;\n}\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a bigint.\n *\n * @example\n * ```ts\n * import { Bytes } from 'ox'\n *\n * Bytes.toBigInt(Bytes.from([1, 164]))\n * // @log: 420n\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Decoding options.\n * @returns Decoded bigint.\n */\nexport function toBigInt(bytes, options = {}) {\n    const { size } = options;\n    if (typeof size !== 'undefined')\n        internal.assertSize(bytes, size);\n    const hex = Hex.fromBytes(bytes, options);\n    return Hex.toBigInt(hex, options);\n}\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a boolean.\n *\n * @example\n * ```ts\n * import { Bytes } from 'ox'\n *\n * Bytes.toBoolean(Bytes.from([1]))\n * // @log: true\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Decoding options.\n * @returns Decoded boolean.\n */\nexport function toBoolean(bytes, options = {}) {\n    const { size } = options;\n    let bytes_ = bytes;\n    if (typeof size !== 'undefined') {\n        internal.assertSize(bytes_, size);\n        bytes_ = trimLeft(bytes_);\n    }\n    if (bytes_.length > 1 || bytes_[0] > 1)\n        throw new InvalidBytesBooleanError(bytes_);\n    return Boolean(bytes_[0]);\n}\n/**\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toHex(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Options.\n * @returns Decoded {@link ox#Hex.Hex} value.\n */\nexport function toHex(value, options = {}) {\n    return Hex.fromBytes(value, options);\n}\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a number.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toNumber(Bytes.from([1, 164]))\n * // @log: 420\n * ```\n */\nexport function toNumber(bytes, options = {}) {\n    const { size } = options;\n    if (typeof size !== 'undefined')\n        internal.assertSize(bytes, size);\n    const hex = Hex.fromBytes(bytes, options);\n    return Hex.toNumber(hex, options);\n}\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a string.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.toString(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: 'Hello world'\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Options.\n * @returns Decoded string.\n */\nexport function toString(bytes, options = {}) {\n    const { size } = options;\n    let bytes_ = bytes;\n    if (typeof size !== 'undefined') {\n        internal.assertSize(bytes_, size);\n        bytes_ = trimRight(bytes_);\n    }\n    return decoder.decode(bytes_);\n}\n/**\n * Trims leading zeros from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.trimLeft(Bytes.from([0, 0, 0, 0, 1, 2, 3]))\n * // @log: Uint8Array([1, 2, 3])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\n */\nexport function trimLeft(value) {\n    return internal.trim(value, { dir: 'left' });\n}\n/**\n * Trims trailing zeros from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.trimRight(Bytes.from([1, 2, 3, 0, 0, 0, 0]))\n * // @log: Uint8Array([1, 2, 3])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\n */\nexport function trimRight(value) {\n    return internal.trim(value, { dir: 'right' });\n}\n/**\n * Checks if the given value is {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.validate('0x')\n * // @log: false\n *\n * Bytes.validate(Bytes.from([1, 2, 3]))\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns `true` if the value is {@link ox#Bytes.Bytes}, otherwise `false`.\n */\nexport function validate(value) {\n    try {\n        assert(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Thrown when the bytes value cannot be represented as a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toBoolean(Bytes.from([5]))\n * // @error: Bytes.InvalidBytesBooleanError: Bytes value `[5]` is not a valid boolean.\n * // @error: The bytes array must contain a single byte of either a `0` or `1` value.\n * ```\n */\nexport class InvalidBytesBooleanError extends Errors.BaseError {\n    constructor(bytes) {\n        super(`Bytes value \\`${bytes}\\` is not a valid boolean.`, {\n            metaMessages: [\n                'The bytes array must contain a single byte of either a `0` or `1` value.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.InvalidBytesBooleanError'\n        });\n    }\n}\n/**\n * Thrown when a value cannot be converted to bytes.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Bytes } from 'ox'\n *\n * Bytes.from('foo')\n * // @error: Bytes.InvalidBytesTypeError: Value `foo` of type `string` is an invalid Bytes value.\n * ```\n */\nexport class InvalidBytesTypeError extends Errors.BaseError {\n    constructor(value) {\n        super(`Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid Bytes value.`, {\n            metaMessages: ['Bytes values must be of type `Bytes`.'],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.InvalidBytesTypeError'\n        });\n    }\n}\n/**\n * Thrown when a size exceeds the maximum allowed size.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.fromString('Hello World!', { size: 8 })\n * // @error: Bytes.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\n * ```\n */\nexport class SizeOverflowError extends Errors.BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.SizeOverflowError'\n        });\n    }\n}\n/**\n * Thrown when a slice offset is out-of-bounds.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.slice(Bytes.from([1, 2, 3]), 4)\n * // @error: Bytes.SliceOffsetOutOfBoundsError: Slice starting at offset `4` is out-of-bounds (size: `3`).\n * ```\n */\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.SliceOffsetOutOfBoundsError'\n        });\n    }\n}\n/**\n * Thrown when a the padding size exceeds the maximum allowed size.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padLeft(Bytes.fromString('Hello World!'), 8)\n * // @error: [Bytes.SizeExceedsPaddingSizeError: Bytes size (`12`) exceeds padding size (`8`).\n * ```\n */\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.SizeExceedsPaddingSizeError'\n        });\n    }\n}\n//# sourceMappingURL=Bytes.js.map","import * as ox__Bytes from \"ox/Bytes\";\nimport { isHex } from \"./helpers/is-hex.js\";\n/**\n * Converts a value to an array of bytes.\n * @param value - The value to convert.\n * @param opts - Optional parameters for the conversion.\n * @returns The array of bytes representing the value.\n * @example\n * ```ts\n * import { toBytes } from \"thirdweb/utils\";\n * const bytes = toBytes(\"0x1a4\");\n * console.log(bytes); // Uint8Array(2) [ 1, 164 ]\n * ```\n * @utils\n */\nexport function toBytes(value, opts = {}) {\n    switch (typeof value) {\n        case \"number\":\n        case \"bigint\":\n            return numberToBytes(value, opts);\n        case \"boolean\":\n            return boolToBytes(value, opts);\n        default:\n            if (isHex(value)) {\n                return hexToBytes(value, opts);\n            }\n            return stringToBytes(value, opts);\n    }\n}\n/**\n * Converts a boolean value to a Uint8Array of bytes.\n * @param value - The boolean value to convert.\n * @param opts - Optional parameters for the conversion.\n * @returns The Uint8Array of bytes representing the boolean value.\n * @example\n * ```ts\n * import { boolToBytes } from \"thirdweb/utils\";\n * const bytes = boolToBytes(true);\n * console.log(bytes); // Uint8Array(1) [ 1 ]\n * ```\n * @utils\n */\nexport function boolToBytes(value, opts = {}) {\n    return ox__Bytes.fromBoolean(value, opts);\n}\n/**\n * Converts a hexadecimal string to a Uint8Array of bytes.\n * @param hex_ The hexadecimal string to convert.\n * @param opts Options for converting the hexadecimal string.\n * @returns The Uint8Array of bytes.\n * @throws Error if the byte sequence is invalid.\n * @example\n * ```ts\n * import { hexToBytes } from \"thirdweb/utils\";\n * const bytes = hexToBytes(\"0x1a4\");\n * console.log(bytes); // Uint8Array(2) [ 1, 164 ]\n * ```\n * @utils\n */\nexport function hexToBytes(hex_, opts = {}) {\n    return ox__Bytes.fromHex(hex_, opts);\n}\n/**\n * Converts a number to bytes.\n * @param value - The number to convert.\n * @param opts - Options for converting the number to hex.\n * @returns The bytes representation of the number.\n * @example\n * ```ts\n * import { numberToBytes } from \"thirdweb/utils\";\n * const bytes = numberToBytes(420);\n * console.log(bytes); // Uint8Array(2) [ 1, 164 ]\n * ```\n * @utils\n */\nexport function numberToBytes(value, opts) {\n    return ox__Bytes.fromNumber(value, opts);\n}\n/**\n * Converts a string to an array of bytes.\n * @param value - The string to convert.\n * @param opts - Optional parameters for the conversion.\n * @returns The array of bytes representing the string.\n * @example\n * ```ts\n * import { stringToBytes } from \"thirdweb/utils\";\n * const bytes = stringToBytes(\"Hello, world!\");\n * console.log(bytes); // Uint8Array(13) [ 72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33 ]\n * ```\n * @utils\n */\nexport function stringToBytes(value, opts = {}) {\n    return ox__Bytes.fromString(value, opts);\n}\n//# sourceMappingURL=to-bytes.js.map","function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n// copied from utils\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nexport { anumber, anumber as number, abytes, abytes as bytes, ahash, aexists, aoutput };\nconst assert = {\n    number: anumber,\n    bytes: abytes,\n    hash: ahash,\n    exists: aexists,\n    output: aoutput,\n};\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { aexists, aoutput } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n/**\n * Polyfill for Safari 14\n */\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/**\n * Choice: a ? b : c\n */\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n/**\n * Majority function, true if any two inputs is true\n */\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per late 2024.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/**\n * SHA2-224 hash function\n */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import * as ox__Hex from \"ox/Hex\";\nexport { isHex } from \"./helpers/is-hex.js\";\n/**\n * Pads a hexadecimal string with zeros to a specified size.\n * @param hex_ The hexadecimal string to pad.\n * @param options The padding options.\n * @returns The padded hexadecimal string.\n * @throws Error if the resulting padded string exceeds the specified size.\n * @example\n * ```ts\n * import { padHex } from \"thirdweb/utils\";\n * const paddedHex = padHex(\"0x1a4\", { size: 32 });\n * console.log(paddedHex); // \"0x000000000000000000000000000001a4\"\n * ```\n * @utils\n */\nexport function padHex(hex_, options = {}) {\n    const { dir, size = 32 } = options;\n    if (size === null) {\n        return hex_;\n    }\n    if (dir === \"right\") {\n        return ox__Hex.padRight(hex_, size);\n    }\n    return ox__Hex.padLeft(hex_, size);\n}\n/**\n * Converts a hexadecimal string to a UTF-8 string.\n * @param hex The hexadecimal string to convert.\n * @param opts The options for the conversion.\n * @returns The UTF-8 string representation of the hexadecimal string.\n * @example\n * ```ts\n * import { hexToString } from \"thirdweb/utils\";\n * const string = hexToString(\"0x48656c6c6f2c20776f726c6421\");\n * console.log(string); // \"Hello, world!\"\n * ```\n * @utils\n */\nexport function hexToString(hex, opts = {}) {\n    return ox__Hex.toString(hex, opts);\n}\n/**\n * Converts a hexadecimal string to a BigInt.\n * @param hex - The hexadecimal string to convert.\n * @param opts - Optional parameters for the conversion.\n * @returns The BigInt representation of the hexadecimal string.\n * @example\n * ```ts\n * import { hexToBigInt } from \"thirdweb/utils\";\n * const bigInt = hexToBigInt(\"0x1a4\");\n * console.log(bigInt); // 420n\n * ```\n * @utils\n */\nexport function hexToBigInt(hex, opts = {}) {\n    return ox__Hex.toBigInt(hex, opts);\n}\n/**\n * Converts a hexadecimal string to a number.\n * @param hex The hexadecimal string to convert.\n * @param opts Optional options for the conversion.\n * @returns The converted number.\n * @example\n * ```ts\n * import { hexToNumber } from \"thirdweb/utils\";\n * const number = hexToNumber(\"0x1a4\");\n * console.log(number); // 420\n * ```\n * @utils\n */\nexport function hexToNumber(hex, opts = {}) {\n    return ox__Hex.toNumber(hex, opts);\n}\n/**\n * Converts a hexadecimal string to a boolean value.\n * @param hex The hexadecimal string to convert.\n * @param opts Optional options for the conversion.\n * @returns The boolean value corresponding to the hexadecimal string.\n * @throws Error if the hexadecimal string is invalid.\n * @example\n * ```ts\n * import { hexToBool } from \"thirdweb/utils\";\n * const bool = hexToBool(\"0x01\");\n * console.log(bool); // true\n * ```\n * @utils\n */\nexport function hexToBool(hex, opts = {}) {\n    return ox__Hex.toBoolean(hex, opts);\n}\n/**\n * Converts a hexadecimal string to a Uint8Array.\n * @param hex The hexadecimal string to convert.\n * @param opts Options for the conversion.\n * @returns The Uint8Array representation of the hexadecimal string.\n * @example\n * ```ts\n * import { hexToUint8Array } from \"thirdweb/utils\";\n * const bytes = hexToUint8Array(\"0x48656c6c6f2c20776f726c6421\");\n * console.log(bytes); // Uint8Array([72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33])\n * ```\n * @utils\n */\nexport function hexToUint8Array(hex, opts = {}) {\n    return ox__Hex.toBytes(hex, opts);\n}\n/**\n * Converts a hexadecimal string to the specified type.\n * @param hex - The hexadecimal string to convert.\n * @param toOrOpts - The target type or conversion options.\n * @returns The converted value of the specified type.\n * @example\n * ```ts\n * import { fromHex } from \"thirdweb/utils\";\n * const string = fromHex(\"0x48656c6c6f2c20776f726c6421\", \"string\");\n * console.log(string); // \"Hello, world!\"\n * ```\n * @utils\n */\nexport function fromHex(hex, toOrOpts) {\n    const opts = typeof toOrOpts === \"string\" ? { to: toOrOpts } : toOrOpts;\n    switch (opts.to) {\n        case \"number\":\n            return hexToNumber(hex, opts);\n        case \"bigint\":\n            return hexToBigInt(hex, opts);\n        case \"string\":\n            return hexToString(hex, opts);\n        case \"boolean\":\n            return hexToBool(hex, opts);\n        default:\n            return hexToUint8Array(hex, opts);\n    }\n}\n/**\n * Converts a boolean value to a hexadecimal string representation.\n * @param value - The boolean value to convert.\n * @param opts - Optional options for the conversion.\n * @returns The hexadecimal string representation of the boolean value.\n * @example\n * ```ts\n * import { boolToHex } from \"thirdweb/utils\";\n * const hex = boolToHex(true);\n * console.log(hex); // \"0x01\"\n * ```\n * @utils\n */\nexport function boolToHex(value, opts = {}) {\n    return ox__Hex.fromBoolean(value, opts);\n}\n/**\n * Converts an array of bytes to a hexadecimal string.\n * @param value - The array of bytes to convert.\n * @param opts - Optional parameters for the conversion.\n * @returns The hexadecimal string representation of the bytes.\n * @example\n * ```ts\n * import { uint8arrayToHex } from \"thirdweb/utils\";\n * const hex = uint8arrayToHex(new Uint8Array([72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100]));\n * console.log(hex); // \"0x48656c6c6f2c20776f726c64\"\n * ```\n * @utils\n */\nexport function uint8ArrayToHex(value, opts = {}) {\n    return ox__Hex.fromBytes(value, opts);\n}\n/**\n * Converts a number or bigint to a hexadecimal string.\n * @param value_ - The number or bigint value to convert.\n * @param opts - Optional configuration options.\n * @returns The hexadecimal representation of the input value.\n * @throws An error if the input value is not within the safe integer range.\n * @example\n * ```ts\n * import { numberToHex } from \"thirdweb/utils\";\n * const hex = numberToHex(420);\n * console.log(hex); // \"0x1a4\"\n * ```\n * @utils\n */\nexport function numberToHex(value_, opts = {}) {\n    return ox__Hex.fromNumber(value_, opts);\n}\n/**\n * Converts a string to its hexadecimal representation.\n * @param value_ The string to convert to hexadecimal.\n * @param opts Options for the conversion.\n * @returns The hexadecimal representation of the input string.\n * @example\n * ```ts\n * import { stringToHex } from \"thirdweb/utils\";\n * const hex = stringToHex(\"Hello, world!\");\n * console.log(hex); // \"0x48656c6c6f2c20776f726c6421\"\n * ```\n * @utils\n */\nexport function stringToHex(value_, opts = {}) {\n    return ox__Hex.fromString(value_, opts);\n}\n/**\n * Converts a value to its hexadecimal representation.\n * @param value - The value to convert to hexadecimal.\n * @param opts - Optional parameters for the conversion.\n * @returns The hexadecimal representation of the value.\n * @example\n * ```ts\n * import { toHex } from \"thirdweb/utils\";\n * const hex = toHex(420);\n * console.log(hex); // \"0x1a4\"\n * ```\n * @utils\n */\nexport function toHex(value, opts = {}) {\n    switch (typeof value) {\n        case \"number\":\n        case \"bigint\":\n            return numberToHex(value, opts);\n        case \"string\":\n            return stringToHex(value, opts);\n        case \"boolean\":\n            return boolToHex(value, opts);\n        default:\n            return uint8ArrayToHex(value, opts);\n    }\n}\n//# sourceMappingURL=hex.js.map","import { sha256 as noble_sha256 } from \"@noble/hashes/sha256\";\nimport { hexToUint8Array, isHex, uint8ArrayToHex, } from \"../encoding/hex.js\";\n/**\n * Calculates the SHA256 hash of the given value.\n * @param value - The value to hash. It can be either a hexadecimal string or a Uint8Array.\n * @param to - (Optional) The desired output format of the hash. Defaults to 'hex'.\n * @returns The SHA256 hash of the value in the specified format.\n * @example\n * ```ts\n * import { sha256 } from \"thirdweb/utils\";\n * const hash = sha256(\"0x1234\");\n * ```\n * @utils\n */\nexport function sha256(value, to) {\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? hexToUint8Array(value) : value);\n    if (to === \"bytes\") {\n        return bytes;\n    }\n    return uint8ArrayToHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","import * as ox__Hex from \"ox/Hex\";\n/**\n * Checks if a value is a valid hexadecimal string.\n * @param value - The value to be checked.\n * @param options - Optional configuration for the validation.\n * @returns True if the value is a valid hexadecimal string, false otherwise.\n * @example\n * ```ts\n * import { isHex } from \"thirdweb/utils\";\n * const result = isHex(\"0x1a4\");\n * console.log(result); // true\n * ```\n * @utils\n */\nexport function isHex(value, options = {}) {\n    return ox__Hex.validate(value, options);\n}\n//# sourceMappingURL=is-hex.js.map","import { LruMap } from \"./caching/lru.js\";\nimport { stringToBytes } from \"./encoding/to-bytes.js\";\nimport { sha256 } from \"./hashing/sha256.js\";\nconst cache = new LruMap(4096);\n/**\n * @param secretKey - the secret key to compute the client id from\n * @returns the 32 char hex client id\n * @internal\n */\nexport function computeClientIdFromSecretKey(secretKey) {\n    if (cache.has(secretKey)) {\n        return cache.get(secretKey);\n    }\n    // we slice off the leading `0x` and then take the first 32 chars\n    const cId = sha256(stringToBytes(secretKey)).slice(2, 34);\n    cache.set(secretKey, cId);\n    return cId;\n}\n//# sourceMappingURL=client-id.js.map","\n\n\n\nimport { Buffer } from 'buffer';\nwindow.Buffer = Buffer;\nimport process from 'process';\nwindow.process = process;\n\nconst sigUtil = require('@metamask/eth-sig-util');\nimport { ethers } from \"ethers\";\nimport { upload, download } from \"thirdweb/storage\";\nimport { createThirdwebClient } from \"thirdweb\";\nconst CryptoJS = require(\"crypto-js\");\n\nconst CONTRACT_ADDRESS = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nconst CONTRACT_ABI = [{\"type\":\"event\",\"anonymous\":false,\"name\":\"DataAdded\",\"inputs\":[{\"type\":\"string\",\"name\":\"userId\",\"indexed\":false},{\"type\":\"string\",\"name\":\"ipfsHash\",\"indexed\":false},{\"type\":\"string\",\"name\":\"encryptedAESKey\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"timestamp\"}]},{\"type\":\"event\",\"anonymous\":false,\"name\":\"DataDeleted\",\"inputs\":[{\"type\":\"string\",\"name\":\"userId\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"index\",\"indexed\":false}]},{\"type\":\"event\",\"anonymous\":false,\"name\":\"DataUpdated\",\"inputs\":[{\"type\":\"string\",\"name\":\"userId\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"index\",\"indexed\":false},{\"type\":\"string\",\"name\":\"newIpfsHash\",\"indexed\":false},{\"type\":\"string\",\"name\":\"newEncryptedAESKey\",\"indexed\":false}]},{\"type\":\"function\",\"name\":\"clearUserFitnessData\",\"constant\":false,\"payable\":false,\"inputs\":[{\"type\":\"string\",\"name\":\"userId\"}],\"outputs\":[]},{\"type\":\"function\",\"name\":\"deleteUserFitnessData\",\"constant\":false,\"payable\":false,\"inputs\":[{\"type\":\"string\",\"name\":\"userId\"},{\"type\":\"uint256\",\"name\":\"index\"}],\"outputs\":[]},{\"type\":\"function\",\"name\":\"getUserFitnessData\",\"constant\":true,\"stateMutability\":\"view\",\"payable\":false,\"inputs\":[{\"type\":\"string\",\"name\":\"userId\"}],\"outputs\":[{\"type\":\"tuple[]\",\"name\":\"\",\"components\":[{\"type\":\"string\",\"name\":\"ipfsHash\"},{\"type\":\"string\",\"name\":\"encryptedAESKey\"},{\"type\":\"uint256\",\"name\":\"timestamp\"}]}]},{\"type\":\"function\",\"name\":\"hello\",\"constant\":true,\"stateMutability\":\"pure\",\"payable\":false,\"inputs\":[],\"outputs\":[{\"type\":\"string\",\"name\":\"\"}]},{\"type\":\"function\",\"name\":\"storeFitnessData\",\"constant\":false,\"payable\":false,\"inputs\":[{\"type\":\"string\",\"name\":\"userId\"},{\"type\":\"string\",\"name\":\"ipfsHash\"},{\"type\":\"string\",\"name\":\"encryptedAESKey\"}],\"outputs\":[]},{\"type\":\"function\",\"name\":\"updateUserFitnessData\",\"constant\":false,\"payable\":false,\"inputs\":[{\"type\":\"string\",\"name\":\"userId\"},{\"type\":\"uint256\",\"name\":\"index\"},{\"type\":\"string\",\"name\":\"newIpfsHash\"},{\"type\":\"string\",\"name\":\"newEncryptedAESKey\"}],\"outputs\":[]}];\n\nlet provider = window.ethereum;\nlet fitnessContract;\nconst client = createThirdwebClient({ clientId: \"3f7ea9dbfcdc8079c39087ed3a4ebfd0\" });\n\n// Initialize the provider and contract\nasync function init() {\n  const provider = new ethers.JsonRpcProvider();\n  const signer = new ethers.Wallet(\"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\", provider);\n  fitnessContract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\n}\n\n// Get public key from MetaMask\nasync function getMetaMaskEncryptionPublicKey() {\n  try {\n    const accounts = await provider.enable();\n    const account = accounts[0];\n    const publicKey = await provider.request({\n      method: \"eth_getEncryptionPublicKey\",\n      params: [account],\n    });\n    return publicKey;\n  } catch (error) {\n    console.error(\"Error getting MetaMask encryption public key:\", error);\n    throw error;\n  }\n}\n\n// Encrypt message\nfunction encryptMessage(publicKey, message) {\n  try {\n    const buf = Buffer.from(\n      JSON.stringify(\n        sigUtil.encrypt({\n          publicKey: publicKey,\n          data: message,\n          version: 'x25519-xsalsa20-poly1305'\n        })\n      ),\n      'utf8'\n    );\n    return '0x' + buf.toString('hex');\n  } catch (error) {\n    console.error(\"Encryption failed:\", error);\n    throw error;\n  }\n}\n\n// Decrypt message\nasync function decryptMessage(encryptedMessage) {\n  try {\n    const provider = window.ethereum;\n    const accounts = await provider.enable();\n    const account = accounts[0];\n    const decryptedMessage = await provider.request({\"method\": \"eth_decrypt\", \"params\": [encryptedMessage, account]});\n    console.log(\"Decrypted Message:\", decryptedMessage);\n    return decryptedMessage;\n  } catch (error) {\n    console.error(\"Decryption failed:\", error);\n    throw error;\n  }\n}\n\n// Upload file to IPFS\nasync function uploadToIPFS(file) {\n  const ipfsHash = await upload({ client, files: [file] });\n  console.log(\"Uploaded IPFS Hash:\", ipfsHash);\n  return ipfsHash;\n}\n\n// Retrieve file from IPFS\nasync function retrieveFromIPFS(ipfsHash) {\n  const file = await download({ client, uri: ipfsHash });\n  const jsonContent = await file.text();\n  console.log(\"Retrieved JSON Content: \", jsonContent);\n  return JSON.parse(jsonContent);\n}\n\n// Encrypt IPFS hash using AES\nfunction encryptIPFSHash(hash) {\n  const key = CryptoJS.lib.WordArray.random(32).toString(CryptoJS.enc.Hex);\n  const encrypted = CryptoJS.AES.encrypt(hash, key).toString();\n  return { encryptedHash: encrypted, encryptionKey: key };\n}\n\n// Encrypt AES key with MetaMask public key\nasync function encryptAESKeyWithMetaMask(publicKey, aesKey) {\n  const encoder = new TextEncoder();\n  const encodedKey = encoder.encode(aesKey);\n  const encryptedAESKey = await window.crypto.subtle.encrypt(\n    { name: \"RSA-OAEP\" },\n    publicKey,\n    encodedKey\n  );\n  return encryptedAESKey;\n}\n\n// Store data in smart contract\nasync function storeDataInContract(userId, encryptedHash, encryptedAESKey) {\n  const tx = await fitnessContract.storeFitnessData(userId, encryptedHash, encryptedAESKey);\n  await tx.wait();\n}\n\n// Handle file selection\nasync function handleFileSelection(event) {\n  const file = event.target.files[0];\n  const reader = new FileReader();\n  reader.onload = function(e) {\n    const fileContent = JSON.parse(e.target.result);\n    displayJson(fileContent, \"jsonOutput\");\n    document.getElementById(\"uploadButton\").disabled = false;\n  };\n  reader.readAsText(file);\n}\n\n// Handle default file selection\nasync function handleDefaultSelection() {\n  const response = await fetch('./fitnessData.json');\n  const fileContent = await response.json();\n  displayJson(fileContent, \"jsonOutput\");\n  document.getElementById(\"uploadButton\").disabled = false;\n}\n\n// Display JSON content in a specified element\nfunction displayJson(content, elementId) {\n  const jsonOutput = document.getElementById(elementId);\n  jsonOutput.textContent = JSON.stringify(content, null, 2);\n  jsonOutput.style.display = \"block\";\n}\n\n// Handle file upload\nasync function handleFileUpload() {\n  const jsonOutput = document.getElementById(\"jsonOutput\");\n  const fileContent = JSON.parse(jsonOutput.textContent);\n\n  const ipfsHash = await uploadToIPFS(fileContent);\n  console.log(\"Initial IPFS Hash:\", ipfsHash);\n  displayValue(\"Initial IPFS Hash\", ipfsHash);\n  updateProgressBar(25);\n\n  \n  \n  const { encryptedHash, encryptionKey } = encryptIPFSHash(ipfsHash);\n  console.log(\"Initial AES Key:\", encryptionKey);\n\n  displayValue(\"Initial AES Key\", encryptionKey);\n  updateProgressBar(50);\n\n  displayValue(\"Encrypted IPFS Hash\", encryptedHash);\n  updateProgressBar(75);\n\n  const publicKey = await getMetaMaskEncryptionPublicKey();\n  const encryptedAESKey = encryptMessage(publicKey, encryptionKey);\n\n  displayValue(\"Encrypted AES Key\", encryptedAESKey);\n\n  const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n  const account = accounts[0];\n\n  const tx = await fitnessContract.storeFitnessData(account, encryptedHash, encryptedAESKey);\n  await tx.wait();\n\n  updateProgressBar(100);\n\n  alert(\"File uploaded and data stored successfully!\");\n  console.log(\"Encrypted IPFS Hash:\", encryptedHash);\n  console.log(\"Encrypted AES Key:\", encryptedAESKey);\n\n  // Enable the retrieve button\n  document.getElementById(\"retrieveButton\").disabled = false;\n}\n\n// Retrieve and decrypt data\nasync function retrieveAndDecryptData() {\n  const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n  const account = accounts[0];\n\n  console.log(\"Account to retrieve from:\", account);\n\n  const userFitnessData = await fitnessContract.getUserFitnessData(account);\n  const { ipfsHash, encryptedAESKey } = userFitnessData.at(-1); // To change: iterate through all users\n  const decryptedAESKey = await decryptMessage(encryptedAESKey);\n  console.log(\"Decrypted AES Key:\", decryptedAESKey);\n  displayValue(\"Decrypted AES Key\", decryptedAESKey);\n  \n  const decryptedIPFSHash = CryptoJS.AES.decrypt(ipfsHash, decryptedAESKey).toString(CryptoJS.enc.Utf8);\n  console.log(\"Decrypted IPFS Hash:\", decryptedIPFSHash);\n  displayValue(\"Decrypted IPFS Hash\", decryptedIPFSHash);\n\n  const fileContent = await retrieveFromIPFS(decryptedIPFSHash);\n\n  console.log(\"Retrieved File Content:\", fileContent);\n\n  // Display JSON content\n  displayJson(fileContent, \"retrievedOutput\");\n}\n\n// Display value in a specified element\nfunction displayValue(label, value) {\n  const uploadValues = document.getElementById(\"uploadValues\");\n  const valueElement = document.createElement(\"div\");\n  valueElement.textContent = `----------\\n${label}: ${value}\\n`;\n  uploadValues.appendChild(valueElement);\n  uploadValues.style.display = \"inline-block\";\n}\n\n// Hide values\nfunction hideValues() {\n  document.getElementById(\"uploadValues\").style.display = \"none\";\n  document.getElementById(\"uploadValues\").innerHTML = \"\";\n  document.getElementById(\"retrieveValues\").style.display = \"none\";\n  document.getElementById(\"retrieveValues\").innerHTML = \"\";\n}\n\n// Update progress bar\nfunction updateProgressBar(value) {\n  const progressBar = document.getElementById(\"progressBar\");\n  progressBar.style.display = \"block\";\n  progressBar.value = value;\n  if (value === 100) {\n    setTimeout(() => {\n      progressBar.style.display = \"none\";\n    }, 1000);\n  }\n}\n\n// Event listeners\ndocument.getElementById(\"fileInput\").addEventListener(\"change\", handleFileSelection);\ndocument.getElementById(\"uploadButton\").addEventListener(\"click\", handleFileUpload);\ndocument.getElementById(\"defaultButton\").addEventListener(\"click\", handleDefaultSelection);\ndocument.getElementById(\"retrieveButton\").addEventListener(\"click\", retrieveAndDecryptData);\n\nconst connectButton = document.getElementById(\"connect\");\n\nconnectButton.addEventListener(\"click\", async () => {\n  if (window.ethereum) {\n    const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n    const account = accounts[0];\n    console.log(\"Connected account:\", account);\n    document.getElementById(\"account-info\").textContent = `Connected account: ${account}`;\n\n    // Reset all fields and buttons\n    document.getElementById(\"fileInput\").value = \"\";\n    document.getElementById(\"uploadButton\").disabled = true;\n    document.getElementById(\"retrieveButton\").disabled = true;\n    document.getElementById(\"jsonOutput\").style.display = \"none\";\n    document.getElementById(\"retrievedOutput\").style.display = \"none\";\n    hideValues();\n    updateProgressBar(0);\n  } else {\n    console.error(\"MetaMask is not installed.\");\n  }\n});\n\n// Initialize\ninit();","import { computeClientIdFromSecretKey } from \"../utils/client-id.js\";\nimport { isJWT } from \"../utils/jwt/is-jwt.js\";\n/**\n * Creates a Thirdweb client using the provided client ID (client-side) or secret key (server-side).\n *\n * Get your client ID and secret key from the Thirdweb dashboard [here](https://thirdweb.com/create-api-key).\n * **Never share your secret key with anyone.\n *\n * A client is necessary for most functions in the thirdweb SDK. It provides access to thirdweb APIs including built-in RPC, storage, and more.\n *\n * @param options - The options for creating the client.\n * @param [options.clientId] - The client ID to use for thirdweb services.\n * @param [options.secretKey] - The secret key to use for thirdweb services.\n * @returns The created Thirdweb client.\n * @throws An error if neither `clientId` nor `secretKey` is provided.\n *\n * @example\n * Create a client on the client side (client ID):\n * ```ts\n * import { createThirdwebClient } from \"thirdweb\";\n *\n * const client = createThirdwebClient({ clientId: \"...\" });\n * ```\n *\n * Create a client on the server (secret key):\n * ```ts\n * import { createThirdwebClient } from \"thirdweb\";\n *\n * const client = createThirdwebClient({ secretKey: \"...\" });\n * ```\n * @client\n */\nexport function createThirdwebClient(options) {\n    const { clientId, secretKey, ...rest } = options;\n    let realClientId = clientId;\n    if (secretKey) {\n        if (isJWT(secretKey)) {\n            // when passing a JWT as secret key we HAVE to also have a clientId\n            if (!clientId) {\n                throw new Error(\"clientId must be provided when using a JWT secretKey\");\n            }\n        }\n        else {\n            realClientId = computeClientIdFromSecretKey(secretKey);\n        }\n    }\n    // only path we get here is if we have no secretKey and no clientId\n    if (!realClientId) {\n        throw new Error(\"clientId or secretKey must be provided\");\n    }\n    return {\n        ...rest,\n        clientId: realClientId,\n        secretKey,\n    };\n}\n//# sourceMappingURL=client.js.map"],"names":["inProgress","dataWebpackPrefix","encode","input","Array","isArray","output","outputLength","i","length","encoded","push","concatBytes","encodeLength","inputBuf","toBytes","safeSlice","start","end","Error","slice","decodeLength","v","parseHexByte","bytesToHex","len","offset","Uint8Array","from","hexLength","numberToHex","firstByte","hexToBytes","decode","stream","decoded","_decode","remainder","data","llength","innerRemainder","d","totalLength","Object","defineProperty","exports","value","RLP","utils","cachedHexes","_v","toString","padStart","uint8a","hex","hexByte","byte","Number","parseInt","isNaN","TypeError","array","j","arrays","reduce","a","arr","result","pad","set","utf8ToBytes","utf","TextEncoder","integer","isHexPrefixed","str","accountBodyToRLP","accountBodyToSlim","accountBodyFromSlim","isZeroAddress","zeroAddress","importPublic","privateToAddress","privateToPublic","publicToAddress","pubToAddress","isValidPublic","isValidPrivate","generateAddress2","generateAddress","isValidChecksumAddress","toChecksumAddress","isValidAddress","Account","rlp_1","keccak_1","secp256k1_1","utils_1","bytes_1","constants_1","helpers_1","internal_1","_0n","BigInt","constructor","nonce","balance","storageRoot","KECCAK256_RLP","codeHash","KECCAK256_NULL","this","_validate","fromAccountData","accountData","undefined","bufferToBigInt","toBuffer","fromRlpSerializedAccount","serialized","values","arrToBufArr","fromValuesArray","raw","bigIntToUnpaddedBuffer","serialize","Buffer","bufArrToArr","isContract","equals","isEmpty","body","hexAddress","assertIsString","e","test","eip1191ChainId","assertIsHexString","address","stripHexPrefix","toLowerCase","prefix","buf","hash","keccak256","ret","toUpperCase","assertIsBuffer","salt","initCode","concat","privateKey","secp256k1","isValidPrivateKey","publicKey","sanitize","ProjectivePoint","fromHex","pubKey","toRawBytes","fromPrivateKey","addr","zeros","bufferToHex","emptyUint8Arr","couldBeSlim","accountBody","Address","account_1","zero","fromString","fromPublicKey","isBuffer","generate","bigIntToBuffer","generate2","isZero","isPrecompileOrSystemAddress","rangeMin","rangeMax","AsyncEventEmitter","events_1","EventEmitter","emit","event","args","callback","self","listeners","_events","fn","async","context","tasks","error","task","call","Promise","resolve","reject","runInSeries","then","catch","listenerCount","once","listener","g","next","removeListener","on","first","unshift","before","target","beforeOrAfter","after","index","add","splice","super","addListener","prependListener","prependOnceListener","removeAllListeners","eventNames","getMaxListeners","setMaxListeners","maxListeners","intToUnpaddedBuffer","bigIntToHex","validateNoLeadingZeroes","baToJSON","toUtf8","short","addHexPrefix","toUnsigned","fromSigned","bufferToInt","unpadHexString","unpadArray","unpadBuffer","setLengthRight","setLengthLeft","intToBuffer","intToHex","isSafeInteger","padToEven","bytes","allocUnsafe","fill","setLength","msg","right","copy","stripZeros","num","assertIsArray","isHexString","n","toArray","res","asIntN","asUintN","buffer","maxLength","bufferStr","replace","ba","k","entries","map","MAX_WITHDRAWALS_PER_PAYLOAD","RLP_EMPTY_STRING","KECCAK256_RLP_S","KECCAK256_RLP_ARRAY","KECCAK256_RLP_ARRAY_S","KECCAK256_NULL_S","TWO_POW256","SECP256K1_ORDER_DIV_2","SECP256K1_ORDER","MAX_INTEGER_BIGINT","MAX_INTEGER","MAX_UINT64","buffer_1","CURVE","compactBytesToNibbles","bytesToNibbles","nibblesToCompactBytes","nibblesToBytes","hasTerminator","nibbles","bi","ni","terminator","subarray","l","b","compact","base","chop","__createBinding","create","o","m","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","toAscii","getKeys","getBinarySize","fromUtf8","fromAscii","arrayContainsArray","byteLength","superset","subset","some","indexOf","substring","code","substr","String","fromCharCode","stringValue","charCodeAt","params","key","allowEmpty","match","Lock","permits","promiseResolverQueue","acquire","resolver","release","console","warn","nextResolver","shift","getProvider","fetchFromProvider","micro_ftch_1","url","default","headers","type","method","jsonrpc","id","provider","connection","hashPersonalMessage","isValidSignature","fromRpcSig","toCompactSig","toRpcSig","ecrecover","ecsign","calculateSigRecovery","chainId","isValidSigRecovery","recovery","msgHash","sig","sign","toCompactRawBytes","r","s","signature","senderPubKey","Signature","fromCompact","addRecoveryBit","recoverPublicKey","ss","homesteadOrLater","rBigInt","sBigInt","message","toType","TypeOutput","outputType","bigInt","MAX_SAFE_INTEGER","PrefixedHexString","GWEI_TO_WEI","Withdrawal","address_1","types_1","validatorIndex","amount","fromWithdrawalData","withdrawalData","indexData","validatorIndexData","addressData","amountData","withdrawalArray","toBufferArray","withdrawal","indexBuffer","alloc","validatorIndexBuffer","addressBuffer","toValue","toJSON","decodeSingle","encodePacked","encodeSingle","errors_1","packer_1","types","packed","tight","pack","ParserError","getErrorMessage","createBytes","unpack","assert","getErrorStack","isObject","hasProperty","stack","originalError","name","originalStack","iterate","size","pointer","skip","isDynamicParser","getParser","iterator_1","parsers_1","utils_2","parsers","bool","fixedBytes","function","number","string","tuple","staticParser","parser","find","isType","isDynamic","arrayPacked","byteArray","staticBuffer","dynamicBuffer","pointers","position","dynamicStart","updatedBuffer","numberToBytes","iterator","done","bytesToNumber","getAddress","bytesValue","getByteLength","addressValue","add0x","getTupleType","getArrayType","isArrayType","fixed_bytes_1","tuple_1","ARRAY_REGEX","groups","innerType","join","arrayType","fixedLength","arrayLength","rest","getBooleanValue","superstruct_1","number_1","BooleanCoercer","coerce","boolean","union","literal","booleanValue","bigIntToBytes","bufferValue","paddedSize","Math","ceil","padEnd","BYTES_REGEX","getFunction","FunctionStruct","object","StrictHexStruct","selector","instance","fnValue","getBigInt","assertNumberLength","getLength","isSigned","NUMBER_REGEX","startsWith","maxValue","createBigInt","bigIntValue","signedBigIntToBytes","numberValue","bytesToSignedBigInt","bytesToBigInt","stringToBytes","bytesToString","getTupleElements","TUPLE_REGEX","endsWith","elements","current","depth","char","trim","element","isTupleType","total","padding","max","__setModuleDefault","__importStar","mod","getEncryptionPublicKey","decryptSafely","decrypt","encryptSafely","encrypt","base_1","nacl","version","isNullish","ephemeralKeyPair","box","keyPair","pubKeyUInt8Array","base64","err","msgParamsUInt8Array","utf8","randomBytes","nonceLength","encryptedMessage","secretKey","ephemPublicKey","ciphertext","encryptedData","receiverPrivateKeyUint8Array","receiverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","dataWithPadding","modVal","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","normalize","concatSig","extractPublicKey","recoverPersonalSignature","personalSign","util_1","getPublicKeyFor","messageHash","legacyToBuffer","sender","recoverTypedSignature","signTypedData","typedSignatureHash","TypedDataUtils","TYPED_MESSAGE_SCHEMA","SignTypedDataVersion","abi_utils_1","utils_3","validateVersion","allowedVersions","keys","includes","parseNumber","reallyStrangeAddressToBytes","character","encodeField","V3","V4","encodeData","isStrictHexString","Boolean","parsedType","lastIndexOf","typeValuePairs","item","t","primaryType","encodedTypes","encodedValues","hashType","field","encodeType","unsortedDeps","findTypeDependencies","delete","deps","sort","results","Set","has","hashStruct","hashed","encodedHashType","sanitizeData","sanitizedData","properties","assign","EIP712Domain","eip712DomainHash","typedData","domain","normalizeValue","abs","normalizeIntegers","_typedSignatureHash","normalizedData","schema","additionalProperties","items","required","eip712Hash","parts","hashBuffer","V1","padWithZeroes","hexString","targetLength","rSig","sSig","vSig","rStr","sStr","vStr","remove0x","sigParams","gf","init","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","x","h","vn","xi","y","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","out","inp","c","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","z","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","leftover","fin","crypto_onetimeauth","outpos","update","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","floor","sel25519","q","pack25519","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","f","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","cswap","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","carry","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","arguments","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","keyLength","overheadLength","scalarMult","scalarLength","groupElementLength","checkBoxLengths","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","tmp","mlen","detached","verify","fromSeed","seed","seedLength","signatureLength","hashLength","setPRNG","msCrypto","getRandomValues","min","module","isBytes","ArrayBuffer","isView","isArrayOf","isString","every","afn","astr","label","anumber","aArr","astrArr","anumArr","chain","wrap","reduceRight","alphabet","letters","lettersA","split","indexes","Map","digits","letter","separator","to","bits","chr","convertRadix","dlen","digit","fromCarry","digitBase","div","rounded","reverse","bech32m","bech32","base58check","createBase58check","base58xmr","base58xrp","base58flickr","base58","base64urlnopad","base64url","base64nopad","base32crockford","base32hexnopad","base32hex","base32nopad","base32","base16","assertNumber","gcd","radix2carry","powers","convertRadix2","pow","radix","radix2","revPadding","unsafeWrapper","apply","checksum","sum","payload","oldChecksum","newChecksum","genBase58","abc","XMR_BLOCK_LEN","block","blockLen","sha256","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","bechChecksum","words","encodingConst","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","plen","actualLength","lowered","slen","sepIndex","encodeFromBytes","decodeToBytes","decodeUnsafe","TextDecoder","CODERS","coderTypeError","abytes","lengths","ahash","outputLen","aexists","checkFinished","destroyed","finished","aoutput","exists","add5L","add5H","add4H","add4L","add3H","add3L","rotlBL","rotlBH","rotlSL","rotlSH","rotr32L","rotr32H","rotrBL","rotrBH","rotrSL","rotrSH","shrSL","shrSH","toBig","fromBig","U32_MASK64","_32n","le","lst","Ah","Uint32Array","Al","_l","_h","Bh","Bl","Cl","low","Ch","Dl","Dh","El","Eh","u64","globalThis","shake256","shake128","keccak_512","keccak_384","keccak_256","keccak_224","sha3_512","sha3_384","sha3_256","sha3_224","Keccak","keccakP","_assert_js_1","_u64_js_1","utils_js_1","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_1n","_2n","_7n","_256n","_0x71n","round","R","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","rounds","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Hash","suffix","enableXOF","posOut","state","state32","u32","keccak","isLE","byteSwap32","take","writeInto","bufferOut","xofInto","xof","digestInto","destroy","digest","_cloneInto","gen","wrapConstructor","genShake","wrapXOFConstructorWithOpts","opts","dkLen","nextTick","byteSwapIfBE","byteSwap","rotl","rotr","createView","u8","hexes","al","ai","hi","n1","asciiToBase16","n2","asyncLoop","iters","tick","cb","ts","Date","now","diff","checkOpts","defaults","hashCons","hashC","wrapConstructorWithOpts","bytesLength","crypto_1","byteOffset","DataView","word","_","asciis","F","ch","clone","forEach","objectAssign","compare","_isBuffer","util","hasOwn","pSlice","functionsHaveNames","pToString","obj","arrbuf","ok","regex","getName","func","isFunction","truncate","inspect","something","rawname","fail","actual","expected","operator","stackStartFunction","AssertionError","_deepEqual","strict","memos","isDate","getTime","isRegExp","source","global","multiline","lastIndex","ignoreCase","Float32Array","actualIndex","actualVisitedObjects","isPrimitive","getPrototypeOf","aIsArgs","isArguments","bIsArgs","ka","objectKeys","kb","objEquiv","expectedException","isPrototypeOf","_throws","shouldThrow","_tryBlock","userProvidedMessage","isUnexpectedException","isError","options","generatedMessage","getMessage","captureStackTrace","fn_name","idx","next_line","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","ctor","superCtor","super_","TempCtor","arg","readUInt8","formatRegExp","format","objects","isNull","deprecate","isUndefined","process","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","debugEnviron","debugs","ctx","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","primitive","simple","isNumber","formatPrimitive","visibleKeys","val","arrayToHash","getOwnPropertyNames","formatError","RegExp","braces","toUTCString","formatProperty","formatArray","pop","prev","cur","reduceToSingleString","line","ar","re","objectToString","debuglog","env","NODE_DEBUG","pid","isNullOrUndefined","isSymbol","months","prop","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","origin","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","Zstream","zlib_deflate","zlib_inflate","constants","Zlib","mode","DEFLATE","UNZIP","dictionary","flush","init_done","level","memLevel","strategy","windowBits","write_in_progress","pending_close","gzip_id_bytes_read","NONE","INFLATE","GZIP","GUNZIP","DEFLATERAW","INFLATERAW","close","deflateEnd","strm","inflateEnd","write","in_off","in_len","out_off","out_len","_write","writeSync","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","avail_in","next_in","avail_out","next_out","_process","_checkError","_afterSync","_after","next_expected_header_byte","deflate","inflate","Z_NEED_DICT","inflateSetDictionary","Z_OK","Z_DATA_ERROR","Z_STREAM_END","reset","Z_BUF_ERROR","_error","onerror","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","_init","_setDictionary","_reset","deflateInit2","Z_DEFLATED","inflateInit2","deflateSetDictionary","deflateReset","inflateReset","Transform","binding","kMaxLength","kRangeErrorMessage","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","Z_DEFAULT_WINDOWBITS","Z_MIN_CHUNK","Z_MAX_CHUNK","Infinity","Z_DEFAULT_CHUNK","Z_MIN_MEMLEVEL","Z_MAX_MEMLEVEL","Z_DEFAULT_MEMLEVEL","Z_MIN_LEVEL","Z_MAX_LEVEL","Z_DEFAULT_LEVEL","Z_DEFAULT_COMPRESSION","bkeys","bk","bkey","codes","Z_ERRNO","Z_STREAM_ERROR","Z_MEM_ERROR","Z_VERSION_ERROR","ckeys","ck","ckey","zlibBuffer","engine","buffers","nread","flow","chunk","read","onEnd","RangeError","zlibBufferSync","flushFlag","_finishFlushFlag","_processChunk","Deflate","Inflate","Gzip","Gunzip","DeflateRaw","InflateRaw","Unzip","isValidFlushFlag","flag","_this","_opts","_chunkSize","chunkSize","finishFlush","_flushFlag","_handle","_hadError","errno","_close","_buffer","_offset","_level","_strategy","emitCloseNT","freeze","createDeflate","createInflate","createDeflateRaw","createInflateRaw","createGzip","createGunzip","createUnzip","deflateSync","gzip","gzipSync","deflateRaw","deflateRawSync","unzip","unzipSync","inflateSync","gunzip","gunzipSync","inflateRaw","inflateRawSync","_flush","_transform","kind","_this2","ws","_writableState","ended","ending","needDrain","last","availInBefore","availOutBefore","inOff","er","req","availInAfter","availOutAfter","have","newReq","ieee754","customInspectSymbol","Symbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","setPrototypeOf","encodingOrOffset","isEncoding","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","units","lo","utf16leToBytes","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","poolSize","allocUnsafeSlow","list","swap16","swap32","swap64","toLocaleString","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","Base","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","isInteger","INVALID_BASE64_RE","leadSurrogate","base64clean","src","dst","table","i16","BufferBigIntNotDefined","bind","$apply","$call","$reflectApply","actualApply","Function","$TypeError","$actualApply","Reflect","GetIntrinsic","callBind","$indexOf","allowMissing","intrinsic","setFunctionLength","$defineProperty","callBindBasic","applyBind","originalFunction","adjustedLength","$Object","$Error","$EvalError","$RangeError","$ReferenceError","$SyntaxError","$URIError","$Function","getEvalledConstructor","expressionSyntax","$gOPD","throwTypeError","ThrowTypeError","calleeThrows","gOPDthrows","hasSymbols","getDunderProto","getProto","needsEval","TypedArray","INTRINSICS","__proto__","AggregateError","Atomics","BigInt64Array","BigUint64Array","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","eval","FinalizationRegistry","Int8Array","Int16Array","parseFloat","Proxy","Uint8ClampedArray","WeakMap","WeakRef","WeakSet","errorProto","doEval","LEGACY_ALIASES","$concat","$spliceApply","$replace","$strSlice","$exec","exec","rePropName","reEscapeChar","getBaseIntrinsic","alias","intrinsicName","quote","subString","stringToPath","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","CryptoJS","C","BlockCipher","lib","C_algo","algo","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","sx","RCON","AES","extend","_doReset","_nRounds","_keyPriorReset","_key","keyWords","keySize","sigBytes","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","encryptBlock","_doCryptBlock","decryptBlock","nRounds","s0","s1","s2","s3","_createHelper","N","ORIG_P","ORIG_S","BLOWFISH_CTX","pbox","sbox","BlowFish_Encrypt","left","temp","Xl","Xr","Blowfish","keysize","Row","Col","keyIndex","Data1","Data2","BlowFishInit","BlowFish_Decrypt","blockSize","ivSize","C_lib","WordArray","BufferedBlockAlgorithm","C_enc","Base64","EvpKDF","Cipher","C_mode","BlockCipherMode","CBC","Pkcs7","CipherParams","OpenSSLFormatter","SerializableCipher","OpenSSLKdf","PasswordBasedCipher","enc","Utf8","cfg","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","xformMode","_xformMode","dataUpdate","_append","finalize","_doFinalize","selectCipherStrategy","cipher","StreamCipher","iv","Encryptor","Decryptor","_cipher","_iv","xorBlock","_prevBlock","processBlock","thisBlock","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","unpad","modeCreator","_minBufferSize","_mode","__creator","_doProcessBlock","finalProcessedBlocks","_data","cipherParams","mixIn","formatter","OpenSSL","openSSLStr","ciphertextWords","encryptor","cipherCfg","algorithm","_parse","kdf","execute","password","hasher","random","compute","derivedParams","window","cryptoSecureRandomInt","subtype","overrides","$super","propertyName","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","escape","utf8Str","unescape","_nDataBytes","doFlush","processedWords","dataWords","dataSigBytes","nBlocksReady","nWordsReady","nBytesReady","Hasher","messageUpdate","_createHmacHelper","HMAC","_map","base64Chars","triplet","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","bitsCombined","parseLoop","Base64url","urlSafe","_safe_map","swapEndian","Utf16","Utf16BE","utf16Chars","utf16Str","utf16StrLength","Utf16LE","MD5","iterations","derivedKey","derivedKeyWords","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","superInit","subInit","typedArray","typedArrayByteLength","T","sin","_hash","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","HmacMD5","CFB","generateKeystreamAndEncrypt","keystream","CTRGladman","incWord","counter","_counter","incCounter","CTR","ECB","OFB","_keystream","AnsiX923","lastBytePos","Ansix923","Iso10126","Iso97971","ZeroPadding","NoPadding","SHA256","PBKDF2","hmac","blockIndex","blockIndexWords","blockWords","blockWordsLength","intermediate","intermediateWords","C_","G","RabbitLegacy","_X","_C","_b","nextState","IV","IV_0","IV_1","i0","i2","i1","i3","gx","ga","gb","gh","gl","Rabbit","RC4","keySigBytes","_S","keyByteIndex","keyByte","_i","_j","generateKeystreamWord","keystreamWord","RC4Drop","drop","_zl","_zr","_sl","_sr","_hl","_hr","RIPEMD160","bl","cl","dl","el","br","cr","dr","hr","zl","zr","sl","sr","f1","f2","f3","f4","f5","HmacRIPEMD160","W","SHA1","HmacSHA1","SHA224","HmacSHA224","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","HmacSHA256","X64Word","x64","Word","RHO_OFFSETS","PI_INDEXES","ROUND_CONSTANTS","newY","LFSR","roundConstantMsw","roundConstantLsw","bitPosition","SHA3","_state","nBlockSizeLanes","M2i","M2i1","lane","high","tMsw","tLsw","Tx","Tx4","Tx1","Tx1Msw","Tx1Lsw","laneIndex","laneMsw","laneLsw","rhoOffset","TPiLane","T0","state0","TLane","Tx1Lane","Tx2Lane","roundConstant","blockSizeBits","outputLengthBytes","outputLengthLanes","hashWords","HmacSHA3","C_x64","X64WordArray","SHA512","SHA384","HmacSHA384","X64Word_create","H0","H1","H2","H3","H4","H5","H6","H7","H0h","H0l","H1h","H1l","H2h","H2l","H3h","H3l","H4h","H4l","H5h","H5l","H6h","H6l","H7h","H7l","ah","bh","dh","eh","fh","fl","Wil","Wih","Wi","gamma0xh","gamma0xl","gamma0h","gamma0l","gamma1xh","gamma1xl","gamma1h","gamma1l","Wi7","Wi7h","Wi7l","Wi16","Wi16h","Wi16l","t1l","chh","chl","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Ki","Kih","Kil","t1h","t2l","toX32","HmacSHA512","PC1","PC2","BIT_SHIFTS","SBOX_P","SBOX_MASK","DES","keyBits","keyBitPos","subKeys","_subKeys","nSubKey","subKey","bitShift","invSubKeys","_invSubKeys","_lBlock","_rBlock","exchangeLR","exchangeRL","lBlock","rBlock","TripleDES","key1","key2","key3","_des1","_des2","_des3","X32WordArray","x64Words","x64WordsLength","x32Words","x64Word","wordsLength","formatArgs","useColors","namespace","humanize","color","lastC","save","namespaces","storage","setItem","removeItem","load","getItem","DEBUG","__nwjs","navigator","userAgent","document","documentElement","WebkitAppearance","firebug","exception","localStorage","localstorage","debug","formatters","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","curr","ms","selectColor","delimiter","newDebug","toNamespace","regexp","disable","names","skips","enable","gopd","property","nonEnumerable","nonWritable","nonConfigurable","loose","gOPD","$getPrototypeOf","EvalError","ReferenceError","SyntaxError","URIError","keccak512","keccak384","keccak224","sha3_1","wrapHash","getHash","createCurve","curveDef","defHash","weierstrass_js_1","weierstrass","hmac_1","msgs","wNAF","constTimeNegate","condition","neg","negate","windows","windowSize","unsafeLadder","elm","ZERO","double","precomputeWindow","points","precomputes","BASE","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","P","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","modular_js_1","validateField","Fp","validateObject","Gx","Gy","nBitLength","nByteLength","nLength","ORDER","expand_message_xmd","expand_message_xof","hash_to_field","isogenyMap","COEFF","xNum","xDen","yNum","yDen","acc","createHasher","Point","mapToCurve","def","hashToCurve","DST","u0","fromAffine","u1","clearCofactor","assertValidity","encodeToCurve","encodeDST","scalars","os2ip","bytesToNumberBE","i2osp","strxor","anum","lenInBytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","count","expand","_DST","log2p","len_in_bytes","prb","elm_offset","tv","isNegativeLE","pow2","power","modulo","invert","tonelliShanks","FpSqrt","FIELD_FIELDS","MASK","BYTES","BITS","FpPow","FpInvertBatch","FpDiv","lhs","rhs","inv","FpIsSquare","legendreConst","eql","ONE","Field","bitLen","redef","sqrtP","bitMask","isValid","is0","isOdd","sqr","sqrN","addN","subN","mulN","invertBatch","cmov","numberToBytesLE","numberToBytesBE","fromBytes","bytesToNumberLE","FpSqrtOdd","root","FpSqrtEven","hashToPrivateScalar","groupOrder","hashLen","ensureBytes","minLen","getFieldBytesLength","getMinHashLength","mapHashToField","fieldOrder","fieldLen","reduced","_3n","_4n","_5n","_8n","legendreC","Q","p1div4","Q1div2","ge","c1","nv","nums","lastMultiplied","inverted","_nBitLength","bitLength","numberToHexUnpadded","hexToNumber","numberToVarBytesBE","title","expectedLength","equalBytes","bitGet","bitSet","createHmacDrbg","qByteLen","hmacFn","u8n","reseed","u8fr","pred","validators","optValidators","checkField","fieldName","isOptional","checkVal","validatorFns","_A","_F","_a","_f","bigint","stringOrUint8Array","DER","weierstrassPoints","curve_js_1","ut","bits2int","bits2int_modN","lowS","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","normPrivateKeyToScalar","weierstrassEquation","isWithinCurveOrder","_c","point","isCompressed","toAffine","cat","hasEvenY","head","tail","y2","sqrtError","numToNByteStr","isBiggerThanHalfOrder","slcNum","fromDER","toSig","rec","radj","ir","u2","multiplyAndAddUnsafe","hasHighS","normalizeS","toDERRawBytes","toDERHex","hexFromSig","toCompactHex","randomPrivateKey","precompute","_setWindowSize","multiply","isProbPub","delta","ORDER_MASK","int2octets","defaultSigOpts","prehash","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","privKey","k2sig","extraEntropy","ent","h1int","seedArgs","kBytes","ik","normS","prepSig","drbg","sg","_sig","derError","Err","is","SWUFpSqrtRatio","mapToCurveSimpleSWU","sqrtRatio","tv1","tv2","tv3","tv4","tv5","tv6","e1","b2n","h2b","_parseInt","sBytes","rBytesLeft","shl","rhl","rl","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","_isCompressed","assertGE","pointPrecomputes","assertPrjPoint","other","px","py","pz","normalizeZ","toInv","X1","Y1","Z1","X2","Y2","Z2","U1","U2","X3","Y3","Z3","subtract","wnaf","multiplyUnsafe","k1neg","k1","k2neg","k1p","k2p","scalar","fake","f1p","f2p","iz","ax","ay","zz","cofactor","toHex","_bits","_2n_pow_c1_1","_2n_pow_c1","c2","c3","c4","c5","c6","c7","isQR","tvv5","y1","schnorr","sha256_1","_shortw_utils_js_1","hash_to_curve_js_1","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b22","b44","b88","b176","b220","b223","a1","a2","POW_2_128","fe","TAGGED_HASH_PREFIXES","taggedHash","tag","messages","tagP","tagH","pointToBytes","numTo32b","modP","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrVerify","pub","auxRand","rand","k_","rx","isoMap","mapSWU","htf","HashMD","Maj","Chi","padOffset","view","dataView","roundClean","setBigUint64","_u32_max","setUint32","oview","outLen","iHash","oHash","sha224","_md_js_1","SHA256_K","SHA256_IV","SHA256_W","getUint32","W15","W2","T1","T2","toStr","__importDefault","assertBytes","assertBool","bytesToUtf8","sliced","equalsBytes","_assert_1","webCrypto","nodeRequire","require","node","web","ReflectOwnKeys","ReflectApply","receiver","ownKeys","getOwnPropertySymbols","NumberIsNaN","emitter","errorListener","eventTargetAgnosticAddListener","handler","addErrorHandlerIfEventEmitter","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","w","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","flags","addEventListener","wrapListener","removeEventListener","doError","originalListener","spliceOne","off","rawListeners","isCallable","thisArg","forEachArray","forEachString","forEachObject","concatty","bound","arrLike","slicy","boundLength","boundArgs","joiny","Empty","implementation","hasPropertyDescriptors","hasArrayLengthDefineBug","origSymbol","hasSymbolSham","symObj","syms","propertyIsEnumerable","descriptor","toStringTag","$hasOwn","http","https","validateParams","protocol","request","mLen","eLen","eMax","eBias","nBits","NaN","rt","LN2","hasToStringTag","$toString","callBound","isStandardArguments","isLegacyArguments","callee","supportsStandardArguments","badArrayLike","isCallableMarker","fnToStr","reflectApply","constructorRegex","isES6ClassFn","fnStr","tryFunctionObject","isIE68","isDDA","all","strClass","GeneratorFunction","isFnRegex","generatorFunc","getGeneratorFunc","whichTypedArray","InvalidStatusCodeError","InvalidCertError","DEFAULT_OPT","redirect","expectStatusCode","full","keepAlive","cors","referrer","sslAllowSelfSigned","_redirectCount","fingerprint256","statusCode","detectType","text","fatal","agents","fetchNode","_options","zlib","promisify","urlResolve","isSecure","compactFP","agentOpt","keepAliveMsecs","maxFreeSockets","maxCachedSessions","agentKey","sslPinnedCertificates","agent","Agent","rejectUnauthorized","handleError","status","resume","brotliDecompress","handleRes","pinned","mfetchSecureConnect","socket","fp256","getPeerCertificate","isSessionReused","abort","setNoDelay","SAFE_HEADERS","FORBIDDEN_HEADERS","fetchBrowser","Headers","URL","username","auth","btoa","referrerPolicy","fetch","arrayBuffer","fromEntries","IS_NODE","versions","v8","plural","msAbs","isPlural","long","fmtShort","hasMap","mapSizeDescriptor","mapSize","mapForEach","hasSet","setSizeDescriptor","setSize","setForEach","weakMapHas","weakSetHas","weakRefDeref","deref","booleanValueOf","functionToString","$match","$slice","$toUpperCase","$toLowerCase","$test","$join","$arrSlice","$floor","bigIntValueOf","gOPS","symToString","hasShammedSymbols","isEnumerable","gPO","O","addNumericSeparator","sepRegex","int","intStr","dec","utilInspect","inspectCustom","custom","inspectSymbol","quotes","single","quoteREs","wrapQuotes","defaultStyle","quoteStyle","quoteChar","inspect_","maxStringLength","indent","numericSeparator","inspectString","bigIntStr","maxDepth","baseIndent","getIndent","noIndent","newOpts","nameOf","arrObjKeys","symString","markBoxed","HTMLElement","nodeName","getAttribute","attrs","attributes","childNodes","xs","singleLineValues","indentedJoin","cause","isMap","mapParts","collectionOf","isSet","setParts","isWeakMap","weakCollectionOf","isWeakSet","isWeakRef","isBigInt","ys","isPlainObject","protoTag","stringTag","trailer","quoteRE","lowbyte","lineJoiner","isArr","symMap","keysShim","isArgs","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","shim","keysWorksWithArguments","$push","$propIsEnumerable","originalGetSymbols","source1","getSymbols","nextKey","propValue","lacksProperEnumerationOrder","preventExtensions","thrower","assignHasPendingExceptions","TYPED_OK","_has","sources","shrinkBuf","fnTyped","arraySet","dest","src_offs","dest_offs","flattenChunks","chunks","fnUntyped","setTyped","Buf8","Buf16","Buf32","adler","Z_TREES","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_BINARY","Z_TEXT","Z_UNKNOWN","crcTable","makeTable","crc","configuration_table","trees","adler32","crc32","MAX_MATCH","MIN_LOOKAHEAD","HCRC_STATE","BUSY_STATE","FINISH_STATE","errorCode","rank","flush_pending","pending","pending_buf","pending_out","total_out","flush_block_only","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","_w_size","window_size","hash_size","total_in","insert","ins_h","hash_shift","hash_mask","deflate_fast","hash_head","bflush","match_length","_tr_tally","max_lazy_match","MIN_MATCH","last_lit","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","DeflateState","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","HEAP_SIZE","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","MAX_BITS","heap","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","deflateResetKeep","data_type","_tr_init","max_block_size","max_start","deflateInit","deflateSetHeader","old_flush","beg","hcrc","extra","comment","os","header","bstate","deflate_huff","deflate_rle","_tr_align","_tr_stored_block","avail","tmpDict","dictLength","deflateInfo","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","dist","from_source","lencode","distcode","lenbits","distbits","top","dolen","sane","inflate_fast","inflate_table","TYPE","BAD","zswap32","InflateState","havedict","check","ncode","nlen","ndist","work","lendyn","distdyn","back","was","inflateResetKeep","inflateReset2","lenfix","distfix","virgin","fixedtables","updatewindow","inflateInit","put","here_bits","here_op","here_val","last_bits","last_op","last_val","hbuf","order","inf_leave","xflags","extra_len","inflateGetHeader","inflateInfo","lbase","lext","dbase","dext","lens_index","table_index","incr","used","huff","base_index","MAXBITS","offs","extra_index","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","D_CODES","_dist_code","_length_code","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","send_bits","send_code","tree","bi_reverse","gen_codes","next_code","init_block","LITERALS","END_BLOCK","bi_windup","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lc","lx","build_tree","stree","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","stored_len","copy_block","LENGTH_CODES","L_CODES","tr_static_init","opt_lenb","static_lenb","max_blindex","black_mask","detect_data_type","BL_CODES","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","STATIC_TREES","bi_flush","ErrorWithCause","findCauseByReference","getErrorCause","messageWithCauses","stackWithCauses","causeResult","_stackWithCauses","_messageWithCauses","skipIfVErrorStyleCause","reference","currentErr","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","browser","argv","cwd","chdir","umask","createErrorType","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","oneOf","thing","determiner","search","this_len","Duplex","Readable","Writable","allowHalfOpen","readable","onend","onEndNT","highWaterMark","getBuffer","_readableState","PassThrough","ReadableState","EElistenerCount","Stream","OurUint8Array","debugUtil","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","_read","_destroy","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","isPaused","setEncoding","content","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","wState","nOrig","doRead","pipe","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","ondata","cleanedUp","pipeOnDrain","pause","dests","ev","asyncIterator","_fromList","iterable","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","prefinish","err2","CorkedRequest","entry","corkReq","pendingcb","onCorkedFinish","corkedRequestsFree","WritableState","realHasInstance","internalUtil","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","hasInstance","writeAfterEnd","validChunk","newChunk","decodeChunk","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","prim","hint","_toPrimitive","_toPropertyKey","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","promise","lastPromise","wrapForNext","_Object$create","enumerableOnly","symbols","filter","_objectSpread","getOwnPropertyDescriptors","defineProperties","_defineProperties","props","Constructor","_classCallCheck","protoProps","hasStrings","_getString","_getBuffer","nb","emitErrorAndCloseNT","emitErrorNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","eos","called","_len","onlegacyfinish","writableEnded","readableEnded","onrequest","setHeader","isRequest","ERR_MISSING_ARGS","streams","popCallback","destroys","closed","destroyer","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","pipeline","copyProps","SafeBuffer","ANY","Comparator","parseOptions","semver","COMPARATORLOOSE","COMPARATOR","SemVer","cmp","intersects","Range","includePrerelease","safeRe","SPACE_CHARACTERS","formatted","parseRange","isNullSet","isAny","comps","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","comparators","thisComparators","isSatisfiable","rangeComparators","thisComparator","rangeComparator","testSet","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","TILDELOOSE","TILDE","pr","replaceCaret","CARETLOOSE","CARET","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","prerelease","allowed","major","minor","patch","MAX_LENGTH","compareIdentifiers","LOOSE","FULL","build","compareMain","comparePre","compareBuild","inc","identifier","identifierBase","eq","neq","gt","gte","lt","lte","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","COERCEFULL","COERCE","versionA","versionB","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","throwErrors","internalRe","identifiers","valid","clean","rcompare","compareLoose","rsort","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","numeric","bnum","firstKey","looseOption","emptyOpts","LETTERDASHNUMBER","safeRegexReplacements","createToken","isGlobal","safe","token","makeSafeRegex","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","LONETILDE","LONECARET","maxSV","rangeObj","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","ranges","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","dom","eqSet","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","define","hasDescriptors","functionLengthIsConfigurable","functionLengthIsWritable","$WeakMap","$Map","$weakMapGet","$weakMapSet","$weakMapHas","$mapGet","$mapSet","$mapHas","listGetNode","$wm","$m","$o","channel","listGet","listHas","listSet","EE","_isStdio","didOnEnd","ClientRequest","response","statusCodes","defaultProtocol","location","host","hostname","port","path","IncomingMessage","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","xhr","getXHR","XMLHttpRequest","XDomainRequest","checkTypeSupport","responseType","ReadableStream","writableStream","WritableStream","abortController","AbortController","arraybuffer","msstream","mozchunkedarraybuffer","overrideMimeType","capability","rStates","readyStates","preferBinary","_body","_headers","useFetch","decideMode","_fetchTimer","_socketTimeout","_socketTimer","_onFinish","lowerName","unsafeHeaders","getHeader","removeHeader","_destroyed","headersObj","Blob","headersList","keyName","signal","controller","_fetchAbortController","requestTimeout","credentials","withCredentials","_fetchResponse","_resetTimers","_connect","reason","_xhr","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","send","statusValid","flushHeaders","setSocketKeepAlive","UNSENT","OPENED","HEADERS_RECEIVED","resetTimers","rawHeaders","trailers","rawTrailers","statusMessage","statusText","_resumeFetch","pipeTo","reader","getReader","_pos","responseURL","getAllResponseHeaders","_charset","mimeType","charsetMatch","responseText","newData","MSStreamReader","onload","readAsArrayBuffer","nenc","retried","_normalizeEncoding","normalizeEncoding","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","utf8CheckExtraBytes","utf8CheckIncomplete","nodeType","freeGlobal","punycode","maxInt","regexPunycode","regexNonASCII","regexSeparators","stringFromCharCode","mapDomain","ucs2decode","ucs2encode","digitToBasic","adapt","numPoints","firstTime","baseMinusTMin","basic","oldi","baseMinusT","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","percentTwenties","Format","RFC1738","RFC3986","formats","allowDots","allowEmptyArrays","allowPrototypes","allowSparse","arrayLimit","charset","charsetSentinel","comma","decodeDotInKeys","duplicates","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","strictDepth","strictNullHandling","numberStr","parseArrayValue","parseKeys","givenKey","valuesParsed","child","segment","parent","leaf","cleanRoot","decodedRoot","parseObject","normalizeParseOptions","tempObj","cleanStr","skipIndex","bracketEqualsPos","maybeMap","encodedVal","combine","parseValues","newObj","merge","getSideChannel","arrayPrefixGenerators","brackets","indices","pushToArray","valueOrArray","toISO","toISOString","defaultFormat","addQueryPrefix","arrayFormat","commaRoundTrip","encodeDotInKeys","encodeValuesOnly","serializeDate","date","skipNulls","sentinel","generateArrayPrefix","sideChannel","tmpSc","step","findFlag","objKeys","encodedPrefix","adjustedPrefix","encodedKey","keyPrefix","valueSideChannel","normalizeStringifyOptions","joined","hexTable","arrayToObject","refs","compacted","compactQueue","defaultDecoder","strWithoutPlus","defaultEncoder","mapped","mergeTarget","targetItem","Url","slashes","query","pathname","href","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","hostlessProtocol","slashedProtocol","ftp","gopher","file","querystring","urlParse","parseQueryString","slashesDenoteHost","queryIndex","splitter","uSplit","simplePath","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","toASCII","ae","esc","qm","relative","resolveObject","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","hasTrailingSlash","up","isAbsolute","config","isArgumentsObject","isGeneratorFunction","isTypedArray","uncurryThis","BigIntSupported","SymbolSupported","ObjectToString","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","isArrayBuffer","working","isDataViewToString","isDataView","isPromise","isArrayBufferView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isFloat32Array","isFloat64Array","isBigInt64Array","isBigUint64Array","SharedArrayBufferCopy","isSharedArrayBufferToString","isSharedArrayBuffer","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","isBoxedPrimitive","isAnyArrayBuffer","descriptors","debugEnvRegex","debugEnv","isNativeError","kCustomPromisifiedSymbol","callbackifyOnRejected","newReason","promiseResolve","promiseReject","callbackify","callbackified","maybeCb","rej","availableTypedArrays","typedArrays","superProto","getter","trySlices","tryTypedArrays","StructError","failure","failures","explanation","validate","Struct","error_js_1","struct","tuples","shiftIterator","innerTuple","validator","refiner","coercer","toFailures","trimmed","defaulted","struct_js_1","types_js_1","fallback","unknown","changed","refine","pattern","nonempty","empty","getSize","refinement","threshold","exclusive","minimum","maximum","of","record","optional","nullable","never","intersection","enums","any","utilities_js_1","Element","arrayValue","print","description","Class","Structs","constant","valueType","Key","Value","mapKey","mapValue","knowns","Never","unknowns","objectKey","objectValue","setValue","InnerStruct","coerced","pick","partial","omit","lazy","dynamic","deprecated","schemas","subschema","isStruct","toFailure","branch","isIterable","validationResult","innerKey","innerValue","innerStruct","assertExhaustive","assertStruct","getError","ErrorWrapper","errorPrefix","getErrorMessageWithoutTrailingPeriod","_object","assert_1","paddingRequired","characterSet","createDataView","valueToBytes","bytesToBase64","assertIsBytes","hex_1","getPrecomputedHexValues","lookupTable","getPrecomputedHexValuesBuilder","hexadecimal","strippedValue","normalizedValue","bigIntFits","normalizedValues","toCaipChainId","parseCaipAccountId","parseCaipChainId","isCaipAssetId","isCaipAssetType","isCaipAccountAddress","isCaipAccountId","isCaipReference","isCaipNamespace","isCaipChainId","KnownCaipNamespace","CaipAssetIdStruct","CaipAssetTypeStruct","CaipAccountAddressStruct","CaipAccountIdStruct","CaipReferenceStruct","CaipNamespaceStruct","CaipChainIdStruct","CAIP_ASSET_ID_REGEX","CAIP_ASSET_TYPE_REGEX","CAIP_ACCOUNT_ADDRESS_REGEX","CAIP_ACCOUNT_ID_REGEX","CAIP_REFERENCE_REGEX","CAIP_NAMESPACE_REGEX","CAIP_CHAIN_ID_REGEX","caipChainId","caipAccountId","accountAddress","ChecksumStruct","base64_1","createHex","createNumber","NumberLikeStruct","NumberCoercer","BigIntCoercer","BytesCoercer","HexCoercer","_FrozenMap_map","_FrozenSet_set","__classPrivateFieldGet","__classPrivateFieldSet","FrozenSet","FrozenMap","callbackfn","value2","_set","member","wrapError","isErrorWithStack","isErrorWithMessage","isErrorWithCode","pony_cause_1","misc_1","getChecksumAddress","isValidHexAddress","assertIsStrictHexString","HexChecksumAddressStruct","HexAddressStruct","HexStruct","unPrefixed","unPrefixedHash","nibbleIndex","hashCharacter","possibleChecksum","possibleAddress","getJsonRpcIdValidator","assertIsJsonRpcError","isJsonRpcError","assertIsJsonRpcFailure","isJsonRpcFailure","assertIsJsonRpcSuccess","isJsonRpcSuccess","assertIsJsonRpcResponse","isJsonRpcResponse","assertIsPendingJsonRpcResponse","isPendingJsonRpcResponse","JsonRpcResponseStruct","JsonRpcFailureStruct","JsonRpcSuccessStruct","PendingJsonRpcResponseStruct","assertIsJsonRpcRequest","isJsonRpcRequest","assertIsJsonRpcNotification","isJsonRpcNotification","JsonRpcNotificationStruct","JsonRpcRequestStruct","JsonRpcParamsStruct","JsonRpcErrorStruct","JsonRpcIdStruct","JsonRpcVersionStruct","jsonrpc2","getJsonSize","getSafeJson","isValidJson","JsonStruct","UnsafeJsonStruct","exactOptional","hasOptional","validateJson","json","propKey","permitEmptyString","permitFractions","permitNull","createModuleLogger","createProjectLogger","globalLogger","projectName","projectLogger","moduleName","isASCII","JsonSize","calculateNumberSize","calculateStringSize","ESCAPE_CHARACTERS_REGEXP","getKnownPropertyNames","isNonEmptyArray","objectToCheck","hexToBigInt","createDeferredPromise","suppressUnhandledRejection","innerResolve","innerReject","Duration","timeSince","inMilliseconds","assertIsNonNegativeInteger","isNonNegativeInteger","duration","timestamp","satisfiesVersionRange","gtRange","gtVersion","assertIsSemVerRange","assertIsSemVerVersion","isValidSemVerRange","isValidSemVerVersion","VersionRangeStruct","VersionStruct","semver_1","versionRange","possibleNames","uint8ArrayStringified","assertUint8Array","areUint8ArraysEqual","isFileInstance","File","isBufferOrStringWithName","isObjectWithKeys","isFileBufferOrStringEqual","input1","input2","lastModified","isFileOrUint8Array","extractObjectFiles","files","replaceObjectFilesWithUris","uris","replaceObjectGatewayUrlsWithSchemes","upload","cleaned","uris_","value_","value__","space","form_","FormData","fileNames","form","fileNameToFileMap","fileName","fileData","rewriteFileNames","extensions","extensionStartIndex","fileStartNumber","filepath","uploadWithoutDirectory","append","metadata","keyvalues","wrapWithDirectory","fName","buildFormData","platform","uploadBatch","client","LruMap","maxSize","operatingSystemRules","detectPlatform","product","detectOS","ua","ii","IS_DEV","DEFAULT_REQUEST_TIMEOUT","getClientFetch","ecosystem","requestTimeoutMs","restInit","abortTimeout","IS_THIRDWEB_URL_CACHE","THIRDWEB_DOMAINS","isThirdwebUrl","authToken","clientId","isPayUrl","isInAppWalletUrl","isBundlerUrl","partnerId","previousPlatform","bundleId","Application","applicationId","parseOs","SDK_NAME","getPlatformHeaders","finally","osLowerCased","isJWT","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","definition","chunkId","promises","script","needAttach","scripts","getElementsByTagName","createElement","nc","setAttribute","onScriptComplete","doneFns","parentNode","removeChild","appendChild","nmd","paths","children","scriptUrl","importScripts","currentScript","tagName","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","chunkLoadingGlobal","checkType","argument","resolveProperties","accum","HEX","isCallException","makeError","info","shortMessage","details","assertArgumentCount","expectedCount","_normalizeForms","assertNormalize","operation","assertPrivate","givenGuard","guard","className","_getBytes","getBytesCopy","isBytesLike","HexCharacters","hexlify","datas","dataLength","zeroPad","BN_0","BN_1","toTwos","_value","_width","width","fault","getUint","Nibbles","toBigInt","toBeHex","toBeArray","toQuantity","WordSize","Padding","passProperties","_guard","resultNames","getNames","setNames","throwError","toObject","deep","Result","getValue","nameCounts","proxy","_names","fromItems","Coder","localName","_throwError","Writer","appendWriter","writer","writeBytes","paddingOffset","writeValue","writeUpdatableValue","Reader","allowLoose","maxInflation","consumed","bytesRead","alignedLength","subReader","readBytes","readValue","readIndex","u8a","locked","_keccak256","__keccak256","lock","register","BN_36","chars","expanded","ibanLookup","Base36","ibanChecksum","fromBase36","_gaurd","signed","Typed","_typedSymbol","for","gaurd","defaultValue","minValue","isData","tupleName","uint16","uint24","uint32","uint40","uint48","uint56","uint64","uint72","uint80","uint88","uint96","uint104","uint112","uint120","uint128","uint136","uint144","uint152","uint160","uint168","uint176","uint184","uint192","uint200","uint208","uint216","uint224","uint232","uint240","uint248","uint256","uint","int8","int16","int24","int32","int40","int48","int56","int64","int72","int80","int88","int96","int104","int112","int120","int128","int136","int144","int152","int160","int168","int176","int184","int192","int200","int208","int216","int224","int232","int240","int248","int256","bytes1","bytes2","bytes3","bytes4","bytes5","bytes6","bytes7","bytes8","bytes9","bytes10","bytes11","bytes12","bytes13","bytes14","bytes15","bytes16","bytes17","bytes18","bytes19","bytes20","bytes21","bytes22","bytes23","bytes24","bytes25","bytes26","bytes27","bytes28","bytes29","bytes30","bytes31","bytes32","isTyped","dereference","AddressCoder","AnonymousCoder","coder","coders","arrayValues","unique","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","baseOffset","baseReader","offsetReader","baseType","ArrayCoder","defaultChild","BooleanCoder","DynamicBytesCoder","BytesCoder","FixedBytesCoder","NullCoder","BN_MAX_UINT256","NumberCoder","maxUintValue","bounds","fromTwos","ignoreFunc","badCodepoint","Utf8ErrorFuncs","ignore","toUtf8Bytes","pair","toUtf8String","onError","_bytes","extraLength","overlongMask","nextChar","getUtf8CodePoints","StringCoder","TupleCoder","uniqueNames","setify","KwVisibDeploy","_kwVisib","KwVisib","_kwTypes","KwTypes","_kwModifiers","KwModifiers","Keywords","SimpleTokens","regexWhitespacePrefix","regexNumberPrefix","regexIdPrefix","regexId","regexType","TokenString","linkBack","linkNext","popKeyword","peek","popType","popParen","popParams","link","peekKeyword","peekType","lex","commas","allowSingle","included","consumeName","keyword","consumeKeywords","keywords","consumeMutability","modifiers","consumeParams","allowIndexed","ParamType","consumeGas","consumeEoi","regexArrayType","verifyBasicType","ParamTypeInternal","ErrorFragmentInternal","EventFragmentInternal","ConstructorFragmentInternal","FallbackFragmentInternal","FunctionFragmentInternal","StructFragmentInternal","indexed","components","arrayChildren","isTuple","isIndexable","walk","childType","param","walkAsync","isParamType","bracket","arrayMatch","Fragment","inputs","ConstructorFragment","ErrorFragment","EventFragment","FallbackFragment","FunctionFragment","StructFragment","isConstructor","isFragment","isEvent","NamedFragment","joinParams","anonymous","topicHash","getTopicHash","payable","gas","stateMutability","errorObj","mutability","outputs","getSelector","PanicReasons","paramTypeBytes","paramTypeNumber","defaultCoder","defaultMaxInflation","AbiCoder","getDefaultValue","_setDefaultMaxInflation","defaultAbiCoder","getBuiltinCallException","action","abiCoder","revert","transaction","invocation","isAddressable","checkAddress","resolveAddress","resolveName","BN__1","hexTrue","hexFalse","domainFieldTypes","verifyingContract","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","hexPadRight","fields","splitArray","TypedDataEncoder","_types","links","parents","subtypes","primaryTypes","checkCircular","st","getEncoder","subEncoder","encodedType","_visit","visit","getPrimaryType","hashDomain","domainFields","resolveNames","ensCache","getPayload","domainValues","domainTypes","typesWithDomain","accessSetify","storageKeys","storageKey","accessListify","localeCompare","createGetUrl","_signal","cancelled","allowInsecureAuthentication","timer","resp","respBody","defaultGetUrlFunc","reData","reIpfs","dataGatewayFunc","FetchResponse","textData","atob","decodeBase64","FetchRequest","getIpfsGatewayFunc","baseUrl","Gateways","fetchSignals","FetchCancelSignal","checkSignal","hasBody","encodeBase64","allowGzip","clearHeaders","setCredentials","preflightFunc","preflight","processFunc","retryFunc","retry","getUrlFunc","slotInterval","maxAttempts","setThrottleParams","attempt","expires","delay","_request","makeServerError","wait","scheme","throttle","assertOk","retryAfter","trunc","stall","cancel","lockConfig","getGateway","registerGateway","registerGetUrl","getUrl","createGetUrlFunc","createDataGateway","createIpfsGatewayFunc","bodyText","bodyJson","throwThrottleError","requestUrl","responseBody","responseStatus","ZeroAddress","LogDescription","fragment","topic","TransactionDescription","ErrorDescription","Indexed","_isIndexed","isIndexed","BuiltinErrors","Interface","fragments","deploy","receive","abi","frags","getAbiCoder","bucket","minimal","formatJson","forceUnique","matching","lastValue","valueLength","allowOptions","lastArg","getFunctionName","hasFunction","forEachFunction","eventTopic","getEventName","hasEvent","getEvent","forEachEvent","forEachError","_decodeParams","_encodeParams","encodeDeploy","decodeErrorResult","encodeErrorResult","decodeFunctionData","encodeFunctionData","decodeFunctionResult","ef","parseTransaction","encodeFunctionResult","encodeFilterTopics","topics","encodeTopic","encodeEventLog","dataTypes","dataValues","decodeEventLog","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","parseCallResult","parseLog","parseError","hexData","toJson","FeeData","gasPrice","maxFeePerGas","maxPriorityFeePerGas","_type","copyRequest","bigIntKeys","numberKeys","accessList","blockTag","enableCcipRead","customData","blobVersionedHashes","kzg","blobs","Block","parentHash","parentBeaconBlockRoot","difficulty","gasLimit","gasUsed","stateRoot","receiptsRoot","blobGasUsed","excessBlobGas","miner","prevRandao","extraData","baseFeePerGas","transactions","TransactionResponse","prefetchedTransactions","txs","getTransaction","indexOrHash","getPrefetchedTransaction","isMined","isLondon","orphanedEvent","orphan","Log","transactionHash","blockHash","blockNumber","removed","transactionIndex","getBlock","getTransactionReceipt","receipt","removedEvent","TransactionReceipt","contractAddress","logsBloom","cumulativeGasUsed","blobGasPrice","logs","effectiveGasPrice","fee","getResult","getTransactionResult","confirmations","getBlockNumber","createRemovedTransactionFilter","reorderedEvent","createReorderedTransactionFilter","maxFeePerBlobGas","_confirms","_timeout","confirms","startBlock","nextScan","stopScanning","checkReplacement","getTransactionCount","mined","replacement","replaceableTransaction","checkReceipt","waiter","cancellers","txListener","replaceListener","isLegacy","isBerlin","isCancun","EventPayload","EventLog","interface","iface","eventName","eventSignature","UndecodedEventLog","ContractTransactionReceipt","ContractTransactionResponse","ContractUnknownEventPayload","contract","ContractEventPayload","_log","canCall","canEstimate","canResolve","canSend","getResolver","PreparedTopicFilter","runner","getRunner","resolvedArgs","getTopicFilter","feature","copyOverrides","_overrides","buildWrappedFallback","populateTransaction","noValue","noData","sendTransaction","_contract","estimateGas","staticCall","internalValues","getInternal","getSubInfo","topicHashify","hasSub","subs","getSub","foundFragment","_foundFragment","starting","stop","started","lastEmit","payloadFunc","resultPromise","passArgs","_emit","BaseContract","filters","_deployTx","addrPromise","deployTx","connect","attach","getDeployedCode","getCode","waitForDeployment","deploymentTransaction","checkCode","getFragment","_runner","resolveArgs","staticCallResult","buildWrappedMethod","buildWrappedEvent","queryTransaction","queryFilter","fromBlock","toBlock","getLogs","buildClass","Contract","_ContractBase","FENCED","read_compressed_payload","read_payload","u16","symbol_count","pos_payload","read_width","read_buffer","read_bit","HALF","QRTR","mid","decode_arithmetic","unsafe_atob","read_deltas","read_sorted","read_sorted_arrays","read_array_while","read_mapped","read_linear_table","read_replacement_table","flat","read_transposed","dx","dy","vN","flatMap","j_dy","quote_cp","cp","hex_cp","str_from_cps","cps","fromCodePoint","compare_arrays","S0","L0","V0","unpack_cc","unpack_cp","SHIFTED_RANK","EXCLUSIONS","DECOMP","RECOMP","is_hangul","compose_pair","V_COUNT","recomp","decomposed","init$1","check_order","cc","s_index","v_index","t_index","prev_cc","nfd","nfc","prev_cp","composed","composed_from_decomposed","Array_from","group_has_cp","Emoji","is_emoji","MAPPED","IGNORED","CM","NSM","ESCAPE","NFC_CHECK","GROUPS","WHOLE_VALID","WHOLE_MAP","VALID","EMOJI_LIST","EMOJI_ROOT","read_sorted_array","read_sorted_set","set_add_many","unrestricted","read_chunked","wholes","V","recs","gs","complement","multi","add_to_union","sorted","saved","read_trie","quoted_cp","should_escape","bidi_qq","safe_str_from_cps","quoter","nf","codePointAt","explode_cp","emoji","consume_emoji_reversed","error_disallowed","tokens_from_str","token_count","norm","check_leading_underscore","check_label_extension","error_placement","check_fenced","error_group_member","determine_group","check_group","group","maker","shared","whole","check_whole","quoted","gg","where","filter_fe0f","eaten","Zeros","checkComponent","ensNameSplit","flatten","ens_normalize","ensNormalize","namehash","dnsEncode","_maxLength","pbkdf2","DK","PRF","PRFSalt","_password","_salt","asyncTick","pbkdf2Init","prfW","ti","Ti","setInt32","ui","pbkdf2Output","SHA2","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","CHIh","CHIl","T1ll","T1h","T1l","MAJh","MAJl","All","sha512","anyGlobal","getGlobal","createHash","_sha256","_sha512","__sha256","__sha512","locked256","locked512","ZeroHash","BN_2","BN_27","BN_28","BN_35","toUint256","networkV","legacyChainId","getChainId","yParity","yParityAndS","compactSerialized","bv","getChainIdV","getNormalizedV","assertError","_r","SigningKey","computePublicKey","compressedPublicKey","computeSharedSecret","compressed","secpSig","addPoints","p0","p1","pub0","pub1","hexlifyByte","unarrayifyInteger","_decodeChildren","childOffset","lengthLength","decodeRlp","arrayifyInteger","_encode","encodeRlp","computeAddress","pubkey","BN_MAX_UINT","BLOB_SIZE","getVersionedHash","versioned","handleAddress","handleAccessList","handleNumber","handleUint","formatNumber","formatAccessList","formatHashes","_parseEipSignature","Transaction","typeName","_blobs","versionedHashes","blob","padded","commit","blobToKzgCommitment","proof","computeBlobKzgProof","commitment","unsignedHash","unsignedSerialized","sidecar","inferType","legacy","_serializeLegacy","_serializeEip2930","_serializeEip1559","_serializeEip4844","inferTypes","hasGasPrice","hasFee","hasAccessList","hasBlob","_parseLegacy","_parseEip2930","_parseEip1559","fBlobs","fCommits","fProofs","_parseEip4844","Alphabet","Lookup","getAlpha","BN_58","encodeBase58","getIpfsLink","MulticoinProviderPlugin","proivder","supportsCoinType","coinType","encodeAddress","decodeAddress","matcherIpfs","matchers","EnsResolver","supportsWildcard","supportsInterface","funcName","ethCoinType","coinPlugin","plugin","plugins","getText","getContentHash","ipfs","swarm","getAvatar","_getAvatar","linkage","avatar","owner","tokenId","tokenOwner","ownerOf","balanceOf","metadataUrl","imageUrl","image","getEnsAddress","network","getNetwork","ensPlugin","getPlugin","ensAddr","fromName","currentName","allowNull","nullValue","arrayOf","altNames","srcKey","altKey","formatData","formatHash","_formatLog","_formatBlock","_formatReceiptLog","_formatTransactionReceipt","formatTransactionResponse","creates","nonceHex","getCreateAddress","NetworkPlugin","GasCostPlugin","effectiveBlock","txBase","txCreate","txDataZero","txDataNonzero","txAccessListStorageKey","txAccessListAddress","costs","nullish","EnsPlugin","targetNetwork","FetchUrlFeeDataNetworkPlugin","Networks","Network","attachPlugin","getPlugins","basename","computeIntrinsicGas","registerEth","ensNetwork","injected","getGasStationPlugin","injectCommonNetworks","networkFunc","ensAddress","nameOrChainId","parseUnits","decimals","frac","fetchFeeData","_feeData","standard","maxFee","maxPriorityFee","PollingBlockSubscriber","pollingInterval","_setTimeout","_clearTimeout","dropWhilePaused","OnBlockSubscriber","_poll","PollingBlockTagSubscriber","PollingOrphanSubscriber","PollingTransactionSubscriber","PollingEventSubscriber","getTag","UnmanagedSubscriber","concisify","getSubscription","_event","addresses","addAddress","defaultOptions","cacheTimeout","AbstractProvider","_network","disableCcipRead","_perform","perform","ccipReadFetch","calldata","urls","errorMessages","errorMessage","_wrapBlock","formatBlock","_wrapLog","formatLog","_wrapTransactionReceipt","formatTransactionReceipt","_wrapTransactionResponse","_detectNetwork","_getAddress","_getBlockTag","_getFilter","_address","_getTransactionRequest","detectNetwork","networkPromise","getFeeData","getFeeDataFunc","_block","priorityFee","feeData","_tx","txSender","ccipArgs","errorArgs","urlsOffset","urlsLength","urlsData","_parseString","_parseBytes","parseOffchainLookup","ccipResult","encodeBytes","_blockTag","getBalance","getStorage","_position","broadcastTransaction","signedTx","signedTransaction","includeTransactions","prefetchTxs","_filter","_getProvider","lookupAddress","ensContract","resolverContract","waitForTransaction","waitForBlock","timerId","_func","_forEachSubscriber","subscriber","_getSubscriber","_recoverSubscriber","oldSub","newSub","emitArgs","subscription","addressableMap","nameMap","numPad","bytesPad","byteCount","checkProvider","signer","populate","AbstractSigner","getNonce","populateCall","hasEip1559","txObj","signTransaction","VoidSigner","signMessage","FilterIdSubscriber","_subscribe","_emitResults","_recover","filterId","filterIdPromise","FilterIdEventSubscriber","FilterIdPendingSubscriber","Primitive","deepCopy","getLowerCase","isPollable","polling","staticNetwork","batchStallTime","batchMaxSize","batchMaxCount","JsonRpcSigner","sendUncheckedTransaction","_from","_to","hexTx","getRpcTransaction","timeouts","invalids","checkTx","sendTransactionHash","_message","populated","unlock","_legacySignMessage","JsonRpcApiProvider","stallTime","_getOption","payloads","batch","_send","getRpcError","_resolve","getRpcRequest","ready","_start","_waitUntilReady","dstKey","spelunkData","_spelunkMessage","spelunkMessage","eth_sign","personal_sign","eth_signTypedData_v4","eth_signTransaction","eth_sendTransaction","eth_requestAccounts","wallet_requestAccounts","unsupported","getSigner","accountsPromise","accounts","account","listAccounts","JsonRpcApiPollingProvider","JsonRpcProvider","_getConnection","BaseWallet","signingKey","btx","signMessageSync","hashMessage","_computeHmac","_algo","createHmac","__computeHmac","computeHmac","Rho","Id","idxL","idxR","shifts","shiftsL","shiftsR","Kl","Kr","BUF","rGroup","hbl","hbr","rr","tr","ripemd160","_ripemd160","__ripemd160","_randomBytes","__randomBytes","unfold","sep","initial","Wordlist","locale","phrase","WordlistOwl","_decodeWords","subsChrs","clumps","semi","getWord","getWordIndex","wordlist","LangEn","_pbkdf2","keylen","pbkdf2Sync","__pbkdf2","getUpperMask","mnemonicToEntropy","mnemonic","entropy","entropyBits","checksumMask","entropyToMnemonic","remainingBits","checksumBits","Mnemonic","computeSeed","fromPhrase","fromEntropy","_entropy","entropyToPhrase","phraseToEntropy","isValidMnemonic","_AES_key","_AES_Kd","_AES_Ke","numberOfRounds","rcon","Si","T3","T4","T5","T6","T7","T8","U3","U4","convertToInt32","roundKeyCount","KC","tt","rconpointer","plaintext","ModeOfOperation","cls","aes","_CBC_iv","_CBC_lastBlock","_CTR_remaining","_CTR_remainingIndex","_CTR_counter","initialValue","setCounterValue","setCounterBytes","increment","crypttext","XorAndSalsa","pi","oi","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y11","y12","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","BlockMix","scryptInit","maxmem","onProgress","blockSize32","memUsed","B32","blockMixCb","totalBlockMix","callbackPer","blockMixCnt","scryptOutput","lockedSync","lockedAsync","_scryptAsync","passwd","Pi","_scryptSync","__scryptAsync","__scryptSync","_passwd","progress","scryptSync","uuidV4","looseArrayify","zpad","getPassword","spelunk","_path","reqd","defaultPath","isKeystoreJson","getAccount","mnemonicKey","mnemonicCiphertext","mnemonicIv","mnemonicAesCtr","getDecryptKdfParams","prf","getEncryptKdfParams","scrypt","_encryptKeystore","uuidRandom","uuid","macPrefix","Crypto","cipherparams","kdfparams","dklen","gethFilename","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","mnemonicCounter","encryptKeystoreJsonSync","passwordBytes","encryptKeystoreJson","progressCallback","MasterSecret","HardenedBit","encodeBase58Check","ser_I","chainCode","IL","IR","derivePath","component","deriveChild","HDNodeWallet","fingerprint","parentFingerprint","encryptSync","extendedKey","hasPath","neuter","HDNodeVoidWallet","_index","ki","_seed","fromExtendedKey","decodeBase58","createRandom","fromMnemonic","isCrowdsaleJson","encseed","decryptCrowdsaleJson","encryptedSeed","padder","pkcs7Strip","seedHex","Wallet","wallet","fromEncryptedJson","decryptKeystoreJson","fromEncryptedJsonSync","decryptKeystoreJsonSync","download","uri","resolveArweaveScheme","gateway","gatewayUrl","cid","firstIndex","findIPFSCidFromUri","resolveScheme","keepalive","BaseError","docsPath","docs","metaMessages","size_","givenSize","padRight","hex_","targetSize","InvalidHexTypeError","replacer","InvalidHexValueError","SizeOverflowError","SizeExceedsPaddingSizeError","charCodeMap","charCodeToBase16","paddedBytes","hexToUint8Array","nibbleLeft","nibbleRight","uint8ArrayToHex","_regeneratorRuntime","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","mark","awrap","rval","handle","complete","delegateYield","asyncGeneratorStep","_asyncToGenerator","_next","_throw","fitnessContract","sigUtil","CONTRACT_ABI","ethereum","realClientId","cId","computeClientIdFromSecretKey","createThirdwebClient","_callee2","_context2","ethers","getMetaMaskEncryptionPublicKey","_getMetaMaskEncryptionPublicKey","_callee3","_context3","encryptMessage","decryptMessage","_x","_decryptMessage","_callee4","_provider","_context4","uploadToIPFS","_x2","_uploadToIPFS","_callee5","ipfsHash","_context5","retrieveFromIPFS","_x3","_retrieveFromIPFS","_callee6","jsonContent","_context6","_handleFileSelection","_callee9","_context9","FileReader","displayJson","getElementById","disabled","readAsText","_handleDefaultSelection","_callee10","_context10","elementId","jsonOutput","textContent","display","_handleFileUpload","_callee11","fileContent","_encryptIPFSHash","encryptedHash","encryptionKey","encryptedAESKey","_context11","displayValue","updateProgressBar","storeFitnessData","alert","_retrieveAndDecryptData","_callee12","userFitnessData","_userFitnessData$at","decryptedAESKey","decryptedIPFSHash","_context12","getUserFitnessData","at","uploadValues","valueElement","progressBar","_x9","_callee","_context","innerHTML"],"sourceRoot":""}