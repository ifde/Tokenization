"use strict";(self.webpackChunktokenization=self.webpackChunktokenization||[]).push([[267],{2267:(t,e,o)=>{o.d(e,{uploadBatch:()=>s});let r={rpc:"rpc.thirdweb.com",inAppWallet:"embedded-wallet.thirdweb.com",social:"social.thirdweb.com",pay:"pay.thirdweb.com",storage:"storage.thirdweb.com",bundler:"bundler.thirdweb.com",analytics:"c.thirdweb.com"};const a=()=>r;var i=o(412);async function s(t,e,o,r){const s=await(0,i.KI)(t)(`https://${a().storage}/ipfs/upload`,{method:"POST",headers:{},body:e});if(!s.ok){if(s.body?.cancel(),401===s.status)throw new Error("Unauthorized - You don't have permission to use this service.");if(402===s.status)throw new Error("You have reached your storage limit. Please add a valid payment method to continue using the service.");if(403===s.status)throw new Error("Forbidden - You don't have permission to use this service.");throw new Error(`Failed to upload files to IPFS - ${s.status} - ${s.statusText}`)}const d=(await s.json()).IpfsHash;if(!d)throw new Error("Failed to upload files to IPFS - Bad CID");return r?.uploadWithoutDirectory?[`ipfs://${d}`]:o.map((t=>`ipfs://${d}/${t}`))}}}]);